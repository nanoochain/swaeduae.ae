=== SWAED UAE Full Inventory (2025-08-20_094817) ===

## WEBROOT (.):
total 26M
drwxr-xr-x 11 vminingc nobody   4.0K Aug 20 07:06 .
drwx--x--x 54 vminingc vminingc 4.0K Aug 18 07:14 ..
drwxr-xr-x  3 vminingc vminingc 4.0K Aug  4 12:19 .well-known
drwxrwxr-x  4 vminingc vminingc 4.0K Aug 17 12:09 _backups
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 16 10:17 backups
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 20 05:38 files_audit_2025-08-20_053833
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  4 11:25 js
drwxr-xr-x 46 vminingc vminingc  12K Aug 20 09:31 laravel-app
drwxr-xr-x  7 vminingc vminingc 4.0K Aug  6 14:35 public
drwxrwxr-x  4 vminingc vminingc 4.0K Aug  4 18:25 resources
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 15 15:16 sql
-rw-r--r--  1 vminingc vminingc  599 Aug  5 06:49 .env
-rw-rw-r--  1 vminingc vminingc 1.3K Aug 20 07:06 .htaccess
-rw-rw-r--  1 vminingc vminingc 1.6K Aug 19 18:24 .htaccess.bak.2025-08-20_070608
-rw-rw-r--  1 vminingc vminingc  337 Aug 19 18:24 .htaccess.bak_20250819182449
-rw-rw-r--  1 vminingc vminingc  650 Aug 17 10:17 .htaccess.hardening.2025-08-17-101751
-rw-rw-r--  1 vminingc vminingc   18 Aug 10 16:06 .user.ini
-rw-r--r--  1 vminingc vminingc 3.2M Aug 20 05:21 .well-known.zip
-rw-rw-r--  1 vminingc vminingc  48K Aug 17 18:36 admin-blades-backup-2025-08-17_183625.tar.gz
-rw-rw-r--  1 vminingc vminingc  47K Aug 16 10:17 delete_manifest.backup_like.2025-08-16-101756.txt
-rw-rw-r--  1 vminingc vminingc 3.3M Aug 16 10:17 delete_manifest.backups.2025-08-16-101727.txt
-rwxrwxr-x  1 vminingc vminingc 3.3K Aug  4 16:07 enable_debug_and_patch.sh
-rw-r--r--  1 vminingc vminingc  27K Aug  5 06:10 error_log
-rw-rw-r--  1 vminingc vminingc 4.1M Aug  4 12:41 full-file-list.txt
-rw-rw-r--  1 vminingc vminingc 3.9M Aug 10 16:08 full_project_list.txt
-rw-rw-r--  1 vminingc vminingc 4.6M Aug 10 16:42 full_project_list_2025-08-10.txt
-rw-rw-r--  1 vminingc vminingc  356 Aug  4 11:34 index.php
-rw-r--r--  1 vminingc vminingc 3.1M Aug 16 14:38 js.zip
-rw-rw-r--  1 vminingc vminingc  128 Aug 15 14:06 reset_org_password.sql
-rw-rw-r--  1 vminingc vminingc  145 Aug 18 07:46 robots.txt
-rw-rw-r--  1 vminingc vminingc   65 Aug 18 07:14 robots.txt.bak.2025-08-18-073155
-rw-rw-r--  1 vminingc vminingc   80 Aug 18 07:31 robots.txt.bak_2025-08-18-074608
-rwxrwxr-x  1 vminingc vminingc 4.3K Aug 17 10:28 stabilize.sh
-rw-rw-r--  1 vminingc vminingc 3.0M Aug  4 14:30 swaeduae_filelist.txt
-rw-rw-r--  1 vminingc vminingc 305K Aug  7 07:01 swaeduae_full_file_list.txt
-rw-rw-r--  1 vminingc vminingc 1.1K Aug  4 17:19 web.php

## WEBROOT .htaccess (first 120):
     1	# BEGIN swaeduae.ae hardening (no rewrite)
     2	<IfModule mod_authz_core.c>
     3	  <FilesMatch "^(\.env|artisan|composer\.(json|lock)|server\.php|phpunit\.xml)$">
     4	    Require all denied
     5	  </FilesMatch>
     6	</IfModule>
     7	RedirectMatch 403 /\.(.*)$
     8	RedirectMatch 404 ^/(app|bootstrap|config|database|resources|routes|storage)/
     9	# END swaeduae.ae hardening
    10	
    11	### P13: Security headers
    12	<IfModule mod_headers.c>
    13	  Header always set X-XSS-Protection "0"
    14	</IfModule>
    15	
    16	### P13: Compression
    17	<IfModule mod_deflate.c>
    18	  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json image/svg+xml
    19	</IfModule>
    20	
    21	### P13: Long cache for static assets
    22	<IfModule mod_expires.c>
    23	  ExpiresActive On
    24	  ExpiresDefault "access plus 7 days"
    25	  ExpiresByType text/css "access plus 1 year"
    26	  ExpiresByType application/javascript "access plus 1 year"
    27	  ExpiresByType image/svg+xml "access plus 1 year"
    28	  ExpiresByType image/webp "access plus 1 year"
    29	  ExpiresByType image/png "access plus 1 year"
    30	  ExpiresByType image/jpeg "access plus 1 year"
    31	  ExpiresByType font/woff2 "access plus 1 year"
    32	</IfModule>
    33	<IfModule mod_headers.c>
    34	  <FilesMatch "\.(css|js|svg|webp|png|jpg|jpeg|woff2)$">
    35	    Header set Cache-Control "public, max-age=31536000, immutable"
    36	  </FilesMatch>
    37	</IfModule>

## LARAVEL-APP (ls):
total 819M
drwxr-xr-x 46 vminingc vminingc  12K Aug 20 09:31 .
drwxr-xr-x 11 vminingc nobody   4.0K Aug 20 07:06 ..
drwxrwxr-x  8 vminingc vminingc 4.0K Aug 19 08:11 .git
drwxrwxr-x  3 vminingc vminingc 4.0K Aug  5 14:38 .github
drwxrwxr-x  5 vminingc vminingc 4.0K Aug 20 05:47 _audit_2025-08-20_054735
drwxrwxr-x  8 vminingc vminingc 4.0K Aug 17 12:55 _backups
drwxrwxr-x  5 vminingc vminingc 4.0K Aug 16 15:29 _quarantine
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 20 06:21 _quarantine_2025-08-20_062130
drwxrwxr-x  3 vminingc vminingc 4.0K Aug 20 06:23 _quarantine_2025-08-20_062326
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 20 06:56 _quarantine_2025-08-20_065608
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 18 07:00 _reports
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 admin
drwxr-xr-x 17 vminingc vminingc 4.0K Aug 20 06:23 app
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 16 09:59 argon_tmp
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 19 19:31 backups
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 16 10:17 backups-2025-08-12-152311
drwxr-xr-x  3 vminingc vminingc 4.0K Aug 17 10:30 bootstrap
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 certificates
drwxr-xr-x  2 vminingc vminingc 4.0K Aug 20 08:56 config
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 dashboard
drwxr-xr-x  7 vminingc vminingc 4.0K Aug 16 15:13 database
drwxrwxr-x  3 vminingc vminingc 4.0K Aug 17 16:46 docs
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 events
drwxr-xr-x  5 vminingc vminingc 4.0K Aug 10 17:00 frontend
drwxr-xr-x  2 vminingc vminingc 4.0K Aug  4 12:08 js
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 kyc
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 news
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 opportunities
drwxrwxr-x  3 vminingc vminingc 4.0K Aug 17 16:39 ops
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 organization
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 profile
drwxr-xr-x 14 vminingc vminingc 4.0K Aug 20 09:11 public
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 regions
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 18 14:23 reports
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  8 05:56 reso
drwxr-xr-x  8 vminingc vminingc 4.0K Aug 19 08:11 resources
drwxr-xr-x  9 vminingc vminingc  16K Aug 20 08:52 routes
drwxr-xr-x  8 vminingc vminingc  16K Aug 16 10:17 routes.pre-orgfix.2025-08-16-0941
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 16 13:55 scripts
drwxrwxr-x  8 vminingc vminingc 4.0K Aug 18 12:01 storage
drwxrwxr-x  5 vminingc vminingc 4.0K Aug  6 08:28 swaeduae_updates
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 teams
drwxr-xr-x  4 vminingc vminingc 4.0K Aug  4 12:07 tests
drwxrwxr-x  6 vminingc vminingc 4.0K Aug 20 09:27 tools
drwxrwxr-x 44 vminingc vminingc 4.0K Aug 20 08:13 vendor
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 05:09 volunteer
-rw-rw-r--  1 vminingc vminingc    0 Aug 15 12:35 "
-rw-rw-r--  1 vminingc vminingc    0 Aug 14 08:52 ,
-rw-rw-r--  1 vminingc vminingc    0 Aug 14 07:28 -
-rw-------  1 vminingc vminingc 2.6K Aug 20 09:31 .env
-rw-------  1 vminingc vminingc 2.3K Aug 19 06:34 .env.bak
-rw-------  1 vminingc vminingc 1.8K Aug 15 05:01 .env.bak.2025-08-15_050157
-rw-------  1 vminingc vminingc 1.8K Aug 15 05:03 .env.bak.2025-08-15_050324
-rw-------  1 vminingc vminingc 2.0K Aug 15 09:25 .env.bak.2025-08-15_142828
-rw-------  1 vminingc vminingc 2.3K Aug 20 08:33 .env.bak.2025-08-20_083300
-rw-------  1 vminingc vminingc 2.4K Aug 20 08:36 .env.bak.2025-08-20_083606
-rw-------  1 vminingc vminingc 2.5K Aug 20 08:40 .env.bak.2025-08-20_084057
-rw-------  1 vminingc vminingc 2.5K Aug 20 08:44 .env.bak.2025-08-20_084449
-rw-------  1 vminingc vminingc 2.5K Aug 20 08:44 .env.bak.2025-08-20_091128
-rw-------  1 vminingc vminingc 2.6K Aug 20 09:27 .env.bak.2025-08-20_092702
-rw-------  1 vminingc vminingc 2.6K Aug 20 09:27 .env.bak.2025-08-20_093157
-rw-------  1 vminingc vminingc 2.1K Aug 17 10:31 .env.bak_2025-08-17_151325
-rw-rw-r--  1 vminingc vminingc  485 Aug  6 08:40 .env.example
-rw-r--r--  1 vminingc vminingc 427M Aug 17 09:34 .git.zip
-rw-rw-r--  1 vminingc vminingc  134 Aug 18 06:12 .gitignore
-rw-rw-r--  1 vminingc vminingc  408 Aug 18 09:27 .user.ini
-rw-rw-r--  1 vminingc vminingc    0 Aug 17 08:54 200
-rw-rw-r--  1 vminingc vminingc    0 Aug 17 08:54 302
-rw-rw-r--  1 vminingc vminingc    0 Aug 17 08:54 500
-rw-rw-r--  1 vminingc vminingc  352 Aug 12 14:37 AdminOpportunityController@export
-rw-rw-r--  1 vminingc vminingc  305 Aug  8 09:47 AppServiceProvider.php
-rw-rw-r--  1 vminingc vminingc 1.7K Aug 17 05:45 CHANGELOG.md
-rw-rw-r--  1 vminingc vminingc  362 Aug  7 15:32 IsAdmin.php
-rw-rw-r--  1 vminingc vminingc 2.1K Aug  7 15:33 Kernel.php
-rw-rw-r--  1 vminingc vminingc 1.4K Aug 17 05:45 NEXT_STEPS.md
-rw-rw-r--  1 vminingc vminingc  707 Aug  6 08:28 README.md
-rw-rw-r--  1 vminingc vminingc 6.3K Aug 17 17:00 TODO-NEXT.md
-rw-rw-r--  1 vminingc vminingc  694 Aug  7 18:04 UserController.php
-rw-rw-r--  1 vminingc vminingc    0 Aug 17 07:46 [
-rw-rw-r--  1 vminingc vminingc  67K Aug 20 05:54 _audit_2025-08-20_054735.tar.gz
-rw-rw-r--  1 vminingc vminingc  55M Aug 20 06:56 _finalize_2025-08-20_065608.tgz
-rw-rw-r--  1 vminingc vminingc  55M Aug 20 08:13 _finalize_2025-08-20_081334.tgz
-rw-rw-r--  1 vminingc vminingc  55M Aug 20 06:34 _postprovider_2025-08-20_063430.tgz
-rw-rw-r--  1 vminingc vminingc  55M Aug 20 06:04 _prechange_2025-08-20_060448.tgz
-rw-rw-r--  1 vminingc vminingc  11K Aug 16 15:29 _quarantine-backup-2025-08-16-152919.tgz
-rw-r--r--  1 vminingc vminingc 167M Aug 20 05:23 _quarantine.zip
-rw-rw-r--  1 vminingc vminingc  315 Aug  7 08:56 about.blade.php
-rwxrwxr-x  1 vminingc vminingc 7.5K Aug  7 07:39 add_missing_features.sh
-rw-r--r--  1 vminingc vminingc  12K Aug 15 13:43 an tinker
-rw-rw-r--  1 vminingc vminingc  713 Aug  7 05:57 app.blade.php
-rw-rw-r--  1 vminingc vminingc  722 Aug  4 17:27 app.css
-rwxrwxr-x  1 vminingc vminingc 3.5K Aug  9 06:28 apply_global_theme.sh
-rw-r--r--  1 vminingc vminingc  350 Aug  4 12:07 artisan
-rwxrwxr-x  1 vminingc vminingc  173 Aug  6 16:28 build_frontend.sh
-rw-rw-r--  1 vminingc vminingc    0 Aug 14 07:28 certificate,
-rw-rw-r--  1 vminingc vminingc    0 Aug 14 07:28 certificate.verify.view,
-rw-rw-r--  1 vminingc vminingc    0 Aug 14 08:52 certificate_number
-rw-rw-r--  1 vminingc vminingc   81 Aug 10 17:02 cleanup_deleted_files.log
-rw-rw-r--  1 vminingc vminingc    0 Aug 14 08:52 code
-rwxr-xr-x  1 vminingc vminingc 3.0M Aug 15 07:30 composer-local.phar
-rw-r--r--  1 vminingc vminingc 2.8K Aug 17 05:18 composer.json
-rw-r--r--  1 vminingc vminingc 397K Aug 17 05:18 composer.lock
-rw-rw-r--  1 vminingc vminingc  167 Aug  7 05:09 contact.blade.php
-rw-rw-r--  1 vminingc vminingc  926 Aug  8 09:47 database.php
-rw-rw-r--  1 vminingc vminingc    0 Aug 17 08:54 done
-rw-rw-r--  1 vminingc vminingc  708 Aug  8 04:58 dump_schema_audit.php
-rw-r--r--  1 vminingc vminingc 5.7K Aug 15 13:43 er->password = bcrypt("NewPass123!");
-rw-r--r--  1 vminingc vminingc 1.9K Aug 15 13:49 er->password = bcrypt('234026.Hg');
-rw-r--r--  1 vminingc vminingc 1.9K Aug 15 13:47 er->password = bcrypt('NewPass123!');
-rw-rw-r--  1 vminingc vminingc 131K Aug 20 09:20 error_log
-rw-rw-r--  1 vminingc vminingc  163 Aug  7 05:09 faq.blade.php
-rw-rw-r--  1 vminingc vminingc 765K Aug 10 17:10 file_list.txt
-rwxrwxr-x  1 vminingc vminingc  957 Aug  6 08:40 fix-images.sh
-rwxrwxr-x  1 vminingc vminingc  313 Aug  8 04:31 fix_admin_middleware.sh
-rwxrwxr-x  1 vminingc vminingc 4.0K Aug 14 08:27 fix_home_latest.sh
-rwxrwxr-x  1 vminingc vminingc 1.3K Aug  6 08:40 fix_images.sh
-rw-rw-r--  1 vminingc vminingc 7.2K Aug  8 04:56 fix_project_all.sh
-rw-rw-r--  1 vminingc vminingc 2.3K Aug  8 04:54 fix_routes_cleanup.sh
-rwxrwxr-x  1 vminingc vminingc 2.6K Aug 19 09:43 fix_swaeduae.sh
-rwxrwxr-x  1 vminingc vminingc 3.4K Aug  9 06:44 full_site_upgrade.sh
-rw-rw-r--  1 vminingc vminingc  113 Aug  6 08:40 grant_privileges.sql
-rw-rw-r--  1 vminingc vminingc  53K Aug 16 09:32 healthcheck.2025-08-16-0932.log
-rw-rw-r--  1 vminingc vminingc  31K Aug 16 09:37 healthcheck.2025-08-16-0936.log
-rw-rw-r--  1 vminingc vminingc  31K Aug 16 09:39 healthcheck.2025-08-16-0939.log
-rw-rw-r--  1 vminingc vminingc  31K Aug 16 09:43 healthcheck.2025-08-16-0943.log
-rw-rw-r--  1 vminingc vminingc  31K Aug 16 09:46 healthcheck.2025-08-16-0946.log
-rw-rw-r--  1 vminingc vminingc  31K Aug 16 09:48 healthcheck.2025-08-16-0948.log
-rw-rw-r--  1 vminingc vminingc  36K Aug 16 10:01 healthcheck.2025-08-16-1001.log
-rwxrwxr-x  1 vminingc vminingc 3.0K Aug 16 09:32 healthcheck.sh
-rw-rw-r--  1 vminingc vminingc    0 Aug 14 07:28 id,
-rw-r--r--  1 vminingc vminingc  393 Aug  4 12:08 index.php
-rw-rw-r--  1 vminingc vminingc  275 Aug  6 13:49 insert_default_settings.sql
-rw-rw-r--  1 vminingc vminingc   97 Aug  6 16:17 mark_settings_migration.sql
-rw-rw-r--  1 vminingc vminingc    0 Aug 16 15:48 name(s*'home's*)s*
-rw-rw-r--  1 vminingc vminingc    0 Aug 15 12:35 permission\s*=
-rw-r--r--  1 vminingc vminingc  893 Aug 15 08:03 phpunit.xml
-rw-rw-r--  1 vminingc vminingc 765K Aug 10 17:04 project_tree.txt
-rw-rw-r--  1 vminingc vminingc  67K Aug 19 08:50 roadmap_audit.txt
-rw-rw-r--  1 vminingc vminingc    0 Aug 19 08:42 roadmap_audit_2025-08-19_084242.txt
-rw-rw-r--  1 vminingc vminingc    0 Aug 19 08:42 roadmap_audit_2025-08-19_084247.txt
-rw-rw-r--  1 vminingc vminingc 137K Aug 15 07:10 routes-backup-2025-08-15-0710.tar.gz
-rw-rw-r--  1 vminingc vminingc 3.0M Aug 17 16:33 site-audit-output.txt
-rwxrwxr-x  1 vminingc vminingc 8.6K Aug 17 16:33 swaeduae_full_audit.sh
-rw-rw-r--  1 vminingc vminingc 4.0K Aug  5 02:48 swaeduae_updates.sh
-rw-rw-r--  1 vminingc vminingc    0 Aug 18 10:56 true
-rw-r--r--  1 vminingc vminingc 6.3K Aug  6 18:44 update_instructions.sh
-rw-rw-r--  1 vminingc vminingc  800 Aug 16 05:46 users_by_category.csv
-rw-rw-r--  1 vminingc vminingc    0 Aug 14 08:52 verification_code
-rw-rw-r--  1 vminingc vminingc  824 Aug  8 09:47 web.php
-rw-rw-r--  1 vminingc vminingc  167 Aug  7 05:09 welcome.blade.php

## public/ (ls):
total 300K
drwxr-xr-x 14 vminingc vminingc 4.0K Aug 20 09:11 .
drwxr-xr-x 46 vminingc vminingc  12K Aug 20 09:31 ..
-rw-rw-r--  1 vminingc vminingc 3.4K Aug 20 08:13 .htaccess
-rw-rw-r--  1 vminingc vminingc 3.0K Aug 18 09:30 .htaccess.bak.2025-08-20_070608
-rw-rw-r--  1 vminingc vminingc 2.8K Aug 20 07:06 .htaccess.bak.2025-08-20_081334
-rw-rw-r--  1 vminingc vminingc 3.4K Aug 20 08:13 .htaccess.bak.2025-08-20_084449
-rw-rw-r--  1 vminingc vminingc 1.2K Aug 14 06:34 .htaccess.bak_2025-08-18-080103
-rw-rw-r--  1 vminingc vminingc 2.8K Aug 18 08:01 .htaccess.bak_2025-08-18-092607
-rw-rw-r--  1 vminingc vminingc  297 Aug 20 08:13 .user.ini
-rw-rw-r--  1 vminingc vminingc   18 Aug 10 16:06 .user.ini.bak.2025-08-20_081334
drwxr-xr-x  3 vminingc vminingc 4.0K Aug  4 13:56 .well-known
-rw-rw-r--  1 vminingc vminingc 9.1K Aug 11 18:15 c
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 14 07:36 certificates
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 19 14:26 css
-rw-r--r--  1 vminingc vminingc  96K Aug 20 08:55 error_log
-rw-rw-r--  1 vminingc vminingc  291 Aug  5 10:48 hero-volunteer.svg
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  6 08:40 icons
drwxrwxr-x  4 vminingc vminingc 4.0K Aug 18 07:18 images
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  7 11:57 img
-rw-rw-r--  1 vminingc vminingc  356 Aug  4 12:20 index.php
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 15 15:40 js
-rw-rw-r--  1 vminingc vminingc  459 Aug  9 02:52 manifest.json
-rw-rw-r--  1 vminingc vminingc  143 Aug  6 14:39 opcache_clear.php
drwxrwxr-x  3 vminingc vminingc 4.0K Aug  6 08:40 partners
drwxrwxr-x  2 vminingc vminingc 4.0K Aug  4 12:21 pdfs
-rw-rw-r--  1 vminingc vminingc   17 Aug  5 09:03 phpinfo.php
-rw-rw-r--  1 vminingc vminingc   65 Aug 20 09:11 robots.txt
-rw-rw-r--  1 vminingc vminingc  119 Aug 18 12:35 robots.txt.bak.2025-08-20_091128
-rw-rw-r--  1 vminingc vminingc  363 Aug  9 02:52 service-worker.js
lrwxrwxrwx  1 vminingc vminingc   26 Aug 18 08:01 sitemap.xml -> sitemaps/sitemap-index.xml
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 18 07:36 sitemaps
lrwxrwxrwx  1 vminingc vminingc   21 Aug 17 14:15 storage -> ../storage/app/public
drwxrwxr-x  3 vminingc vminingc 4.0K Aug 14 09:35 uploads
drwxrwxr-x  5 vminingc vminingc 4.0K Aug 15 13:25 vendor

## storage/logs (latest 10):
total 13972
-rw-rw-r-- 1 vminingc vminingc    4104 Aug 20 09:48 heartbeat.log
-rw-r--r-- 1 vminingc vminingc    9802 Aug 20 09:45 healthcheck.log
-rw-rw-r-- 1 vminingc vminingc    7014 Aug 20 09:30 alerts.log
-rw-rw-r-- 1 vminingc vminingc     431 Aug 20 09:07 backup-2025-08-20.log
-rw-rw-r-- 1 vminingc vminingc   59926 Aug 20 09:00 laravel-2025-08-20.log
-rw-rw-r-- 1 vminingc vminingc    3276 Aug 20 08:00 schedule.cron.log
-rw-r--r-- 1 vminingc vminingc    7911 Aug 20 07:51 laravel-2025-08-20.log.1755677408.bak
-rw-rw-r-- 1 vminingc vminingc     110 Aug 20 07:36 queue.cron.log
-rw-r--r-- 1 vminingc vminingc   37099 Aug 20 07:03 laravel-2025-08-20.log.bak.2025-08-20_070803

## routes files:
routes/_admin_auth.php
routes/_admin_auth_fix.php
routes/_admin_dashboard_compat.php
routes/_admin_dashboard_override.php
routes/_admin_diag.php
routes/_admin_hours.php
routes/_admin_route_aliases.php
routes/_admin_users_fix.php
routes/_auth_aliases.php
routes/_auth_canonical.php
routes/_auth_overrides.php
routes/_early_auth_overrides.php
routes/_i18n.php
routes/_opportunities.php
routes/_org_register_fix.php
routes/_public.php
routes/_qr_public.php
routes/_scan.php
routes/admin.php
routes/api.php
routes/console.php
routes/events.php
routes/org.php
routes/org_shortlist.php
routes/web.php

## routes/web.php (first 200):
     1	<?php
     2	if (file_exists(__DIR__.'/_admin_auth.php')) require __DIR__.'/_admin_auth.php';
     3	use Illuminate\Http\Request;
     4	use Illuminate\Support\Facades\DB;
     5	
     6	Route::get('/healthz', fn () => response('ok', 200))->name('health');
     7	
     8	/** Public site */
     9	Route::get('/', [\App\Http\Controllers\HomeController::class, 'index'])->name('home');
    10	Route::get('/news', [\App\Http\Controllers\NewsController::class, 'index'])->name('news.index');
    11	Route::get('/news/{id}', [\App\Http\Controllers\NewsController::class, 'show'])->name('news.show');
    12	Route::get('/downloads', [\App\Http\Controllers\DownloadController::class, 'index'])->name('downloads.index');
    13	Route::get('/region/sharjah', [\App\Http\Controllers\EventController::class, 'sharjah'])->name('region.sharjah');
    14	Route::get('/partners', [\App\Http\Controllers\PartnerController::class, 'index'])->name('partners.index');
    15	
    16	Route::post('/lang/switch', function (Request $request) {
    17	    $lang = $request->input('lang');
    18	    if (in_array($lang, ['en', 'ar'])) {
    19	        session(['locale' => $lang]);
    20	        app()->setLocale($lang);
    21	    }
    22	    return back();
    23	})->name('lang.switch');
    24	
    25	/** Authenticated user actions */
    26	Route::middleware('auth')->group(function () {
    27	    Route::get('/volunteer/profile', \App\Http\Controllers\Volunteer\ProfileIndexAction::class)->name('volunteer.profile');
    28	    Route::post('/volunteer/events/{eventId}/register', [\App\Http\Controllers\VolunteerController::class, 'registerEvent'])->name('volunteer.registerEvent');
    29	    Route::post('/volunteer/kyc/upload', [\App\Http\Controllers\VolunteerController::class, 'uploadKyc'])->name('volunteer.uploadKyc');
    30	    Route::get('/volunteer/resume', [\App\Http\Controllers\VolunteerController::class, 'resume'])->name('volunteer.resume');
    31	    Route::get('/volunteer/certificate/{certId}', [\App\Http\Controllers\VolunteerController::class, 'generateCertificate'])->name('volunteer.generateCertificate');
    32	
    33	    Route::get('/payment', [\App\Http\Controllers\PaymentController::class, 'paymentPage'])->name('payments.page');
    34	    Route::post('/payment/stripe', [\App\Http\Controllers\PaymentController::class, 'processStripe'])->name('payments.processStripe');
    35	    Route::post('/payment/paytabs', [\App\Http\Controllers\PaymentController::class, 'processPayTabs'])->name('payments.processPayTabs');
    36	    Route::get('/payment/success', [\App\Http\Controllers\PaymentController::class, 'success'])->name('payments.success');
    37	});
    38	
    39	/** Admin */
    40	Route::prefix('admin')->middleware(['auth', 'can:isAdmin'])->group(function () {
    41	    Route::get('/dashboard', [\App\Http\Controllers\Admin\UserAdminController::class, 'dashboard'])->name('admin.dashboard');
    42	    Route::get('/users', [\App\Http\Controllers\Admin\UserAdminController::class, 'listUsers'])->name('admin.users');
    43	    Route::post('/users/toggle/{id}', [\App\Http\Controllers\Admin\UserAdminController::class, 'toggleUserStatus'])->name('admin.users.toggle');
    44	    
    45	    Route::get('/certificates', [\App\Http\Controllers\Admin\UserAdminController::class, 'listCertificates'])->name('admin.certificates');
    46	    Route::post('/backup', [\App\Http\Controllers\Admin\UserAdminController::class, 'backup'])->name('admin.backup');
    47	});
    48	
    49	Auth::routes();
    50	
    51	/** PUBLIC: verify + gallery (single, closed block) */
    52	Route::match(['GET', 'POST'], '/verify', function (Request $r) {
    53	    $code = trim($r->input('code', ''));
    54	    $result = null;
    55	    if ($code !== '') {
    56	        $result = DB::table('certificates')->where('verification_code', $code)->first();
    57	    }
    58	    return view('public.verify', compact('result', 'code'));
    59	})->name('verify');
    60	
    61	Route::get('/gallery', fn () => view('public.gallery'))->name('gallery');
    62	
    63	/** Profile routes (preferred) */
    64	Route::middleware(['web','auth'])->group(function () {
    65	    Route::get('/profile', \App\Http\Controllers\Volunteer\ProfileIndexAction::class)->name('profile');
    66	    Route::get('/volunteer/profile', \App\Http\Controllers\Volunteer\ProfileIndexAction::class)->name('volunteer.profile');
    67	});
    68	
    69	/** Avatar upload/remove */
    70	Route::middleware(['web','auth'])->group(function () {
    71	    Route::post('/profile/avatar', [\App\Http\Controllers\Volunteer\AvatarController::class,'store'])->name('profile.avatar.store');
    72	    Route::delete('/profile/avatar', [\App\Http\Controllers\Volunteer\AvatarController::class,'destroy'])->name('profile.avatar.destroy');
    73	});
    74	
    75	/** Keep public opportunities in a single file (avoids duplication) */
    76	if (file_exists(__DIR__.'/_opportunities.php')) require __DIR__.'/_opportunities.php';
    77	
    78	/** Friendly /signin router + alias (no controller dependency) */
    79	Route::get('/signin', function (\Illuminate\Http\Request $r) {
    80	    $type = strtolower($r->query('type',''));
    81	    if (in_array($type, ['organization','organisation','org'])) {
    82	        return redirect()->to('/login?type=organization');
    83	    }
    84	    return redirect()->to('/login?type=volunteer');
    85	})->name('signin');
    86	
    87	Route::get('/sign-in', fn() => redirect()->route('signin'));
    88	if (file_exists(__DIR__.'/_qr_public.php')) require __DIR__.'/_qr_public.php';
    89	
    90	
    91	if (file_exists(__DIR__.'/_scan.php')) require __DIR__.'/_scan.php';
    92	
    93	if (file_exists(__DIR__.'/_admin_hours.php')) require __DIR__.'/_admin_hours.php';
    94	
    95	if (file_exists(__DIR__.'/_admin_aliases.php')) require __DIR__.'/_admin_aliases.php';
    96	
    97	if (file_exists(__DIR__.'/_admin_diag.php')) require __DIR__.'/_admin_diag.php';
    98	
    99	if (file_exists(__DIR__.'/_admin_dashboard_override.php')) require __DIR__.'/_admin_dashboard_override.php';
   100	
   101	if (file_exists(__DIR__.'/_admin_dashboard_compat.php')) require __DIR__.'/_admin_dashboard_compat.php';
   102	
   103	if (file_exists(__DIR__.'/_admin_route_aliases.php')) require __DIR__.'/_admin_route_aliases.php';
   104	
   105	if (file_exists(__DIR__.'/_admin_users_fix.php')) require __DIR__.'/_admin_users_fix.php';
   106	
   107	if (file_exists(__DIR__.'/_org_register_fix.php')) require __DIR__.'/_org_register_fix.php';
   108	
   109	if (file_exists(__DIR__.'/_admin_auth_fix.php')) require __DIR__.'/_admin_auth_fix.php';
   110	
   111	if (file_exists(__DIR__.'/_auth_canonical.php')) require __DIR__.'/_auth_canonical.php';
   112	if (file_exists(__DIR__.'/_auth_aliases.php')) require __DIR__.'/_auth_aliases.php';
   113	
   114	// include i18n if present
   115	if (file_exists(__DIR__.'/_i18n.php')) require __DIR__.'/_i18n.php';
   116	
   117	// Injected: auth POST overrides
   118	// Injected: admin auth POST overrides
   119	use App\Http\Controllers\SitemapController;
   120	Route::get('/sitemap.xml', [SitemapController::class, 'index'])->name('sitemap');
   121	Route::view('/about', 'pages.about')->name('pages.about')->middleware(\App\Http\Middleware\SetLocale::class);
   122	Route::view('/privacy', 'pages.privacy')->name('pages.privacy')->middleware(\App\Http\Middleware\SetLocale::class);
   123	Route::view('/terms', 'pages.terms')->name('pages.terms')->middleware(\App\Http\Middleware\SetLocale::class);
   124	use App\Http\Controllers\LangController;
   125	/* removed duplicate /locale/{locale} route */
   126	
   127	// Fallback org logout (POST only), guarded by auth:org
   128	use Illuminate\Support\Facades\Auth;
   129	Route::post('/org/logout', function (Request $request) {
   130	    Auth::guard('org')->logout();
   131	    $request->session()->invalidate();
   132	    $request->session()->regenerateToken();
   133	    return redirect('/');
   134	})->middleware(['auth:org'])->name('org.logout');
   135	if (file_exists(base_path('routes/events.php'))) {
   136	    require base_path('routes/events.php');
   137	}
   138	
   139	/* === Notifications (P9) === */
   140	use App\Http\Controllers\NotificationController;
   141	
   142	Route::middleware(['web','auth'])->group(function () {
   143	    Route::get('/notifications', [NotificationController::class, 'index'])->name('notifications.index');
   144	    Route::post('/notifications/{id}/read', [NotificationController::class, 'markRead'])->name('notifications.read');
   145	    Route::post('/notifications/read-all', [NotificationController::class, 'markAllRead'])->name('notifications.readAll');
   146	    Route::get('/notifications/test', [NotificationController::class, 'test'])->name('notifications.test');
   147	});
   148	
   149	/* === P12: Canonical 301 redirects (safe + minimal) === */
   150	
   151	Route::permanentRedirect('/dashboard', '/profile')->name('redir.dashboard.profile');
   152	Route::permanentRedirect('/home', '/')->name('redir.home.root');
   153	Route::get('/volunteer/profile', fn() => redirect('/profile', 301))->name('redir.volunteer.profile');
   154	Route::get('/volunteer/dashboard', fn() => redirect('/profile', 301))->name('redir.volunteer.dashboard');
   155	Route::get('/contact', function () {
   156	    foreach (['contact','pages.contact','argon_front.contact','frontend.contact'] as $v) {
   157	        if (view()->exists($v)) return view($v);
   158	    }
   159	    return response('Contact page coming soon.', 200);
   160	})->name('contact.show');
   161	
   162	// ---- compat: organizations.register (keeps old blades working) ----
   163	Route::get('/organizations/register', function () {
   164	    // TODO: point this to your real controller/view when ready
   165	    return redirect()->to('/register?type=organization');
   166	})->name('organizations.register');
   167	Route::post('/organizations/register', function () {
   168	    return redirect()->to('/register?type=organization');
   169	})->name('organizations.register.store');
   170	
   171	/* --- Phase 1: observability healthz --- */
   172	\Illuminate\Support\Facades\Route::get('/healthz', function () {
   173	    $okDb = true;
   174	    try { \Illuminate\Support\Facades\DB::select('select 1'); }
   175	    catch (\Throwable $e) { $okDb = false; }
   176	
   177	    $queuePending = \Illuminate\Support\Facades\Schema::hasTable('jobs')
   178	        ? \Illuminate\Support\Facades\DB::table('jobs')->count()
   179	        : null;
   180	    $queueFailed = \Illuminate\Support\Facades\Schema::hasTable('failed_jobs')
   181	        ? \Illuminate\Support\Facades\DB::table('failed_jobs')->count()
   182	        : null;
   183	
   184	    return response()->json([
   185	        'ok'             => $okDb,
   186	        'time'           => now()->toIso8601String(),
   187	        'app_env'        => config('app.env'),
   188	        'cache'          => config('cache.default'),
   189	        'queue'          => config('queue.default'),
   190	        'queue_pending'  => $queuePending,
   191	        'queue_failed'   => $queueFailed,
   192	    ], 200, ['Cache-Control' => 'no-store']);
   193	})->name('healthz');
   194	Route::middleware(['web','auth','throttle:30,1'])->prefix('admin')->group(function () {
   195	  Route::get('/_diag', function () {
   196	    $now = now();
   197	    $storage = storage_path();
   198	    $free  = @disk_free_space($storage);
   199	    $total = @disk_total_space($storage);
   200	    $usedPct = $total ? round(100 * ($total - $free) / $total, 1) : null;

## routes/_admin_auth.php (first 80):
     1	<?php
     2	use Illuminate\Http\Request;
     3	use Illuminate\Support\Facades\Auth;
     4	use Illuminate\Support\Facades\Gate;
     5	use Illuminate\Support\Facades\Route;
     6	use App\Http\Controllers\Admin\Auth\AdminLoginController;
     7	
     8	Route::middleware(['web'])->group(function () {
     9	    // GET /admin -> if already admin, go to dashboard; otherwise show admin login (separate from public login)
    10	    Route::get('/admin', function (Request $r) {
    11	        $u = Auth::user();
    12	        if ($u && Gate::forUser($u)->allows('isAdmin')) {
    13	            return redirect()->route('admin.dashboard');
    14	        }
    15	        return app(AdminLoginController::class)->show($r);
    16	    })->name('admin.welcome');
    17	
    18	    // Dedicated admin login endpoints
    19	    Route::get('/admin/login', [AdminLoginController::class, 'show'])->name('admin.login');
    20	    Route::post('/admin/login', [AdminLoginController::class, 'login'])->name('admin.login.post');
    21	
    22	    // Admin logout
    23	    Route::post('/admin/logout', [AdminLoginController::class, 'logout'])->name('admin.logout');
    24	});

## routes/_admin_auth_fix.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use App\Http\Controllers\Admin\Auth\AdminLoginController;
     5	
     6	/*
     7	 * Canonical admin auth routes
     8	 * GET /admin/login (guest)
     9	 * POST /admin/login (guest)
    10	 * POST /admin/logout (auth)
    11	 */
    12	Route::middleware(['web'])->prefix('admin')->group(function () {
    13	    Route::get('/login', [AdminLoginController::class, 'showLoginForm'])
    14	        ->name('admin.login')->middleware('guest');
    15	
    16	    Route::post('/login', [AdminLoginController::class, 'login'])
    17	        ->name('admin.login.post')->middleware('guest');
    18	
    19	    Route::post('/logout', [AdminLoginController::class, 'logout'])
    20	        ->name('admin.logout')->middleware('auth');
    21	});

## routes/_admin_dashboard_compat.php (first 80):
     1	<?php
     2	use Illuminate\Support\Facades\Route;
     3	use App\Http\Controllers\Admin\DashboardCompatController;
     4	
     5	Route::prefix('admin')->middleware(['web','auth','can:isAdmin'])->group(function () {
     6	    Route::get('/dashboard', [DashboardCompatController::class, 'index'])->name('admin.dashboard');
     7	    Route::get('/', fn() => redirect()->route('admin.dashboard'))->name('admin.home');
     8	});

## routes/_admin_dashboard_override.php (first 80):
     1	<?php
     2	use Illuminate\Support\Facades\Route;
     3	use Illuminate\Support\Facades\DB;
     4	use Illuminate\Support\Facades\Log;
     5	
     6	Route::middleware(['web','auth','can:isAdmin'])->group(function () {
     7	    Route::get('/admin/dashboard', function () {
     8	        try {
     9	            $stats = [
    10	                'users'          => DB::table('users')->count(),
    11	                'events'         => DB::table('events')->count() ?? 0,
    12	                'opportunities'  => DB::table('opportunities')->count() ?? 0,
    13	                'applications'   => DB::table('opportunity_applications')->count() ?? 0,
    14	                'qr_scans'       => DB::table('qr_scans')->count() ?? 0,
    15	            ];
    16	            // Try the original blade first; if it throws, we catch and render the safe one.
    17	            return view('admin.dashboard', compact('stats'));
    18	        } catch (\Throwable $e) {
    19	            Log::error('ADMIN_DASH error', ['m'=>$e->getMessage(),'f'=>$e->getFile(),'l'=>$e->getLine()]);
    20	            $error = ['m'=>$e->getMessage(),'f'=>$e->getFile(),'l'=>$e->getLine()];
    21	            // Rebuild lightweight stats just in case previous step failed mid-way
    22	            $stats = [
    23	                'users'          => DB::table('users')->count(),
    24	                'events'         => DB::table('events')->count() ?? 0,
    25	                'opportunities'  => DB::table('opportunities')->count() ?? 0,
    26	                'applications'   => DB::table('opportunity_applications')->count() ?? 0,
    27	                'qr_scans'       => DB::table('qr_scans')->count() ?? 0,
    28	            ];
    29	            return view('admin.dashboard_safe', compact('stats','error'));
    30	        }
    31	    })->name('admin.dashboard'); // overrides existing definition safely
    32	});

## routes/_admin_diag.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use Illuminate\Support\Facades\DB;
     5	
     6	Route::middleware(['web','auth','can:isAdmin'])
     7	    ->prefix('admin')
     8	    ->group(function () {
     9	        Route::get('/_diag', function () {
    10	            $u = auth()->user();
    11	            $stats = [
    12	                'users'         => DB::table('users')->count(),
    13	                'events'        => DB::table('events')->count() ?? 0,
    14	                'opportunities' => DB::table('opportunities')->count() ?? 0,
    15	                'applications'  => DB::table('opportunity_applications')->count() ?? 0,
    16	                'qr_scans'      => DB::table('qr_scans')->count() ?? 0,
    17	            ];
    18	            logger()->info('ADMIN_DIAG', ['user' => $u->email ?? null, 'stats' => $stats]);
    19	            return view('admin._diag_dashboard', compact('u','stats'));
    20	        })->name('admin.diag');
    21	    });

## routes/_admin_hours.php (first 80):
     1	<?php
     2	use Illuminate\Support\Facades\Route;
     3	
     4	Route::get('admin/opportunities/{opportunityId}/hours',
     5	    [\App\Http\Controllers\Admin\HoursReportController::class, 'show'])
     6	    ->middleware(['web','auth','can:isAdmin'])
     7	    ->name('admin.hours.show');
     8	
     9	# Optional "all" aggregate
    10	Route::get('admin/hours',
    11	    [\App\Http\Controllers\Admin\HoursReportController::class, 'showAll'])
    12	    ->middleware(['web','auth','can:isAdmin'])
    13	    ->name('admin.hours.all');

## routes/_admin_route_aliases.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use App\Http\Controllers\Admin\UserAdminController;
     5	
     6	/*
     7	 * These are *aliases* so the Argon sidebar can generate URLs.
     8	 * They either redirect to existing pages or to real admin endpoints you already have.
     9	 */
    10	Route::prefix('admin')->middleware(['web','auth','can:isAdmin'])->group(function () {
    11	
    12	    // Users (alias name used by theme)
    13	    Route::get('/users/index', function () {
    14	        // you already have route('admin.users') for /admin/users
    15	        return redirect()->route('admin.users');
    16	    })->name('admin.users.index');
    17	
    18	    // Opportunities (alias -> public opportunities for now)
    19	    Route::get('/opportunities', fn() => redirect('/opportunities'))
    20	        ->name('admin.opportunities.index');
    21	
    22	    // Events (alias -> public events for now)
    23	    Route::get('/events', fn() => redirect('/events'))
    24	        ->name('admin.events.index');
    25	});

## routes/_admin_users_fix.php (first 80):
     1	<?php
     2	use Illuminate\Support\Facades\Route;
     3	use App\Http\Controllers\Admin\UserAdminController;
     4	use App\Http\Controllers\Admin\AdminController;
     5	
     6	Route::prefix('admin')->middleware(['web','auth','can:isAdmin'])->group(function () {
     7	    // Primary: /admin/users -> admin.users.index
     8	    Route::get('/users', [UserAdminController::class, 'index'])->name('admin.users.index');
     9	
    10	    // Alias: /admin/users/index -> admin.users  (back-compat for old blades)
    11	    Route::get('/users/index', [UserAdminController::class, 'index'])->name('admin.users');
    12	
    13	    // Keep existing toggle action
    14	    Route::post('/users/toggle/{id}', [AdminController::class, 'toggleUserStatus'])->name('admin.users.toggle');
    15	});

## routes/_auth_aliases.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	
     5	// Named alias for POST /register → Auth\RegisterController@register
     6	if (! Route::has('register.perform')) {
     7	    Route::post('/register', [\App\Http\Controllers\Auth\RegisterController::class, 'register'])
     8	        ->name('register.perform');
     9	}

## routes/_auth_canonical.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use App\Http\Controllers\Admin\Auth\AdminLoginController;
     5	
     6	// --- Admin auth (guest pages + protected logout) ---
     7	Route::middleware(['web'])->prefix('admin')->group(function () {
     8	    Route::get('/login',  [AdminLoginController::class, 'show'])
     9	        ->name('admin.login')->middleware('guest');
    10	
    11	    Route::post('/login', [AdminLoginController::class, 'login'])
    12	        ->name('admin.login.post')->middleware('guest')->middleware(['honeypot','throttle:login']);
    13	
    14	    Route::post('/logout', [AdminLoginController::class, 'logout'])
    15	        ->name('admin.logout')->middleware('auth');
    16	});
    17	
    18	// --- Organization aliases to the main login/register (must be guest) ---
    19	Route::middleware(['web','guest'])->group(function () {
    20	    Route::get('/org/login',    fn() => redirect('/login?type=organization'))->name('org.login')->middleware('guest');
    21	    Route::get('/org/register', fn() => redirect('/register?type=organization'))->name('org.register')->middleware('guest');
    22	});

## routes/_auth_overrides.php (first 80):
     1	<?php
     2	/**
     3	 * Placeholder for optional auth route overrides.
     4	 * Leave empty, or add overrides as needed.
     5	 */

## routes/_early_auth_overrides.php (first 80):
     1	<?php
     2	/**
     3	 * Early auth/gate overrides loaded by routes/web.php
     4	 * Keeps logic out of controllers and avoids provider edits.
     5	 */
     6	use Illuminate\Support\Facades\Gate;
     7	
     8	if (! \function_exists('swaed_define_gates')) {
     9	    function swaed_define_gates(): void {
    10	        // Only define once
    11	        if (!Gate::has('isAdmin')) {
    12	            Gate::define('isAdmin', function ($user) {
    13	                if (!$user) return false;
    14	                // Accept either flag or role
    15	                return (int)($user->is_admin ?? 0) === 1 || ($user->role ?? null) === 'admin';
    16	            });
    17	        }
    18	    }
    19	}
    20	swaed_define_gates();

## routes/_i18n.php (first 80):
     1	<?php
     2	use Illuminate\Support\Facades\Route;
     3	use App\Http\Controllers\Controller;
     4	Route::get('/lang/{locale}', function (string $locale) {
     5	    $allowed = ['ar','en'];
     6	    if (!in_array($locale, $allowed, true)) { $locale = 'ar'; }
     7	    session(['locale' => $locale]);
     8	    app()->setLocale($locale);
     9	    return back();
    10	})->name('locale.switch');

## routes/_opportunities.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use Illuminate\Support\Facades\DB;
     5	use Illuminate\Support\Facades\Schema;
     6	use Illuminate\Http\Request;
     7	
     8	Route::get('/opportunities', function (Request $r) {
     9	    $q = trim($r->get('q', ''));
    10	
    11	    if (!Schema::hasTable('opportunities')) {
    12	        $rows = collect([]); $cats = collect([]); $regions = collect([]);
    13	        $view = collect(['opportunities.public.index','opportunities.index','public.opportunities'])
    14	            ->first(fn($v) => view()->exists($v)) ?? 'opportunities.public.index';
    15	        return view($view, compact('rows','cats','regions','q') + ['opportunities'=>$rows]);
    16	    }
    17	
    18	    $cols = Schema::getColumnListing('opportunities');
    19	
    20	    $title  = in_array('title',$cols) ? 'title' : (in_array('name',$cols) ? 'name' : null);
    21	    $desc   = in_array('description',$cols) ? 'description' : (in_array('details',$cols) ? 'details' : null);
    22	    $region = in_array('region',$cols) ? 'region' : (in_array('emirate',$cols) ? 'emirate' : null);
    23	    $city   = in_array('city',$cols) ? 'city' : null;
    24	    $cat    = in_array('category',$cols) ? 'category' : null;
    25	    $date   = collect(['start_date','date','event_date','starts_at'])->first(fn($c)=>in_array($c,$cols));
    26	
    27	    $query = DB::table('opportunities');
    28	    $select = array_values(array_filter(['id',$title,$city,$region,$cat,$date,$desc]));
    29	    if ($select) $query->select($select);
    30	
    31	    if ($q && ($title || $desc)) {
    32	        $query->where(function($w) use ($q,$title,$desc){
    33	            if ($title) $w->where($title,'like',"%$q%");
    34	            if ($desc)  $w->orWhere($desc,'like',"%$q%");
    35	        });
    36	    }
    37	    if ($cat && $r->filled('category'))  $query->where($cat, $r->category);
    38	    if ($region && $r->filled('region')) $query->where($region, $r->region);
    39	
    40	    if ($date) $query->orderByDesc($date);
    41	    $query->orderByDesc('id');
    42	
    43	    $rows = $query->paginate(24);
    44	    $rows->appends($r->query());
    45	
    46	    $cats    = $cat    ? DB::table('opportunities')->whereNotNull($cat)->distinct()->orderBy($cat)->pluck($cat) : collect();
    47	    $regions = $region ? DB::table('opportunities')->whereNotNull($region)->distinct()->orderBy($region)->pluck($region) : collect();
    48	
    49	    $view = collect(['opportunities.public.index','opportunities.index','public.opportunities'])
    50	            ->first(fn($v) => view()->exists($v)) ?? 'opportunities.public.index';
    51	
    52	    return view($view, [
    53	        'rows'=>$rows, 'opportunities'=>$rows,
    54	        'cats'=>$cats, 'regions'=>$regions, 'q'=>$q,
    55	    ]);
    56	})->name('opportunities.index');
    57	
    58	Route::get('/opportunities/{id}', function ($id) {
    59	    if (!Schema::hasTable('opportunities')) abort(404);
    60	    $o = DB::table('opportunities')->where('id',$id)->first();
    61	    abort_unless($o, 404);
    62	
    63	    $view = collect(['opportunities.public.show','opportunities.show'])
    64	            ->first(fn($v)=>view()->exists($v)) ?? 'opportunities.public.show';
    65	
    66	    return view($view, ['o'=>$o, 'opportunity'=>$o]);
    67	})->whereNumber('id')->name('opps.public.show');

## routes/_org_register_fix.php (first 80):
     1	<?php
     2	use Illuminate\Support\Facades\Route;
     3	use Illuminate\Http\Request;
     4	use Illuminate\Support\Facades\Log;
     5	
     6	Route::middleware(['web','guest'])->group(function () {
     7	    // Show the registration page (renders resources/views/org/register.blade.php)
     8	    Route::view('/org/register', 'org.register')->name('org.register');
     9	
    10	    // TEMP submit handler to avoid 500s (replace with real controller later)
    11	    Route::post('/org/register', function (Request $request) {
    12	        Log::info('ORG_REGISTER_STUB', [
    13	            'ip'    => $request->ip(),
    14	            'email' => $request->input('email'),
    15	        ]);
    16	        return back()->with('status', __('Thanks! Your request was received.'));
    17	    })->middleware(\App\Http\Middleware\Honeypot::class)->name('org.register.submit');
    18	});

## routes/_public.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use App\Http\Controllers\PublicSite\HomeController;
     5	use App\Http\Controllers\PublicSite\OpportunityPublicController;
     6	
     7	// Home
     8	Route::get('/', [HomeController::class, 'index'])->name('home');
     9	
    10	// Opportunities
    11	Route::prefix('opportunities')->group(function () {
    12	    Route::get('/', [OpportunityPublicController::class, 'index'])->name('opportunities.index');
    13	    // SEO-friendly: /opportunities/123-some-title (slug is optional)
    14	    Route::get('/{opportunity}-{any?}', [OpportunityPublicController::class, 'show'])
    15	        ->where(['opportunity' => '[0-9]+', 'any' => '.*'])
    16	        ->name('opportunities.show');
    17	});

## routes/_qr_public.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use Illuminate\Support\Facades\DB;
     5	use Illuminate\Support\Facades\Schema;
     6	use Illuminate\Http\Request;
     7	
     8	Route::middleware(['web','auth'])->group(function () {
     9	
    10	    // Scan page (captures geolocation; posts to same endpoint)
    11	    Route::get('/scan', function (Request $r) {
    12	        $code = trim($r->query('code',''));
    13	        $op   = trim($r->query('op',''));
    14	        return view(
    15	            view()->exists('public.scan') ? 'public.scan' : 'opportunities.public.scan',
    16	            compact('code','op')
    17	        );
    18	    })->name('scan');
    19	
    20	    // Submit checkin/checkout
    21	    Route::post('/scan', function (Request $r) {
    22	        $user = $r->user();
    23	        abort_unless($user, 403);
    24	
    25	        $action = strtolower($r->input('action','checkin')); // checkin|checkout
    26	        if (!in_array($action, ['checkin','checkout'])) $action = 'checkin';
    27	
    28	        $code = trim((string)$r->input('code',''));
    29	        $opIn = trim((string)$r->input('op',''));
    30	
    31	        // ---- Resolve opportunity_id safely (supports different schemas) ----
    32	        $oppId = null;
    33	        if ($opIn !== '' && ctype_digit($opIn)) {
    34	            $oppId = (int)$opIn;
    35	        } elseif (Schema::hasTable('opportunities')) {
    36	            $q = DB::table('opportunities');
    37	
    38	            // try by id inside code (e.g., "OP-123")
    39	            if ($oppId === null && preg_match('/(\d{1,10})/', $code, $m)) {
    40	                $cand = (int)$m[1];
    41	                $exists = DB::table('opportunities')->where('id',$cand)->exists();
    42	                if ($exists) $oppId = $cand;
    43	            }
    44	
    45	            // try qr_code column if present
    46	            if ($oppId === null && $code !== '' && Schema::hasColumn('opportunities','qr_code')) {
    47	                $row = DB::table('opportunities')->where('qr_code',$code)->select('id')->first();
    48	                if ($row) $oppId = (int)$row->id;
    49	            }
    50	
    51	            // try generic "code" column if present
    52	            if ($oppId === null && $code !== '' && Schema::hasColumn('opportunities','code')) {
    53	                $row = DB::table('opportunities')->where('code',$code)->select('id')->first();
    54	                if ($row) $oppId = (int)$row->id;
    55	            }
    56	        }
    57	
    58	        // geo/ip
    59	        $lat = $r->input('lat');  $lng = $r->input('lng');
    60	        $ip  = $r->ip();
    61	
    62	        // record scan
    63	        if (Schema::hasTable('qr_scans')) {
    64	            DB::table('qr_scans')->insert([
    65	                'user_id'        => $user->id,
    66	                'opportunity_id' => $oppId,
    67	                'action'         => $action,
    68	                'code'           => ($code !== '' ? $code : null),
    69	                'lat'            => is_null($lat) ? null : (float)$lat,
    70	                'lng'            => is_null($lng) ? null : (float)$lng,
    71	                'ip'             => $ip,
    72	                'scanned_at'     => now(),
    73	                'created_at'     => now(),
    74	                'updated_at'     => now(),
    75	            ]);
    76	        }
    77	
    78	        // mirror geo logs
    79	        if (Schema::hasTable('geo_logs')) {
    80	            DB::table('geo_logs')->insert([

## routes/_scan.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use App\Http\Controllers\Public\QrAttendanceController;
     5	
     6	Route::middleware(['web','auth'])->group(function () {
     7	    Route::get ('/scan',              [QrAttendanceController::class, 'index'])->name('scan.index');
     8	    Route::post('/scan/checkin',      [QrAttendanceController::class, 'checkin'])->name('scan.checkin');
     9	    Route::post('/scan/checkout',     [QrAttendanceController::class, 'checkout'])->name('scan.checkout');
    10	
    11	    // Safety: if someone GETs these URLs, send them back to the form
    12	    Route::get ('/scan/checkin',  fn() => redirect()->route('scan.index'))->name('scan.checkin.get');
    13	    Route::get ('/scan/checkout', fn() => redirect()->route('scan.index'))->name('scan.checkout.get');
    14	});

## routes/admin.php (first 80):
     1	<?php
     2	use App\Http\Controllers\Admin\AttendanceController;
     3	
     4	
     5	use Illuminate\Support\Facades\Route;
     6	use App\Http\Middleware\AdminMiddleware;
     7	
     8	use App\Http\Controllers\Admin\UserController;
     9	use App\Http\Controllers\Admin\OrganizationController;
    10	use App\Http\Controllers\Admin\OpportunityController;
    11	use App\Http\Controllers\Admin\EventController;
    12	use App\Http\Controllers\Admin\CertificateController;
    13	use App\Http\Controllers\Admin\CategoryController;
    14	use App\Http\Controllers\Admin\PartnerController;
    15	use App\Http\Controllers\Admin\SettingController;
    16	
    17	Route::prefix('admin')->as('admin.')->middleware(['web','auth', AdminMiddleware::class])->group(function () {
    18	    Route::get('/', fn () => redirect()->route('admin.dashboard'))->name('home');
    19	    Route::get('/dashboard', fn () => view('admin.dashboard'))->name('dashboard');
    20	
    21	    Route::resource('users', UserController::class)->only(['index']);
    22	
    23	    Route::resource('organizations', OrganizationController::class)->except(['show']);
    24	    Route::resource('opportunities', OpportunityController::class)->except(['show']);
    25	    Route::resource('events', EventController::class)->except(['show']);
    26	
    27	    Route::get('certificates', [CertificateController::class, 'index'])->name('certificates.index');
    28	    Route::get('certificates/create', [CertificateController::class, 'create'])->name('certificates.create');
    29	    Route::post('certificates', [CertificateController::class, 'store'])->name('certificates.store');
    30	    Route::get('certificates/{id}/pdf', [CertificateController::class, 'pdf'])->name('certificates.show.pdf');
    31	
    32	    Route::resource('categories', CategoryController::class)->except(['show']);
    33	    Route::resource('partners', PartnerController::class)->except(['show']);
    34	
    35	    Route::get('settings', [SettingController::class, 'index'])->name('settings.index');
    36	    Route::get('settings/edit', [SettingController::class, 'edit'])->name('settings.edit');
    37	    Route::post('settings', [SettingController::class, 'update'])->name('settings.update');
    38	});
    39	
    40	// --- SawaedUAE additions: Admin learning requests review (protected) ---
    41	Route::middleware(['web','auth', \App\Http\Middleware\AdminMiddleware::class])
    42	    ->prefix('admin')->as('admin.')->group(function () {
    43	        Route::get('learning-requests', [\App\Http\Controllers\Admin\LearningAdminController::class, 'index'])->name('learning.index');
    44	        Route::post('learning-requests/{id}', [\App\Http\Controllers\Admin\LearningAdminController::class, 'update'])->name('learning.update');
    45	    });
    46	
    47	// --- SawaedUAE: Admin Applications Review ---
    48	Route::middleware(['web','auth', \App\Http\Middleware\AdminMiddleware::class])
    49	    ->prefix('admin')->as('admin.')->group(function () {
    50	        Route::get('applications', [\App\Http\Controllers\Admin\ApplicationAdminController::class,'index'])->name('applications.index');
    51	        Route::post('applications/{id}', [\App\Http\Controllers\Admin\ApplicationAdminController::class,'update'])->name('applications.update');
    52	    });
    53	
    54	// --- SawaedUAE: Admin attendance
    55	Route::middleware(['web','auth', \App\Http\Middleware\AdminMiddleware::class])
    56	    ->prefix('admin')->as('admin.')->group(function () {
    57	        Route::get('opportunities/{id}/qr', [\App\Http\Controllers\Admin\AttendanceAdminController::class, 'qr'])->name('attendance.qr');
    58	        Route::get('attendance', [\App\Http\Controllers\Admin\AttendanceAdminController::class, 'index'])->name('attendance.index');
    59	        Route::post('opportunities/{id}/attendance/manual', [\App\Http\Controllers\Admin\AttendanceAdminController::class, 'manual'])->name('attendance.manual');
    60	        Route::post('opportunities/{id}/attendance/finalize', [\App\Http\Controllers\Admin\AttendanceAdminController::class, 'finalize'])->name('attendance.finalize');
    61	        Route::post('opportunities/{id}/complete', [\App\Http\Controllers\Admin\AttendanceAdminController::class, 'complete'])->name('opportunities.complete');
    62	    });
    63	
    64	use App\Http\Controllers\Admin\OpportunityQRController;
    65	
    66	Route::prefix('admin')->as('admin.')->middleware(['web','auth', \App\Http\Middleware\AdminMiddleware::class])->group(function () {
    67	    Route::get('opportunities/{id}/qr',         [OpportunityQRController::class,'show'])->name('opportunities.qr');
    68	    Route::post('opportunities/{id}/qr/reset',  [OpportunityQRController::class,'reset'])->name('opportunities.qr.reset');
    69	    Route::get('opportunities/{id}/qr/finalize',[OpportunityQRController::class,'finalize'])->name('opportunities.qr.finalize');
    70	    Route::get('opportunities/{id}/qr/issue',   [OpportunityQRController::class,'issue'])->name('opportunities.qr.issue');
    71	});
    72	use App\Http\Controllers\Admin\ApplicationAdminController;
    73	Route::prefix('admin')->as('admin.')->middleware(['web','auth', \App\Http\Middleware\AdminMiddleware::class])->group(function () {
    74	  Route::get('applications', [ApplicationAdminController::class,'index'])->name('apps.index');
    75	  Route::post('applications/{id}', [ApplicationAdminController::class,'update'])->name('apps.update');
    76	});
    77	
    78	Route::middleware(['web','auth','admin'])->prefix('admin')->name('admin.')->group(function () {
    79	});
    80	

## routes/api.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Http\Request;
     4	use Illuminate\Support\Facades\Route;
     5	
     6	/*
     7	|--------------------------------------------------------------------------
     8	| API Routes
     9	| These routes are loaded by RouteServiceProvider within the "api" middleware
    10	| group and automatically get the "/api" prefix.
    11	|--------------------------------------------------------------------------
    12	*/
    13	
    14	Route::middleware('auth:sanctum')->get('/user', function (Request $request) {
    15	    return $request->user();
    16	});
    17	
    18	/* API v1 */
    19	Route::prefix('v1')->group(function () {
    20	    // Health check: GET /api/v1/health
    21	    Route::get('/health', fn () => response()->json([
    22	        'ok' => true,
    23	        'ts' => now()->toIso8601String(),
    24	    ]));
    25	
    26	    // Certificate verify: GET /api/v1/certificates/verify/{code}
    27	    Route::get('/certificates/verify/{code}', function (string $code) {
    28	        $c = \App\Models\Certificate::query()->where('code', $code)->first();
    29	        return response()->json([
    30	            'valid' => (bool) $c,
    31	            'certificate' => $c,
    32	        ]);
    33	    });
    34	});

## routes/console.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Schedule;
     4	
     5	Schedule::command('hours:reconcile')->dailyAt('02:10');
     6	Schedule::command('hours:audit')->dailyAt('02:20');

## routes/events.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use App\Http\Controllers\EventController;
     5	
     6	Route::get('/events', [EventController::class, 'index'])->name('events.index');
     7	
     8	Route::get('/events/{idOrSlug}', [EventController::class, 'show'])
     9	    ->where('idOrSlug', '[0-9]+|[A-Za-z0-9\-]+')
    10	    ->name('events.show');

## routes/org.php (first 80):
     1	<?php
     2	
     3	use Illuminate\Support\Facades\Route;
     4	use App\Http\Controllers\Org\SetupController;
     5	use App\Http\Controllers\Org\DashboardController;
     6	use App\Http\Controllers\Org\OpportunityController;
     7	use App\Http\Controllers\Org\ApplicantsController;
     8	use App\Http\Controllers\Org\SettingsController;
     9	
    10	Route::middleware(['auth','org:org'])->prefix('org')->as('org.')->group(function () {
    11	    Route::get('/setup', [SetupController::class, 'form'])->name('setup.form');
    12	    Route::post('/setup', [SetupController::class, 'store'])->name('setup.store');
    13	
    14	    Route::get('/dashboard', [DashboardController::class, 'index'])->name('dashboard');
    15	
    16	    Route::get('/opportunities/create', [OpportunityController::class, 'create'])->name('opportunities.create');
    17	    Route::post('/opportunities', [OpportunityController::class, 'store'])->name('opportunities.store');
    18	    Route::get('/opportunities/{event}/edit', [OpportunityController::class, 'edit'])->name('opportunities.edit');
    19	    Route::post('/opportunities/{event}', [OpportunityController::class, 'update'])->name('opportunities.update');
    20	    Route::post('/opportunities/{event}/close', [OpportunityController::class, 'close'])->name('opportunities.close');
    21	
    22	    Route::get('/opportunities/{event}/applicants', [ApplicantsController::class, 'index'])->name('applicants.index');
    23	    Route::post('/opportunities/{event}/applicants/{app}/decision', [ApplicantsController::class, 'decision'])->name('applicants.decision');
    24	    Route::get('/opportunities/{event}/applicants.csv', [ApplicantsController::class, 'exportCsv'])->name('applicants.export');
    25	
    26	    Route::get('/settings', [SettingsController::class,'edit'])->name('settings.edit');
    27	    Route::post('/settings', [SettingsController::class,'update'])->name('settings.update');
    28	});

## routes/org_shortlist.php (first 80):
     1	<?php
     2	use Illuminate\Support\Facades\Route;
     3	
     4	Route::middleware(['web','auth','org:org'])
     5	    ->prefix('org')->as('org.')
     6	    ->group(function () {
     7	        Route::get('/opportunities/{opportunity}/shortlist', [\App\Http\Controllers\Org\ShortlistController::class, 'index'])->name('shortlist.index');
     8	        Route::post('/opportunities/{opportunity}/shortlist/bulk', [\App\Http\Controllers\Org\ShortlistController::class, 'bulk'])->name('shortlist.bulk');
     9	        Route::post('/opportunities/{opportunity}/shortlist/slot-cap', [\App\Http\Controllers\Org\ShortlistController::class, 'updateSlotCap'])->name('shortlist.slot_cap');
    10	    });
    11	

## Route list (cached):

  GET|HEAD        / ................................................................................................ home › HomeController@index
  GET|HEAD        about ............................................................................................................ pages.about
  GET|HEAD        admin ............................................................................................................. admin.home
  GET|HEAD        admin/_diag ....................................................................................................... admin.diag
  GET|HEAD        admin/applications ................................................. admin.apps.index › Admin\ApplicationAdminController@index
  POST            admin/applications/{id} .......................................... admin.apps.update › Admin\ApplicationAdminController@update
  GET|HEAD        admin/attendance .............................................. admin.attendance.index › Admin\AttendanceAdminController@index
  POST            admin/backup ................................................................. admin.backup › Admin\UserAdminController@backup
  GET|HEAD        admin/categories ..................................................... admin.categories.index › Admin\CategoryController@index
  POST            admin/categories ..................................................... admin.categories.store › Admin\CategoryController@store
  GET|HEAD        admin/categories/create ............................................ admin.categories.create › Admin\CategoryController@create
  PUT|PATCH       admin/categories/{category} ........................................ admin.categories.update › Admin\CategoryController@update
  DELETE          admin/categories/{category} ...................................... admin.categories.destroy › Admin\CategoryController@destroy
  GET|HEAD        admin/categories/{category}/edit ....................................... admin.categories.edit › Admin\CategoryController@edit
  GET|HEAD        admin/certificates ........................................... admin.certificates › Admin\UserAdminController@listCertificates
  POST            admin/certificates .............................................. admin.certificates.store › Admin\CertificateController@store
  GET|HEAD        admin/certificates/create ..................................... admin.certificates.create › Admin\CertificateController@create
  POST            admin/certificates/{certificate}/resend ............. admin.certificates.resend › Admin\AttendanceController@resendCertificate
  GET|HEAD        admin/certificates/{id}/pdf .................................... admin.certificates.show.pdf › Admin\CertificateController@pdf
  GET|HEAD        admin/dashboard ...................................................... admin.dashboard › Admin\DashboardCompatController@index
  GET|HEAD        admin/events .............................................................................................. admin.events.index
  POST            admin/events ................................................................ admin.events.store › Admin\EventController@store
  GET|HEAD        admin/events/create ....................................................... admin.events.create › Admin\EventController@create
  PUT|PATCH       admin/events/{event} ...................................................... admin.events.update › Admin\EventController@update
  DELETE          admin/events/{event} .................................................... admin.events.destroy › Admin\EventController@destroy
  GET|HEAD        admin/events/{event}/edit ..................................................... admin.events.edit › Admin\EventController@edit
  GET|HEAD        admin/hours ............................................................ admin.hours.all › Admin\HoursReportController@showAll
  GET|HEAD        admin/learning-requests ........................................... admin.learning.index › Admin\LearningAdminController@index
  POST            admin/learning-requests/{id} .................................... admin.learning.update › Admin\LearningAdminController@update
  GET|HEAD        admin/login ............................................................... admin.login › Admin\Auth\AdminLoginController@show
  POST            admin/login ......................................................... admin.login.post › Admin\Auth\AdminLoginController@login
  POST            admin/logout ........................................................... admin.logout › Admin\Auth\AdminLoginController@logout
  GET|HEAD        admin/opportunities ................................................................................ admin.opportunities.index
  POST            admin/opportunities ............................................ admin.opportunities.store › Admin\OpportunityController@store
  GET|HEAD        admin/opportunities/create ................................... admin.opportunities.create › Admin\OpportunityController@create
  POST            admin/opportunities/{id}/attendance/finalize ............ admin.attendance.finalize › Admin\AttendanceAdminController@finalize
  POST            admin/opportunities/{id}/attendance/manual .................. admin.attendance.manual › Admin\AttendanceAdminController@manual
  POST            admin/opportunities/{id}/complete .................... admin.opportunities.complete › Admin\AttendanceAdminController@complete
  GET|HEAD        admin/opportunities/{id}/qr ...................................... admin.opportunities.qr › Admin\OpportunityQRController@show
  GET|HEAD        admin/opportunities/{id}/qr/finalize ................ admin.opportunities.qr.finalize › Admin\OpportunityQRController@finalize
  GET|HEAD        admin/opportunities/{id}/qr/issue ......................... admin.opportunities.qr.issue › Admin\OpportunityQRController@issue
  POST            admin/opportunities/{id}/qr/reset ......................... admin.opportunities.qr.reset › Admin\OpportunityQRController@reset
  GET|HEAD        admin/opportunities/{opportunityId}/hours ................................ admin.hours.show › Admin\HoursReportController@show
  PUT|PATCH       admin/opportunities/{opportunity} ............................ admin.opportunities.update › Admin\OpportunityController@update
  DELETE          admin/opportunities/{opportunity} .......................... admin.opportunities.destroy › Admin\OpportunityController@destroy
  GET|HEAD        admin/opportunities/{opportunity}/attendance ............... admin.opportunities.attendance › Admin\AttendanceController@index
  POST            admin/opportunities/{opportunity}/attendance/{attendance} admin.opportunities.attendance.update › Admin\AttendanceController@…
  GET|HEAD        admin/opportunities/{opportunity}/edit ........................... admin.opportunities.edit › Admin\OpportunityController@edit
  POST            admin/opportunities/{opportunity}/finalize-issue admin.opportunities.finalize.issue › Admin\AttendanceController@finalizeIssue
  GET|HEAD        admin/organizations ........................................... admin.organizations.index › Admin\OrganizationController@index
  POST            admin/organizations ........................................... admin.organizations.store › Admin\OrganizationController@store
  GET|HEAD        admin/organizations/create .................................. admin.organizations.create › Admin\OrganizationController@create
  PUT|PATCH       admin/organizations/{organization} .......................... admin.organizations.update › Admin\OrganizationController@update
  DELETE          admin/organizations/{organization} ........................ admin.organizations.destroy › Admin\OrganizationController@destroy
  GET|HEAD        admin/organizations/{organization}/edit ......................... admin.organizations.edit › Admin\OrganizationController@edit
  GET|HEAD        admin/partners .......................................................... admin.partners.index › Admin\PartnerController@index
  POST            admin/partners .......................................................... admin.partners.store › Admin\PartnerController@store
  GET|HEAD        admin/partners/create ................................................. admin.partners.create › Admin\PartnerController@create
  PUT|PATCH       admin/partners/{partner} .............................................. admin.partners.update › Admin\PartnerController@update
  DELETE          admin/partners/{partner} ............................................ admin.partners.destroy › Admin\PartnerController@destroy
  GET|HEAD        admin/partners/{partner}/edit ............................................. admin.partners.edit › Admin\PartnerController@edit
  GET|HEAD        admin/settings .......................................................... admin.settings.index › Admin\SettingController@index
  POST            admin/settings ........................................................ admin.settings.update › Admin\SettingController@update
  GET|HEAD        admin/settings/edit ....................................................... admin.settings.edit › Admin\SettingController@edit
  GET|HEAD        admin/users .............................................................. admin.users.index › Admin\UserAdminController@index
  GET|HEAD        admin/users/index .............................................................. admin.users › Admin\UserAdminController@index
  POST            admin/users/toggle/{id} .......................................... admin.users.toggle › Admin\AdminController@toggleUserStatus
  GET|HEAD        contact ......................................................................................................... contact.show
  ANY             dashboard .................................................. redir.dashboard.profile › Illuminate\Routing › RedirectController
  GET|HEAD        downloads ......................................................................... downloads.index › DownloadController@index
  GET|HEAD        events .................................................................................. events.index › EventController@index
  GET|HEAD        events/{idOrSlug} ......................................................................... events.show › EventController@show
  GET|HEAD        gallery .............................................................................................................. gallery
  GET|HEAD        health ................................................................................................................ health
  GET|HEAD        healthz .............................................................................................................. healthz
  ANY             home ............................................................... redir.home.root › Illuminate\Routing › RedirectController
  POST            lang/switch ...................................................................................................... lang.switch
  GET|HEAD        lang/{locale} .................................................................................................. locale.switch
  GET|HEAD        login ............................................................................. login › Auth\LoginController@showLoginForm
  POST            login ............................................................... generated::udfbsSxcqT1NDwf2 › Auth\LoginController@login
  POST            logout .................................................................................. logout › Auth\LoginController@logout
  GET|HEAD        news ....................................................................................... news.index › NewsController@index
  GET|HEAD        news/{id} .................................................................................... news.show › NewsController@show
  GET|HEAD        notifications ............................................................. notifications.index › NotificationController@index
  POST            notifications/read-all ............................................ notifications.readAll › NotificationController@markAllRead
  GET|HEAD        notifications/test .......................................................... notifications.test › NotificationController@test
  POST            notifications/{id}/read ................................................. notifications.read › NotificationController@markRead
  GET|HEAD        opportunities ............................................................................................ opportunities.index
  GET|HEAD        opportunities/{id} .......................................................................................... opps.public.show
  GET|HEAD        opportunities/{opportunity}-{any?} .......................... opportunities.show › PublicSite\OpportunityPublicController@show
  GET|HEAD        org/dashboard .................................................................. org.dashboard › Org\DashboardController@index
  GET|HEAD        org/login .......................................................................................................... org.login
  POST            org/logout ........................................................................................................ org.logout
  POST            org/opportunities .................................................. org.opportunities.store › Org\OpportunityController@store
  GET|HEAD        org/opportunities/create ......................................... org.opportunities.create › Org\OpportunityController@create
  POST            org/opportunities/{event} ........................................ org.opportunities.update › Org\OpportunityController@update
  GET|HEAD        org/opportunities/{event}/applicants ................................... org.applicants.index › Org\ApplicantsController@index
  GET|HEAD        org/opportunities/{event}/applicants.csv .......................... org.applicants.export › Org\ApplicantsController@exportCsv
  POST            org/opportunities/{event}/applicants/{app}/decision .............. org.applicants.decision › Org\ApplicantsController@decision
  POST            org/opportunities/{event}/close .................................... org.opportunities.close › Org\OpportunityController@close
  GET|HEAD        org/opportunities/{event}/edit ....................................... org.opportunities.edit › Org\OpportunityController@edit
  GET|HEAD        org/opportunities/{opportunity}/shortlist ................................ org.shortlist.index › Org\ShortlistController@index
  POST            org/opportunities/{opportunity}/shortlist/bulk ............................. org.shortlist.bulk › Org\ShortlistController@bulk
  POST            org/opportunities/{opportunity}/shortlist/slot-cap ............ org.shortlist.slot_cap › Org\ShortlistController@updateSlotCap
  GET|HEAD        org/register .................................................................................................... org.register
  POST            org/register ............................................................................................. org.register.submit
  GET|HEAD        org/settings ................................................................. org.settings.edit › Org\SettingsController@edit
  POST            org/settings ............................................................. org.settings.update › Org\SettingsController@update
  GET|HEAD        org/setup .......................................................................... org.setup.form › Org\SetupController@form
  POST            org/setup ........................................................................ org.setup.store › Org\SetupController@store
  GET|HEAD        organizations/register ................................................................................ organizations.register
  POST            organizations/register .......................................................................... organizations.register.store
  GET|HEAD        partners ............................................................................ partners.index › PartnerController@index
  GET|HEAD        password/confirm ........................................... password.confirm › Auth\ConfirmPasswordController@showConfirmForm
  POST            password/confirm ........................................ generated::7zjv8gmzBkFVYztZ › Auth\ConfirmPasswordController@confirm
  POST            password/email ............................................. password.email › Auth\ForgotPasswordController@sendResetLinkEmail
  GET|HEAD        password/reset .......................................... password.request › Auth\ForgotPasswordController@showLinkRequestForm
  POST            password/reset .......................................................... password.update › Auth\ResetPasswordController@reset
  GET|HEAD        password/reset/{token} ........................................... password.reset › Auth\ResetPasswordController@showResetForm
  GET|HEAD        payment ........................................................................ payments.page › PaymentController@paymentPage
  POST            payment/paytabs ................................................... payments.processPayTabs › PaymentController@processPayTabs
  POST            payment/stripe ...................................................... payments.processStripe › PaymentController@processStripe
  GET|HEAD        payment/success ................................................................. payments.success › PaymentController@success
  GET|HEAD        privacy ........................................................................................................ pages.privacy
  GET|HEAD        profile ............................................................................... profile › Volunteer\ProfileIndexAction
  POST            profile/avatar ....................................................... profile.avatar.store › Volunteer\AvatarController@store
  DELETE          profile/avatar ................................................... profile.avatar.destroy › Volunteer\AvatarController@destroy
  GET|HEAD        region/sharjah ...................................................................... region.sharjah › EventController@sharjah
  POST            register ................................................................. register.perform › Auth\RegisterController@register
  GET|HEAD        register ............................................................. register › Auth\RegisterController@showRegistrationForm
  GET|HEAD        sanctum/csrf-cookie ........................................ sanctum.csrf-cookie › Laravel\Sanctum › CsrfCookieController@show
  GET|HEAD        scan ........................................................................ scan.index › Public\QrAttendanceController@index
  POST            scan ............................................................................................................. scan.submit
  POST            scan/checkin ............................................................ scan.checkin › Public\QrAttendanceController@checkin
  GET|HEAD        scan/checkin ................................................................................................ scan.checkin.get
  POST            scan/checkout ......................................................... scan.checkout › Public\QrAttendanceController@checkout
  GET|HEAD        scan/checkout .............................................................................................. scan.checkout.get
  GET|HEAD        sign-in .......................................................................................... generated::JHP66VC9yAMmUdQQ
  GET|HEAD        signin ................................................................................................................ signin
  GET|HEAD        sitemap.xml ................................................................................ sitemap › SitemapController@index
  GET|HEAD        storage/{path} ................................................................................................. storage.local
  GET|HEAD        terms ............................................................................................................ pages.terms
  GET|HEAD        up ............................................................................................... generated::iuwkYUlDlm46R5vx
  GET|POST|HEAD   verify ................................................................................................................ verify
  GET|HEAD        volunteer/certificate/{certId} ....................... volunteer.generateCertificate › VolunteerController@generateCertificate
  GET|HEAD        volunteer/dashboard ................................................................................ redir.volunteer.dashboard
  POST            volunteer/events/{eventId}/register .............................. volunteer.registerEvent › VolunteerController@registerEvent
  POST            volunteer/kyc/upload ..................................................... volunteer.uploadKyc › VolunteerController@uploadKyc
  GET|HEAD        volunteer/profile .................................................................................... redir.volunteer.profile
  GET|HEAD        volunteer/resume ............................................................... volunteer.resume › VolunteerController@resume

                                                                                                                            Showing [150] routes


## Focused routes:

## Controllers list:
app/Http/Controllers/Admin/AdminAttendanceController.php
app/Http/Controllers/Admin/AdminCertificateController.php
app/Http/Controllers/Admin/AdminController.php
app/Http/Controllers/Admin/AdminDashboardController.php
app/Http/Controllers/Admin/AdminEventController.php
app/Http/Controllers/Admin/AdminPanelController.php
app/Http/Controllers/Admin/AdminSettingsController.php
app/Http/Controllers/Admin/AdminUserController.php
app/Http/Controllers/Admin/AnalyticsController.php
app/Http/Controllers/Admin/ApplicationAdminController.php
app/Http/Controllers/Admin/ApplicationQueueController.php
app/Http/Controllers/Admin/ApplicationReviewController.php
app/Http/Controllers/Admin/AttendanceAdminController.php
app/Http/Controllers/Admin/AttendanceController.php
app/Http/Controllers/Admin/AttendanceDashboardController.php
app/Http/Controllers/Admin/AuditController.php
app/Http/Controllers/Admin/AuditLogController.php
app/Http/Controllers/Admin/Auth/AdminLoginController.php
app/Http/Controllers/Admin/CategoryController.php
app/Http/Controllers/Admin/CertificateAdminController.php
app/Http/Controllers/Admin/CertificateController.php
app/Http/Controllers/Admin/CertificateManagementController.php
app/Http/Controllers/Admin/DashboardCompatController.php
app/Http/Controllers/Admin/DashboardController.php
app/Http/Controllers/Admin/EventAttendanceController.php
app/Http/Controllers/Admin/EventController.php
app/Http/Controllers/Admin/EventInfoFormController.php
app/Http/Controllers/Admin/EventManagementController.php
app/Http/Controllers/Admin/EventPhotoController.php
app/Http/Controllers/Admin/EventVolunteerController.php
app/Http/Controllers/Admin/ExportController.php
app/Http/Controllers/Admin/HoursReportController.php
app/Http/Controllers/Admin/KycAdminController.php
app/Http/Controllers/Admin/KycController.php
app/Http/Controllers/Admin/KycManagementController.php
app/Http/Controllers/Admin/LearningAdminController.php
app/Http/Controllers/Admin/LogController.php
app/Http/Controllers/Admin/MediaController.php
app/Http/Controllers/Admin/NewsController.php
app/Http/Controllers/Admin/NotificationController.php
app/Http/Controllers/Admin/OpportunityAdminController.php
app/Http/Controllers/Admin/OpportunityController.php
app/Http/Controllers/Admin/OpportunityFinalizeController.php
app/Http/Controllers/Admin/OpportunityQRController.php
app/Http/Controllers/Admin/OrgReview.php
app/Http/Controllers/Admin/OrganizationController.php
app/Http/Controllers/Admin/OrganizationReviewController.php
app/Http/Controllers/Admin/PageController.php
app/Http/Controllers/Admin/PartnerController.php
app/Http/Controllers/Admin/ProfileController.php
app/Http/Controllers/Admin/QrScanController.php
app/Http/Controllers/Admin/ReportController.php
app/Http/Controllers/Admin/RoleAdminController.php
app/Http/Controllers/Admin/SettingController.php
app/Http/Controllers/Admin/SettingsController.php
app/Http/Controllers/Admin/SiteSettingController.php
app/Http/Controllers/Admin/SiteSettingsController.php
app/Http/Controllers/Admin/TaskMonitorController.php
app/Http/Controllers/Admin/TranslationController.php
app/Http/Controllers/Admin/UserAdminController.php
app/Http/Controllers/Admin/UserController.php
app/Http/Controllers/Admin/UserExportController.php
app/Http/Controllers/Admin/UserManagementController.php
app/Http/Controllers/Admin/VolunteerHoursAdminController.php
app/Http/Controllers/Admin/VolunteerHoursController.php
app/Http/Controllers/Admin/index.blade.php
app/Http/Controllers/Admin/pdf.blade.php
app/Http/Controllers/AdminController.php
app/Http/Controllers/AdminDashboardController.php
app/Http/Controllers/AdminReportsController.php
app/Http/Controllers/AnalyticsController.php
app/Http/Controllers/Api/MobileApiController.php
app/Http/Controllers/ApplicationController.php
app/Http/Controllers/AttendanceController.php
app/Http/Controllers/Auth/AuthController.php
app/Http/Controllers/Auth/AuthenticatedSessionController.php
app/Http/Controllers/Auth/ConfirmPasswordController.php
app/Http/Controllers/Auth/ConfirmablePasswordController.php
app/Http/Controllers/Auth/EmailVerificationNotificationController.php
app/Http/Controllers/Auth/EmailVerificationPromptController.php
app/Http/Controllers/Auth/ForgotPasswordController.php
app/Http/Controllers/Auth/LoginController.php
app/Http/Controllers/Auth/LogoutController.php
app/Http/Controllers/Auth/NewPasswordController.php
app/Http/Controllers/Auth/OrganizationRegisterController.php
app/Http/Controllers/Auth/OrganizationRegistrationController.php
app/Http/Controllers/Auth/PasswordController.php
app/Http/Controllers/Auth/PasswordResetLinkController.php
app/Http/Controllers/Auth/PublicAuthController.php
app/Http/Controllers/Auth/RegisterController.php
app/Http/Controllers/Auth/RegisteredUserController.php
app/Http/Controllers/Auth/RegistrationController.php
app/Http/Controllers/Auth/ResetPasswordController.php
app/Http/Controllers/Auth/SocialAuthController.php
app/Http/Controllers/Auth/SocialController.php
app/Http/Controllers/Auth/SocialLoginController.php
app/Http/Controllers/Auth/UAEPassController.php
app/Http/Controllers/Auth/VerificationController.php
app/Http/Controllers/Auth/VerifyEmailController.php
app/Http/Controllers/AuthController.php
app/Http/Controllers/BadgeController.php
app/Http/Controllers/Blog/PostController.php
app/Http/Controllers/CategoryController.php
app/Http/Controllers/CategoryPageController.php
app/Http/Controllers/CertificateController.php
app/Http/Controllers/CertificateEmailController.php
app/Http/Controllers/CertificatePdfController.php
app/Http/Controllers/CertificateVerifyController.php
app/Http/Controllers/Controller.php
app/Http/Controllers/Dashboard/DashboardController.php
app/Http/Controllers/DashboardController.php
app/Http/Controllers/DocumentController.php
app/Http/Controllers/DownloadController.php
app/Http/Controllers/EventApplicationController.php
app/Http/Controllers/EventCheckinController.php
app/Http/Controllers/EventController.php
app/Http/Controllers/EventEvaluationController.php
app/Http/Controllers/EventInfoRequestController.php
app/Http/Controllers/EventQrController.php
app/Http/Controllers/EventRegistrationController.php
app/Http/Controllers/EventShowController.php
app/Http/Controllers/Frontend/OpportunityIndexController.php
app/Http/Controllers/Frontend/OpportunityShowController.php
app/Http/Controllers/HealthController.php
app/Http/Controllers/HomeController.php
app/Http/Controllers/ImageTestController.php
app/Http/Controllers/Kyc/KycController.php
app/Http/Controllers/KycController.php
app/Http/Controllers/LangController.php
app/Http/Controllers/LanguageController.php
app/Http/Controllers/LeaderboardController.php
app/Http/Controllers/LearningRequestController.php
app/Http/Controllers/My/ApplicationsController.php
app/Http/Controllers/My/CertificatesController.php
app/Http/Controllers/My/DashboardController.php
app/Http/Controllers/My/HoursController.php
app/Http/Controllers/My/ProfileController.php
app/Http/Controllers/NewsController.php
app/Http/Controllers/NotificationController.php
app/Http/Controllers/OpportunitiesController.php
app/Http/Controllers/OpportunityBrowseController.php
app/Http/Controllers/OpportunityController.php
app/Http/Controllers/Org/ApplicantsController.php
app/Http/Controllers/Org/ApplicantsDecisionController.php
app/Http/Controllers/Org/ApplicantsExportController.php
app/Http/Controllers/Org/AttendanceController.php
app/Http/Controllers/Org/AttendanceSettingsController.php
app/Http/Controllers/Org/CertificatesController.php
app/Http/Controllers/Org/DashboardController.php
app/Http/Controllers/Org/EmailPreviewController.php
app/Http/Controllers/Org/EventController.php
app/Http/Controllers/Org/EventVolunteersController.php
app/Http/Controllers/Org/KycController.php
app/Http/Controllers/Org/OpportunityAttendanceController.php
app/Http/Controllers/Org/OpportunityCapController.php
app/Http/Controllers/Org/OpportunityController.php
app/Http/Controllers/Org/OrgAuthController.php
app/Http/Controllers/Org/OrganizationProfileController.php
app/Http/Controllers/Org/ReportsController.php
app/Http/Controllers/Org/SettingsController.php
app/Http/Controllers/Org/SetupController.php
app/Http/Controllers/Org/ShortlistController.php
app/Http/Controllers/Org/TeamController.php
app/Http/Controllers/OrgDashboardController.php
app/Http/Controllers/OrgOpportunityController.php
app/Http/Controllers/OrgRegistrationController.php
app/Http/Controllers/Organization/DashboardController.php
app/Http/Controllers/Organization/HourApprovalController.php
app/Http/Controllers/Organization/PortalController.php
app/Http/Controllers/OrganizationController.php
app/Http/Controllers/OrganizationDashboardController.php
app/Http/Controllers/OrganizationOpportunityController.php
app/Http/Controllers/OrganizationRegisterController.php
app/Http/Controllers/PageController.php
app/Http/Controllers/PagesController.php
app/Http/Controllers/PartnerController.php
app/Http/Controllers/PaymentController.php
app/Http/Controllers/ProfileController.php
app/Http/Controllers/ProfileHoursController.php
app/Http/Controllers/Public/AttendanceController.php
app/Http/Controllers/Public/CalendarController.php
app/Http/Controllers/Public/CertificateVerifyController.php
app/Http/Controllers/Public/ContactController.php
app/Http/Controllers/Public/OrganizationPublicController.php
app/Http/Controllers/Public/PageController.php
app/Http/Controllers/Public/PartnerIntakeController.php
app/Http/Controllers/Public/PublicOpportunityController.php
app/Http/Controllers/Public/QrAttendanceController.php
app/Http/Controllers/PublicController.php
app/Http/Controllers/PublicSite/HomeController.php
app/Http/Controllers/PublicSite/OpportunityPublicController.php
app/Http/Controllers/QRScannerController.php
app/Http/Controllers/QrScanController.php
app/Http/Controllers/ScanController.php
app/Http/Controllers/SeoController.php
app/Http/Controllers/SitemapController.php
app/Http/Controllers/SocialLoginController.php
app/Http/Controllers/StoryController.php
app/Http/Controllers/SurveyController.php
app/Http/Controllers/Team/TeamController.php
app/Http/Controllers/TeamController.php
app/Http/Controllers/TranscriptController.php
app/Http/Controllers/UserController.php
app/Http/Controllers/VerifyController.php
app/Http/Controllers/Volunteer/AvatarController.php
app/Http/Controllers/Volunteer/CertificateController.php
app/Http/Controllers/Volunteer/DashboardController.php
app/Http/Controllers/Volunteer/MyCertificatesController.php
app/Http/Controllers/Volunteer/OpportunityController.php
app/Http/Controllers/Volunteer/ProfileController.php
app/Http/Controllers/Volunteer/ProfileIndexAction.php
app/Http/Controllers/Volunteer/ProfilePasswordController.php
app/Http/Controllers/Volunteer/RegistrationController.php
app/Http/Controllers/Volunteer/VolunteerDashboardController.php
app/Http/Controllers/VolunteerController.php
app/Http/Controllers/VolunteerDashboardController.php
app/Http/Controllers/VolunteerHourController.php
app/Http/Controllers/VolunteerHoursController.php
app/Http/Controllers/VolunteerOpportunityController.php
app/Http/Controllers/VolunteerProfileController.php
app/Http/Controllers/WishlistController.php

## Controller method signatures:
Admin/AdminAttendanceController.php:10:class AdminAttendanceController extends Controller
Admin/AdminAttendanceController.php:12:    public function index(Event $event)
Admin/AdminAttendanceController.php:38:    public function update(Request $request, Event $event, $userId)
Admin/AdminCertificateController.php:11:    public function index()
Admin/AdminCertificateController.php:30:    public function create()
Admin/AdminCertificateController.php:35:    public function store(Request $request)
Admin/AdminCertificateController.php:70:    private function generateCode(int $len = 10): string
Admin/AdminCertificateController.php:9:class AdminCertificateController extends Controller
Admin/AdminController.php:11:    public function dashboard()
Admin/AdminController.php:18:    public function users()
Admin/AdminController.php:9:class AdminController extends Controller
Admin/AdminDashboardController.php:11:    public function index()
Admin/AdminDashboardController.php:9:class AdminDashboardController extends Controller
Admin/AdminEventController.php:11:    public function index()
Admin/AdminEventController.php:17:    public function create()
Admin/AdminEventController.php:22:    public function store(Request $request)
Admin/AdminEventController.php:35:    public function edit($id)
Admin/AdminEventController.php:41:    public function update(Request $request, $id)
Admin/AdminEventController.php:56:    public function destroy($id)
Admin/AdminEventController.php:9:class AdminEventController extends Controller
Admin/AdminPanelController.php:10:class AdminPanelController extends Controller
Admin/AdminPanelController.php:12:    public function dashboard()
Admin/AdminPanelController.php:19:    public function settings()
Admin/AdminPanelController.php:25:    public function updateSettings(Request $request)
Admin/AdminSettingsController.php:11:    public function index()
Admin/AdminSettingsController.php:18:    public function update(Request $request)
Admin/AdminSettingsController.php:9:class AdminSettingsController extends Controller
Admin/AdminUserController.php:11:    public function index(Request $request)
Admin/AdminUserController.php:25:    public function edit(User $user)
Admin/AdminUserController.php:30:    public function update(Request $request, User $user)
Admin/AdminUserController.php:45:    public function toggle(User $user)
Admin/AdminUserController.php:52:    public function destroy(User $user)
Admin/AdminUserController.php:9:class AdminUserController extends Controller
Admin/AnalyticsController.php:6:class AnalyticsController extends Controller
Admin/AnalyticsController.php:8:    public function index() { return view('admin.analytics.index'); }
Admin/ApplicationAdminController.php:20:  public function update(Request $r, $id){
Admin/ApplicationAdminController.php:7:class ApplicationAdminController extends Controller
Admin/ApplicationAdminController.php:9:  public function index(Request $r){
Admin/ApplicationQueueController.php:10:class ApplicationQueueController extends Controller
Admin/ApplicationQueueController.php:12:    public function index(Request $request)
Admin/ApplicationReviewController.php:10:class ApplicationReviewController extends Controller
Admin/ApplicationReviewController.php:12:    public function index(Request $request)
Admin/ApplicationReviewController.php:53:    public function bulk(Request $request)
Admin/AttendanceAdminController.php:12:class AttendanceAdminController extends Controller
Admin/AttendanceAdminController.php:14:    public function qr(Request $request, int $opportunityId)
Admin/AttendanceAdminController.php:34:    public function index(Request $request)
Admin/AttendanceAdminController.php:47:    public function manual(Request $request, int $opportunityId)
Admin/AttendanceAdminController.php:85:    public function finalize(Request $request, int $opportunityId)
Admin/AttendanceAdminController.php:91:    public function complete(Request $request, int $opportunityId)
Admin/AttendanceController.php:16:class AttendanceController extends Controller
Admin/AttendanceController.php:18:    public function index(Opportunity $opportunity)
Admin/AttendanceController.php:29:    public function update(Request $request, Opportunity $opportunity, Attendance $attendance)
Admin/AttendanceController.php:56:    public function finalizeIssue(Opportunity $opportunity, CertificateService $certs)
Admin/AttendanceController.php:88:    public function resendCertificate(Certificate $certificate, CertificateService $certs)
Admin/AttendanceDashboardController.php:10:    public function index()
Admin/AttendanceDashboardController.php:8:class AttendanceDashboardController extends Controller
Admin/AuditController.php:10:class AuditController extends Controller
Admin/AuditController.php:12:    public function index(Request $request)
Admin/AuditController.php:36:    public function export(Request $request)
Admin/AuditLogController.php:11:    public function index(Request $r)
Admin/AuditLogController.php:26:    public function export()
Admin/AuditLogController.php:9:class AuditLogController extends Controller
Admin/Auth/AdminLoginController.php:11:    public function __construct()
Admin/Auth/AdminLoginController.php:16:    public function show(Request $request)
Admin/Auth/AdminLoginController.php:26:    public function login(Request $request)
Admin/Auth/AdminLoginController.php:49:    public function logout(Request $request)
Admin/Auth/AdminLoginController.php:9:class AdminLoginController extends Controller
Admin/CategoryController.php:11:class CategoryController extends Controller
Admin/CategoryController.php:13:    protected function table()
Admin/CategoryController.php:20:    public function index(Request $request)
Admin/CategoryController.php:35:    public function create()
Admin/CategoryController.php:41:    public function store(Request $request)
Admin/CategoryController.php:53:    public function edit($id)
Admin/CategoryController.php:60:    public function update(Request $request, $id)
Admin/CategoryController.php:72:    public function destroy($id)
Admin/CertificateAdminController.php:16:class CertificateAdminController extends Controller
Admin/CertificateAdminController.php:18:    public function bulkForm()
Admin/CertificateAdminController.php:24:    public function bulkIssue(Request $request, CertificateService $svc)
Admin/CertificateAdminController.php:68:    public function resendForm()
Admin/CertificateAdminController.php:73:    public function resend(Request $request)
Admin/CertificateController.php:13:class CertificateController extends Controller
Admin/CertificateController.php:140:    public function show(Request $request, $id)
Admin/CertificateController.php:152:    public function resendEmail(Request $request, $id)
Admin/CertificateController.php:15:    private function guardAdmin(Request $request)
Admin/CertificateController.php:185:    public function sendWhatsApp(Request $request, $id)
Admin/CertificateController.php:219:    public function revoke(Request $request, $id)
Admin/CertificateController.php:21:    private function checksum(array $payload): string
Admin/CertificateController.php:226:    public function reissue(Request $request, $id)
Admin/CertificateController.php:27:    public function index(Request $request)
Admin/CertificateController.php:63:    public function generateForOpportunity(Request $request, $id)
Admin/CertificateManagementController.php:14:    public function issue($id)
Admin/CertificateManagementController.php:7:class CertificateManagementController extends Controller
Admin/CertificateManagementController.php:9:    public function index()
Admin/DashboardCompatController.php:101:    private function safeOrganizationCount(): int {
Admin/DashboardCompatController.php:10:class DashboardCompatController extends Controller
Admin/DashboardCompatController.php:110:    private function safeHoursSum(): float {
Admin/DashboardCompatController.php:12:    public function __invoke(Request $request){ return $this->index($request); }
Admin/DashboardCompatController.php:14:    public function index(Request $request)
Admin/DashboardCompatController.php:52:    private function recentOppsCompat(int $limit)
Admin/DashboardCompatController.php:85:    private function safeCount(string $table): int {
Admin/DashboardCompatController.php:89:    private function safeVolunteerCount(): int {
Admin/DashboardController.php:11:class DashboardController extends Controller
Admin/DashboardController.php:13:    public function index()
Admin/EventAttendanceController.php:10:    public function showQr($event_id) {
Admin/EventAttendanceController.php:8:class EventAttendanceController extends Controller
Admin/EventController.php:10:class EventController extends Controller
Admin/EventController.php:12:    public function index(Request $request)
Admin/EventController.php:26:    public function create() { return view('admin.events.create'); }
Admin/EventController.php:28:    public function store(Request $request)
Admin/EventController.php:48:    public function edit($id)
Admin/EventController.php:55:    public function update(Request $request, $id)
Admin/EventController.php:73:    public function destroy($id)
Admin/EventInfoFormController.php:11:    public function edit(Event $event)
Admin/EventInfoFormController.php:17:    public function update(Request $request, Event $event)
Admin/EventInfoFormController.php:9:class EventInfoFormController extends Controller
Admin/EventManagementController.php:14:    public function show($id)
Admin/EventManagementController.php:7:class EventManagementController extends Controller
Admin/EventManagementController.php:9:    public function index()
Admin/EventPhotoController.php:11:    public function show(int $eventId)
Admin/EventPhotoController.php:22:    public function store(Request $request, int $eventId): RedirectResponse
Admin/EventPhotoController.php:9:class EventPhotoController extends Controller
Admin/EventVolunteerController.php:10:    public function index(): Response
Admin/EventVolunteerController.php:8:class EventVolunteerController extends Controller
Admin/ExportController.php:10:class ExportController extends Controller
Admin/ExportController.php:12:    private function streamCsv(string $filename, array $header, \Closure $rowGen): StreamedResponse
Admin/ExportController.php:24:    public function users()
Admin/ExportController.php:37:    public function hours()
Admin/ExportController.php:49:    public function certificates()
Admin/ExportController.php:62:    public function applications()
Admin/HoursReportController.php:10:    public function show(Request $r, $opportunityId)
Admin/HoursReportController.php:57:    public function showAll(Request $r)
Admin/HoursReportController.php:8:class HoursReportController extends Controller
Admin/KycAdminController.php:11:    public function index()
Admin/KycAdminController.php:17:    public function show($id)
Admin/KycAdminController.php:23:    public function approve($id)
Admin/KycAdminController.php:32:    public function reject($id)
Admin/KycAdminController.php:9:class KycAdminController extends Controller
Admin/KycController.php:10:    public function index()
Admin/KycController.php:16:    public function approve(int $org, Request $req)
Admin/KycController.php:23:    public function decline(int $org, Request $req)
Admin/KycController.php:8:class KycController extends Controller
Admin/KycManagementController.php:7:class KycManagementController extends Controller
Admin/KycManagementController.php:9:    public function index()
Admin/LearningAdminController.php:11:    public function index(Request $request)
Admin/LearningAdminController.php:25:    public function update(Request $request, $id)
Admin/LearningAdminController.php:9:class LearningAdminController extends Controller
Admin/LogController.php:7:class LogController extends Controller
Admin/LogController.php:9:    public function index()
Admin/MediaController.php:10:    public function upload(Request $r){
Admin/MediaController.php:16:    public function destroy(Media $media){ Storage::disk($media->disk)->delete($media->path); $media->delete(); return back()->with('status','Deleted'); }
Admin/MediaController.php:8:class MediaController extends Controller {
Admin/MediaController.php:9:    public function index(){ $items = Media::orderByDesc('id')->paginate(24); return view('admin.media.index', compact('items')); }
Admin/NewsController.php:10:    public function index()
Admin/NewsController.php:16:    public function create()
Admin/NewsController.php:21:    public function store(Request $request)
Admin/NewsController.php:27:    public function edit($id)
Admin/NewsController.php:33:    public function update(Request $request, $id)
Admin/NewsController.php:40:    public function destroy($id)
Admin/NewsController.php:8:class NewsController extends Controller
Admin/NotificationController.php:6:class NotificationController extends Controller
Admin/NotificationController.php:8:    public function pollPendingKyc()
Admin/OpportunityAdminController.php:11:    public function index() {
Admin/OpportunityAdminController.php:15:    public function create() {
Admin/OpportunityAdminController.php:18:    public function store(Request $r) {
Admin/OpportunityAdminController.php:31:    public function edit($id) {
Admin/OpportunityAdminController.php:35:    public function update(Request $r, $id) {
Admin/OpportunityAdminController.php:49:    public function destroy($id) {
Admin/OpportunityAdminController.php:9:class OpportunityAdminController extends Controller
Admin/OpportunityController.php:11:class OpportunityController extends Controller
Admin/OpportunityController.php:13:    public function index(Request $request)
Admin/OpportunityController.php:27:    public function create() { return view('admin.opportunities.create'); }
Admin/OpportunityController.php:29:    public function store(Request $request)
Admin/OpportunityController.php:49:    public function edit($id)
Admin/OpportunityController.php:56:    public function update(Request $request, $id)
Admin/OpportunityController.php:82:    public function destroy($id)
Admin/OpportunityFinalizeController.php:11:class OpportunityFinalizeController extends Controller
Admin/OpportunityFinalizeController.php:14:    public function form()
Admin/OpportunityFinalizeController.php:20:    public function finalizeByForm(Request $request, CertificateService $svc)
Admin/OpportunityFinalizeController.php:30:    public function finalizeCertificates(Request $request, int $id, CertificateService $svc)
Admin/OpportunityQRController.php:10:    private function ensureTokens($opp){
Admin/OpportunityQRController.php:21:    public function show($id){
Admin/OpportunityQRController.php:29:    public function reset($id){
Admin/OpportunityQRController.php:39:    public function finalize($id){
Admin/OpportunityQRController.php:44:    public function issue($id){
Admin/OpportunityQRController.php:8:class OpportunityQRController extends Controller
Admin/OrgReview.php:15:    public function reject(Request $request, $organization)
Admin/OrgReview.php:22:    public function __invoke(Request $request)
Admin/OrgReview.php:7:class OrgReview extends Controller
Admin/OrgReview.php:9:    public function approve(Request $request, $organization)
Admin/OrganizationController.php:10:class OrganizationController extends Controller
Admin/OrganizationController.php:12:    public function index(Request $request)
Admin/OrganizationController.php:26:    public function create() { return view('admin.organizations.create'); }
Admin/OrganizationController.php:28:    public function store(Request $request)
Admin/OrganizationController.php:43:    public function edit($id)
Admin/OrganizationController.php:50:    public function update(Request $request, $id)
Admin/OrganizationController.php:65:    public function destroy($id)
Admin/OrganizationReviewController.php:11:    public function approve(Organization $organization, Request $request)
Admin/OrganizationReviewController.php:20:    public function reject(Organization $organization, Request $request)
Admin/OrganizationReviewController.php:9:class OrganizationReviewController extends Controller
Admin/PageController.php:12:    public function index()
Admin/PageController.php:24:    public function update(Request $request, $page)
Admin/PageController.php:9:class PageController extends Controller
Admin/PartnerController.php:101:    public function destroy($id)
Admin/PartnerController.php:11:class PartnerController extends Controller
Admin/PartnerController.php:13:    public function index(Request $request)
Admin/PartnerController.php:36:    public function create()
Admin/PartnerController.php:41:    public function store(Request $request)
Admin/PartnerController.php:66:    public function edit($id)
Admin/PartnerController.php:73:    public function update(Request $request, $id)
Admin/ProfileController.php:11:class ProfileController extends Controller
Admin/ProfileController.php:13:    public function edit()
Admin/ProfileController.php:19:    public function update(Request $request)
Admin/QrScanController.php:10:    public function index()
Admin/QrScanController.php:8:class QrScanController extends Controller
Admin/ReportController.php:10:    public function index()
Admin/ReportController.php:8:class ReportController extends Controller
Admin/RoleAdminController.php:10:    public function __construct(){
Admin/RoleAdminController.php:17:    public function index(){
Admin/RoleAdminController.php:22:    public function store(Request $r){
Admin/RoleAdminController.php:27:    public function updatePermissions(Request $r, $id){
Admin/RoleAdminController.php:33:    public function createPermission(Request $r){
Admin/RoleAdminController.php:8:class RoleAdminController extends Controller
Admin/SettingController.php:11:class SettingController extends Controller
Admin/SettingController.php:13:    public function index(Request $request)
Admin/SettingController.php:33:    public function edit()
Admin/SettingController.php:41:    public function update(Request $request)
Admin/SettingController.php:65:    protected function set(string $key, $value): void
Admin/SettingsController.php:10:class SettingsController extends Controller
Admin/SettingsController.php:12:    public function index()
Admin/SettingsController.php:30:    public function update(Request $request)
Admin/SiteSettingController.php:10:class SiteSettingController extends Controller
Admin/SiteSettingController.php:12:    public function index() {
Admin/SiteSettingController.php:17:    public function update(Request $r) {
Admin/SiteSettingsController.php:10:class SiteSettingsController extends Controller
Admin/SiteSettingsController.php:12:    public function index()
Admin/SiteSettingsController.php:18:    public function update(Request $request)
Admin/TaskMonitorController.php:7:class TaskMonitorController extends Controller
Admin/TaskMonitorController.php:9:    public function index()
Admin/TranslationController.php:10:    public function index()
Admin/TranslationController.php:16:    public function save(Request $request)
Admin/TranslationController.php:8:class TranslationController extends Controller
Admin/UserAdminController.php:11:    public function index(Request $r)
Admin/UserAdminController.php:26:    public function edit($id)
Admin/UserAdminController.php:32:    public function update(Request $r, $id)
Admin/UserAdminController.php:48:    public function toggleActive($id)
Admin/UserAdminController.php:56:    public function makeAdmin($id)
Admin/UserAdminController.php:64:    public function removeAdmin($id)
Admin/UserAdminController.php:72:    public function exportCsv()
Admin/UserAdminController.php:93:    public function updateRoles(Request $r, $id)
Admin/UserAdminController.php:9:class UserAdminController extends Controller
Admin/UserController.php:11:    public function index(Request $request)
Admin/UserController.php:28:    public function create() {}
Admin/UserController.php:29:    public function store(Request $r) {}
Admin/UserController.php:30:    public function show(User $user) {}
Admin/UserController.php:31:    public function edit(User $user) {}
Admin/UserController.php:32:    public function update(Request $r, User $user) {}
Admin/UserController.php:33:    public function destroy(User $user) {}
Admin/UserController.php:9:class UserController extends Controller
Admin/UserExportController.php:7:class UserExportController extends Controller
Admin/UserExportController.php:9:    public function csv()
Admin/UserManagementController.php:14:    public function show($id)
Admin/UserManagementController.php:7:class UserManagementController extends Controller
Admin/UserManagementController.php:9:    public function index()
Admin/VolunteerHoursAdminController.php:11:    public function approve($id)
Admin/VolunteerHoursAdminController.php:8:class VolunteerHoursAdminController extends Controller
Admin/VolunteerHoursController.php:10:    public function index()
Admin/VolunteerHoursController.php:16:    public function approve(Request $request, EventApplication $application)
Admin/VolunteerHoursController.php:8:class VolunteerHoursController extends Controller
AdminController.php:10:class AdminController extends Controller
AdminController.php:12:    public function dashboard()
AdminDashboardController.php:7:class AdminDashboardController extends Controller
AdminDashboardController.php:9:    public function index()
AdminReportsController.php:12:class AdminReportsController extends Controller
AdminReportsController.php:14:    public function index()
AdminReportsController.php:33:    public function export($type)
AnalyticsController.php:11:class AnalyticsController extends Controller
AnalyticsController.php:13:    public function dashboard()
Api/MobileApiController.php:103:    public function logout(Request $request)
Api/MobileApiController.php:14:class MobileApiController extends Controller
Api/MobileApiController.php:17:    public function login(Request $request)
Api/MobileApiController.php:36:    public function register(Request $request)
Api/MobileApiController.php:57:    public function events(Request $request)
Api/MobileApiController.php:64:    public function registerForEvent(Request $request)
Api/MobileApiController.php:88:    public function certificates(Request $request)
Api/MobileApiController.php:96:    public function profile(Request $request)
ApplicationController.php:19:  public function cancel(Request $r, $id){
ApplicationController.php:6:class ApplicationController extends Controller
ApplicationController.php:8:  public function apply(Request $r, $id){
AttendanceController.php:18:    public function checkout(Request $r, string $token){
AttendanceController.php:5:class AttendanceController extends Controller
AttendanceController.php:7:    private function needAuth(Request $r){ return $r->user() ? null : redirect()->guest(route('login'))->with('status', __('Please sign in to continue.')); }
AttendanceController.php:9:    public function checkin(Request $r, string $token){
Auth/AuthController.php:11:    public function login(Request $request)
Auth/AuthController.php:43:    public function logout(Request $request)
Auth/AuthController.php:54:    function route_exists(string $name): bool
Auth/AuthController.php:9:class AuthController extends Controller
Auth/AuthenticatedSessionController.php:12:class AuthenticatedSessionController extends Controller
Auth/AuthenticatedSessionController.php:17:    public function create(): View
Auth/AuthenticatedSessionController.php:25:    public function store(LoginRequest $request): RedirectResponse
Auth/AuthenticatedSessionController.php:37:    public function destroy(Request $request): RedirectResponse
Auth/ConfirmPasswordController.php:35:    public function __construct()
Auth/ConfirmPasswordController.php:8:class ConfirmPasswordController extends Controller
Auth/ConfirmablePasswordController.php:12:class ConfirmablePasswordController extends Controller
Auth/ConfirmablePasswordController.php:17:    public function show(): View
Auth/ConfirmablePasswordController.php:25:    public function store(Request $request): RedirectResponse
Auth/EmailVerificationNotificationController.php:14:    public function store(Request $request): RedirectResponse
Auth/EmailVerificationNotificationController.php:9:class EmailVerificationNotificationController extends Controller
Auth/EmailVerificationPromptController.php:10:class EmailVerificationPromptController extends Controller
Auth/EmailVerificationPromptController.php:15:    public function __invoke(Request $request): RedirectResponse|View
Auth/ForgotPasswordController.php:11:    public function showLinkRequestForm()
Auth/ForgotPasswordController.php:16:    public function sendResetLinkEmail(Request $request)
Auth/ForgotPasswordController.php:9:class ForgotPasswordController extends Controller
Auth/LoginController.php:13:    protected function redirectTo()
Auth/LoginController.php:31:    public function __construct()
Auth/LoginController.php:9:class LoginController extends Controller
Auth/LogoutController.php:10:    public function logout()
Auth/LogoutController.php:8:class LogoutController extends Controller
Auth/NewPasswordController.php:16:class NewPasswordController extends Controller
Auth/NewPasswordController.php:21:    public function create(Request $request): View
Auth/NewPasswordController.php:31:    public function store(Request $request): RedirectResponse
Auth/OrganizationRegisterController.php:13:class OrganizationRegisterController extends Controller
Auth/OrganizationRegisterController.php:15:    public function create()
Auth/OrganizationRegisterController.php:20:    public function store(Request $request)
Auth/OrganizationRegistrationController.php:11:class OrganizationRegistrationController extends Controller
Auth/OrganizationRegistrationController.php:13:    public function create()
Auth/OrganizationRegistrationController.php:18:    public function store(Request $request)
Auth/PasswordController.php:11:class PasswordController extends Controller
Auth/PasswordController.php:16:    public function update(Request $request): RedirectResponse
Auth/PasswordResetLinkController.php:11:class PasswordResetLinkController extends Controller
Auth/PasswordResetLinkController.php:16:    public function create(): View
Auth/PasswordResetLinkController.php:26:    public function store(Request $request): RedirectResponse
Auth/PublicAuthController.php:11:class PublicAuthController extends Controller
Auth/PublicAuthController.php:13:    public function showRegister()
Auth/PublicAuthController.php:18:    public function register(Request $request)
Auth/PublicAuthController.php:42:    public function showLogin()
Auth/PublicAuthController.php:47:    public function login(Request $request)
Auth/PublicAuthController.php:63:    public function logout(Request $request)
Auth/RegisterController.php:11:class RegisterController extends Controller
Auth/RegisterController.php:15:    protected function redirectTo()
Auth/RegisterController.php:20:    public function __construct()
Auth/RegisterController.php:27:    protected function validator(array $data)
Auth/RegisterController.php:36:    protected function create(array $data)
Auth/RegisteredUserController.php:15:class RegisteredUserController extends Controller
Auth/RegisteredUserController.php:20:    public function create(): View
Auth/RegisteredUserController.php:30:    public function store(Request $request): RedirectResponse
Auth/RegistrationController.php:13:class RegistrationController extends Controller
Auth/RegistrationController.php:15:    public function show()
Auth/RegistrationController.php:20:    public function store(Request $request)
Auth/ResetPasswordController.php:10:class ResetPasswordController extends Controller
Auth/ResetPasswordController.php:12:    public function showResetForm($token)
Auth/ResetPasswordController.php:17:    public function reset(Request $request)
Auth/SocialAuthController.php:12:class SocialAuthController extends Controller
Auth/SocialAuthController.php:15:    public function googleRedirect()
Auth/SocialAuthController.php:20:    public function googleCallback()
Auth/SocialAuthController.php:42:    public function facebookRedirect()
Auth/SocialAuthController.php:48:    public function facebookCallback()
Auth/SocialController.php:11:    public function redirect($provider)
Auth/SocialController.php:16:    public function callback($provider)
Auth/SocialController.php:9:class SocialController extends Controller
Auth/SocialLoginController.php:11:class SocialLoginController extends Controller
Auth/SocialLoginController.php:13:    public function redirect(string $provider)
Auth/SocialLoginController.php:18:    public function callback(string $provider)
Auth/UAEPassController.php:10:    public function redirect()
Auth/UAEPassController.php:21:    public function callback(Request $request)
Auth/UAEPassController.php:8:class UAEPassController extends Controller
Auth/VerificationController.php:11:    public function show()
Auth/VerificationController.php:16:    public function verify(EmailVerificationRequest $request)
Auth/VerificationController.php:23:    public function resend(Request $request)
Auth/VerificationController.php:9:class VerificationController extends Controller
Auth/VerifyEmailController.php:10:class VerifyEmailController extends Controller
Auth/VerifyEmailController.php:15:    public function __invoke(EmailVerificationRequest $request): RedirectResponse
AuthController.php:11:class AuthController extends Controller
AuthController.php:13:    public function showLogin(Request $request)
AuthController.php:20:    public function login(Request $request)
AuthController.php:46:    public function showRegister(Request $request)
AuthController.php:53:    public function register(Request $request)
AuthController.php:78:    public function logout(Request $request)
BadgeController.php:7:class BadgeController extends Controller
BadgeController.php:9:    public function index()
Blog/PostController.php:11:    public function index() { return view('blog.index', ['posts' => BlogPost::latest()->get()]); }
Blog/PostController.php:12:    public function show($id) { return view('blog.show', ['post' => BlogPost::findOrFail($id)]); }
Blog/PostController.php:13:    public function create() { return view('blog.create'); }
Blog/PostController.php:14:    public function store(Request $req)
Blog/PostController.php:9:class PostController extends Controller
CategoryController.php:10:    public function index()
CategoryController.php:16:    public function show(Category $category)
CategoryController.php:8:class CategoryController extends Controller
CategoryPageController.php:11:    public function index()
CategoryPageController.php:20:    public function show($slug)
CategoryPageController.php:9:class CategoryPageController extends Controller
CertificateController.php:10:class CertificateController extends Controller
CertificateController.php:12:    public function index(Request $request)
CertificateEmailController.php:10:    public function send(Certificate $certificate)
CertificateEmailController.php:8:class CertificateEmailController extends Controller
CertificatePdfController.php:10:class CertificatePdfController extends Controller
CertificatePdfController.php:13:    public function download($id)
CertificateVerifyController.php:5:class CertificateVerifyController extends Controller
CertificateVerifyController.php:7:  public function form(){ return view('public/certificates/verify'); }
CertificateVerifyController.php:8:  public function check($code){
Controller.php:9:class Controller extends BaseController
Dashboard/DashboardController.php:11:    public function index()
Dashboard/DashboardController.php:9:class DashboardController extends Controller
DashboardController.php:10:class DashboardController extends Controller
DashboardController.php:12:    public function index(Request $request)
DocumentController.php:11:    public function store(Request $request)
DocumentController.php:37:    public function destroy(Request $request, UserDocument $doc)
DocumentController.php:9:class DocumentController extends Controller
DownloadController.php:10:    public function index()
DownloadController.php:8:class DownloadController extends Controller
EventApplicationController.php:11:    public function apply(Request $request, Event $event)
EventApplicationController.php:26:    public function withdraw(Event $event)
EventApplicationController.php:9:class EventApplicationController extends Controller
EventCheckinController.php:11:    public function checkin(Event $event)
EventCheckinController.php:21:    public function checkout(Event $event)
EventCheckinController.php:9:class EventCheckinController extends Controller
EventController.php:11:    public function index(Request $request)
EventController.php:29:    public function show(string $idOrSlug)
EventController.php:43:    public function sharjah(Request $request)
EventController.php:9:class EventController extends Controller
EventEvaluationController.php:11:    public function create(Event $event)
EventEvaluationController.php:16:    public function store(Request $request, Event $event)
EventEvaluationController.php:9:class EventEvaluationController extends Controller
EventInfoRequestController.php:10:    public function show(Event $event)
EventInfoRequestController.php:16:    public function submit(Request $request, Event $event)
EventInfoRequestController.php:8:class EventInfoRequestController extends Controller
EventQrController.php:7:class EventQrController extends Controller
EventQrController.php:9:    public function show(Event $event)
EventRegistrationController.php:10:class EventRegistrationController extends Controller
EventRegistrationController.php:12:    public function join(Event $event)
EventRegistrationController.php:23:    public function unjoin(Event $event)
EventShowController.php:7:class EventShowController extends Controller
EventShowController.php:9:    public function __invoke($idOrSlug)
Frontend/OpportunityIndexController.php:11:    public function __invoke(Request $request)
Frontend/OpportunityIndexController.php:9:class OpportunityIndexController extends Controller
Frontend/OpportunityShowController.php:10:    public function __invoke($id)
Frontend/OpportunityShowController.php:8:class OpportunityShowController extends Controller
HealthController.php:10:class HealthController extends Controller
HealthController.php:12:    public function __invoke(Request $request): JsonResponse
HomeController.php:7:class HomeController extends Controller
HomeController.php:9:    public function index()
ImageTestController.php:10:    public function index()
ImageTestController.php:8:class ImageTestController extends Controller
Kyc/KycController.php:10:class KycController extends Controller
Kyc/KycController.php:12:    public function showUploadForm()
Kyc/KycController.php:17:    public function upload(Request $request)
KycController.php:10:    public function show()
KycController.php:16:    public function upload(Request $request)
KycController.php:8:class KycController extends Controller
LangController.php:10:    public function switch(Request $request, string $locale): RedirectResponse
LangController.php:8:class LangController extends Controller
LanguageController.php:10:class LanguageController extends Controller
LanguageController.php:12:    public function switch($locale)
LeaderboardController.php:19:    public function organizations()
LeaderboardController.php:7:class LeaderboardController extends Controller
LeaderboardController.php:9:    public function volunteers()
LearningRequestController.php:10:    public function create()
LearningRequestController.php:15:    public function store(Request $request)
LearningRequestController.php:8:class LearningRequestController extends Controller
My/ApplicationsController.php:10:class ApplicationsController extends Controller
My/ApplicationsController.php:12:    public function index(Request $request)
My/CertificatesController.php:10:class CertificatesController extends Controller
My/CertificatesController.php:12:    public function index(Request $request)
My/CertificatesController.php:20:    public function download(Request $request, $id)
My/DashboardController.php:10:class DashboardController extends Controller
My/DashboardController.php:12:    public function index(Request $request)
My/HoursController.php:10:class HoursController extends Controller
My/HoursController.php:12:    public function index(Request $request)
My/ProfileController.php:10:class ProfileController extends Controller
My/ProfileController.php:12:    public function show(Request $request)
My/ProfileController.php:17:    public function update(Request $request)
NewsController.php:13:    public function show($id)
NewsController.php:6:class NewsController extends Controller
NewsController.php:8:    public function index()
NotificationController.php:20:    public function markRead(Request $request, string $id)
NotificationController.php:29:    public function markAllRead(Request $request)
NotificationController.php:36:    public function test(Request $request)
NotificationController.php:7:class NotificationController extends Controller
NotificationController.php:9:    public function index(Request $request)
OpportunitiesController.php:10:class OpportunitiesController extends Controller
OpportunitiesController.php:12:    public function index()
OpportunitiesController.php:25:    public function show($id)
OpportunitiesController.php:40:    public function apply($id)
OpportunityBrowseController.php:10:class OpportunityBrowseController extends Controller
OpportunityBrowseController.php:12:    public function index(Request $r)
OpportunityController.php:11:class OpportunityController extends Controller
OpportunityController.php:13:    public function index(Request $request)
OpportunityController.php:64:    public function show($idOrSlug)
Org/ApplicantsController.php:108:    protected function statusValue(string $table, string $col, string $action)
Org/ApplicantsController.php:137:    public function decision(Request $request, int $eventId, int $appId)
Org/ApplicantsController.php:13:class ApplicantsController extends Controller
Org/ApplicantsController.php:157:    public function exportCsv(Request $request, int $eventId)
Org/ApplicantsController.php:15:    protected function detect(): array
Org/ApplicantsController.php:50:    protected function assertEventOwned(int $eventId): object
Org/ApplicantsController.php:69:    public function index(Request $request, int $eventId)
Org/ApplicantsDecisionController.php:130:    public function single(Request $request, int $application)
Org/ApplicantsDecisionController.php:13:class ApplicantsDecisionController extends Controller
Org/ApplicantsDecisionController.php:15:    public function bulk(Request $request)
Org/ApplicantsDecisionController.php:191:    private function getSlotCap(int $oppId): ?int
Org/ApplicantsDecisionController.php:201:    private function backOrJson(array $payload, int $code = 200)
Org/ApplicantsExportController.php:11:class ApplicantsExportController extends Controller
Org/ApplicantsExportController.php:13:    public function csv(Request $request)
Org/AttendanceController.php:101:    public function undo(Request $request, int $attendanceId)
Org/AttendanceController.php:124:    private function throttleMessage(int $oppId): ?string
Org/AttendanceController.php:12:class AttendanceController extends Controller
Org/AttendanceController.php:137:    private function parsePayload(string $p): array
Org/AttendanceController.php:147:    private function resolveVolunteerFromPayload(string $p): ?int
Org/AttendanceController.php:154:    private function passesGeofence(int $oppId, $lat, $lng): bool
Org/AttendanceController.php:165:    private function haversine($lat1,$lon1,$lat2,$lon2): float
Org/AttendanceController.php:170:    private function recentDuplicate(int $oppId,int $userId,string $action): bool
Org/AttendanceController.php:175:    private function logScan(int $oppId,string $action,string $payload,bool $ok,?string $note=null,?int $userId=null,$lat=null,$lng=null,$acc=null): void
Org/AttendanceController.php:18:    public function scan(Opportunity $opportunity)
Org/AttendanceController.php:24:    public function checkin(Request $request, Opportunity $opportunity)
Org/AttendanceController.php:65:    public function checkout(Request $request, Opportunity $opportunity)
Org/AttendanceSettingsController.php:11:    public function edit(Opportunity $opportunity)
Org/AttendanceSettingsController.php:21:    public function update(Request $request, Opportunity $opportunity)
Org/AttendanceSettingsController.php:9:class AttendanceSettingsController extends Controller
Org/CertificatesController.php:115:    public function resend(Request $request, Opportunity $opportunity)
Org/CertificatesController.php:138:    public function exportCsv(Opportunity $opportunity)
Org/CertificatesController.php:164:    private function generateCode(): string
Org/CertificatesController.php:17:class CertificatesController extends Controller
Org/CertificatesController.php:19:    public function index(Opportunity $opportunity)
Org/CertificatesController.php:34:    public function issue(Request $request, Opportunity $opportunity)
Org/DashboardController.php:10:class DashboardController extends Controller
Org/DashboardController.php:12:    public function __construct()
Org/DashboardController.php:180:    private function tableExists(string $table): bool
Org/DashboardController.php:189:    private function columnExists(string $table, string $column): bool
Org/DashboardController.php:18:    public function index(Request $request)
Org/DashboardController.php:198:    private function hasInOutColumns(): bool
Org/EmailPreviewController.php:10:    public function show()
Org/EmailPreviewController.php:8:class EmailPreviewController extends Controller
Org/EventController.php:116:    public function export(Request $request, int $opportunity)
Org/EventController.php:12:class EventController extends Controller
Org/EventController.php:14:    protected function orgIdsForUser($user): array
Org/EventController.php:154:    public function updateMinutes(Request $request, int $attendance)
Org/EventController.php:31:    protected function detectOrgFk(): ?string
Org/EventController.php:41:    protected function assertOwnsOpportunity(int $opportunityId, array $orgIds, ?string $orgFk): void
Org/EventController.php:54:    public function index(Request $request)
Org/EventController.php:89:    public function volunteers(Request $request, int $opportunity)
Org/EventVolunteersController.php:10:class EventVolunteersController extends Controller
Org/EventVolunteersController.php:12:    public function __construct()
Org/EventVolunteersController.php:17:    public function index($opportunityId, Request $request)
Org/EventVolunteersController.php:39:    public function exportCsv($opportunityId): StreamedResponse
Org/EventVolunteersController.php:61:    private function fetchRows($opportunityId)
Org/EventVolunteersController.php:97:    private function tableExists(string $table): bool
Org/KycController.php:10:    public function edit()
Org/KycController.php:16:    public function update(Request $req)
Org/KycController.php:8:class KycController extends Controller
Org/OpportunityAttendanceController.php:18:class OpportunityAttendanceController extends Controller
Org/OpportunityAttendanceController.php:20:    public function __construct()
Org/OpportunityAttendanceController.php:25:    protected function userHasOrgAccess(Opportunity $op): bool
Org/OpportunityAttendanceController.php:40:    protected function denyIfNoAccess(Opportunity $op)
Org/OpportunityAttendanceController.php:46:    public function index(Opportunity $opportunity)
Org/OpportunityAttendanceController.php:60:    public function finalize(Opportunity $opportunity, Request $request, IssueCertificates $issuer)
Org/OpportunityAttendanceController.php:97:    protected function logAudit(int $opportunityId, string $action, array $meta = []): void
Org/OpportunityCapController.php:11:class OpportunityCapController extends Controller
Org/OpportunityCapController.php:13:    public function update(Request $request, Opportunity $opportunity)
Org/OpportunityController.php:11:class OpportunityController extends Controller
Org/OpportunityController.php:13:    public function index()
Org/OpportunityController.php:19:    public function create()
Org/OpportunityController.php:24:    public function store(Request $request)
Org/OrgAuthController.php:13:class OrgAuthController extends Controller
Org/OrgAuthController.php:15:    public function showRegisterForm()
Org/OrgAuthController.php:20:    public function register(Request $request)
Org/OrganizationProfileController.php:11:    public function show(Request $request)
Org/OrganizationProfileController.php:17:    public function update(Request $request)
Org/OrganizationProfileController.php:69:    public function requestLicense(Request $request)
Org/OrganizationProfileController.php:9:class OrganizationProfileController extends Controller
Org/ReportsController.php:117:    private function tableExists(string $table): bool
Org/ReportsController.php:11:class ReportsController extends Controller
Org/ReportsController.php:121:    private function columnExists(string $table, string $col): bool
Org/ReportsController.php:13:    public function __construct()
Org/ReportsController.php:18:    public function index(Request $request)
Org/ReportsController.php:39:    public function exportHoursCsv(Request $request): StreamedResponse
Org/ReportsController.php:70:    private function buildHoursQuery(?string $dateFrom, ?string $dateTo, $oppId)
Org/SettingsController.php:11:class SettingsController extends Controller
Org/SettingsController.php:13:    public function edit()
Org/SettingsController.php:36:    public function update(Request $request)
Org/SetupController.php:10:class SetupController extends Controller
Org/SetupController.php:12:    public function form()
Org/SetupController.php:17:    public function store(Request $request)
Org/ShortlistController.php:108:    public function updateSlotCap(Request $request, $opportunityId)
Org/ShortlistController.php:131:    private function enforceSlotCap($opportunity, string $table): void
Org/ShortlistController.php:13:class ShortlistController extends Controller
Org/ShortlistController.php:15:    private function appTable(): string
Org/ShortlistController.php:179:    private function authorizeOpportunity($opportunity): void
Org/ShortlistController.php:189:    private function audit(string $action, array $meta, int $opportunityId): void
Org/ShortlistController.php:23:    public function index($opportunityId)
Org/ShortlistController.php:70:    public function bulk(Request $request, $opportunityId)
Org/TeamController.php:11:    public function index()
Org/TeamController.php:18:    public function invite(Request $req)
Org/TeamController.php:38:    public function remove(int $user)
Org/TeamController.php:9:class TeamController extends Controller
OrgDashboardController.php:11:    public function index()
OrgDashboardController.php:32:    public function exportApplications()
OrgDashboardController.php:9:class OrgDashboardController extends Controller
OrgOpportunityController.php:104:    private function validateData(Request $r): array
OrgOpportunityController.php:10:class OrgOpportunityController extends Controller
OrgOpportunityController.php:12:    public function __construct()
OrgOpportunityController.php:18:    public function index()
OrgOpportunityController.php:30:    public function create()
OrgOpportunityController.php:36:    public function store(Request $r)
OrgOpportunityController.php:62:    public function edit(Opportunity $opportunity)
OrgOpportunityController.php:69:    public function update(Request $r, Opportunity $opportunity)
OrgOpportunityController.php:87:    public function destroy(Opportunity $opportunity)
OrgOpportunityController.php:96:    private function authorizeOwner(Opportunity $op)
OrgRegistrationController.php:11:    public function create()
OrgRegistrationController.php:16:    public function store(Request $request)
OrgRegistrationController.php:42:    public function pending()
OrgRegistrationController.php:48:    public function approve(Organization $organization)
OrgRegistrationController.php:54:    public function reject(Organization $organization)
OrgRegistrationController.php:9:class OrgRegistrationController extends Controller
Organization/DashboardController.php:11:    public function index()
Organization/DashboardController.php:9:class DashboardController extends Controller
Organization/HourApprovalController.php:11:    public function index()
Organization/HourApprovalController.php:20:    public function approve($id)
Organization/HourApprovalController.php:27:    public function reject($id)
Organization/HourApprovalController.php:9:class HourApprovalController extends Controller
Organization/PortalController.php:12:class PortalController extends Controller
Organization/PortalController.php:14:    public function dashboard()
Organization/PortalController.php:26:    public function createEvent() { return view('organization.events.create'); }
Organization/PortalController.php:27:    public function storeEvent(Request $req)
Organization/PortalController.php:33:    public function editEvent($id) { $event = Event::findOrFail($id); return view('organization.events.edit', compact('event')); }
Organization/PortalController.php:34:    public function updateEvent(Request $req, $id)
Organization/PortalController.php:39:    public function destroyEvent($id)
Organization/PortalController.php:45:    public function createOpportunity() { return view('organization.opportunities.create'); }
Organization/PortalController.php:46:    public function storeOpportunity(Request $req)
Organization/PortalController.php:52:    public function editOpportunity($id) { $op = Opportunity::findOrFail($id); return view('organization.opportunities.edit', compact('op')); }
Organization/PortalController.php:53:    public function updateOpportunity(Request $req, $id)
Organization/PortalController.php:58:    public function destroyOpportunity($id)
OrganizationController.php:12:    public function index(Request $request)
OrganizationController.php:9:class OrganizationController extends Controller
OrganizationDashboardController.php:19:    public function exportCsv()
OrganizationDashboardController.php:7:class OrganizationDashboardController extends Controller
OrganizationDashboardController.php:9:    public function index()
OrganizationOpportunityController.php:11:    public function index(Request $request)
OrganizationOpportunityController.php:18:    public function create()
OrganizationOpportunityController.php:24:    public function store(Request $request)
OrganizationOpportunityController.php:44:    public function edit(Opportunity $opportunity)
OrganizationOpportunityController.php:51:    public function update(Request $request, Opportunity $opportunity)
OrganizationOpportunityController.php:72:    public function destroy(Opportunity $opportunity)
OrganizationOpportunityController.php:9:class OrganizationOpportunityController extends Controller
OrganizationRegisterController.php:11:class OrganizationRegisterController extends Controller
OrganizationRegisterController.php:13:    public function store(Request $request)
PageController.php:10:    public function about()
PageController.php:15:    public function faq()
PageController.php:20:    public function partners()
PageController.php:25:    public function contactForm()
PageController.php:30:    public function contactSubmit(Request $request)
PageController.php:8:class PageController extends Controller
PagesController.php:14:    public function faq()
PagesController.php:19:    public function about()
PagesController.php:24:    public function contact()
PagesController.php:29:    public function partners()
PagesController.php:34:    public function license()
PagesController.php:39:    public function app()
PagesController.php:7:class PagesController extends Controller
PagesController.php:9:    public function regional($region)
PartnerController.php:10:    public function index()
PartnerController.php:8:class PartnerController extends Controller
PaymentController.php:6:class PaymentController extends Controller
PaymentController.php:8:    public function createCheckout(Request $request)
ProfileController.php:10:class ProfileController extends Controller
ProfileController.php:12:    public function edit(Request $request)
ProfileController.php:19:    public function update(Request $request)
ProfileHoursController.php:10:    public function index()
ProfileHoursController.php:8:class ProfileHoursController extends Controller
Public/AttendanceController.php:12:    public function handle(Request $request, string $token)
Public/AttendanceController.php:9:class AttendanceController
Public/CalendarController.php:107:    private function icsEscape(string $s): string {
Public/CalendarController.php:113:    public function icsAll() {
Public/CalendarController.php:11:class CalendarController extends Controller
Public/CalendarController.php:141:    public function icsOpp($id) {
Public/CalendarController.php:14:    private function firstCol(string $table, array $cands) {
Public/CalendarController.php:155:    public function icsEvent($id) {
Public/CalendarController.php:19:    private function pickRangeCols(string $table): array {
Public/CalendarController.php:25:    private function allUpcomingFrom(string $table, string $titleCol = 'title') {
Public/CalendarController.php:61:    public function index(Request $request) {
Public/CalendarController.php:82:    private function vevent($uid, $summary, Carbon $start, Carbon $end, $url = null, $desc = null, $loc = null): string {
Public/CalendarController.php:98:    private function icsResponse(array $events, string $name = 'calendar.ics') {
Public/CertificateVerifyController.php:11:    public function index()
Public/CertificateVerifyController.php:16:    public function show($code)
Public/CertificateVerifyController.php:9:class CertificateVerifyController extends Controller
Public/ContactController.php:10:class ContactController extends Controller
Public/ContactController.php:12:    public function form()
Public/ContactController.php:17:    public function submit(Request $request)
Public/OrganizationPublicController.php:11:class OrganizationPublicController extends Controller
Public/OrganizationPublicController.php:13:    public function index(Request $request)
Public/OrganizationPublicController.php:54:    public function show(Request $request, $id, $slug = null)
Public/PageController.php:11:    public function about()   { return view('pages.about'); }
Public/PageController.php:12:    public function faq()     { return view('pages.faq'); }
Public/PageController.php:13:    public function partners(){ return view('pages.partners'); }
Public/PageController.php:15:    public function regionsIndex()
Public/PageController.php:29:    public function regionShow(string $slug)
Public/PageController.php:9:class PageController extends Controller
Public/PartnerIntakeController.php:10:class PartnerIntakeController extends Controller
Public/PartnerIntakeController.php:12:    public function form()
Public/PartnerIntakeController.php:17:    public function submit(Request $request)
Public/PublicOpportunityController.php:22:  public function show($id){
Public/PublicOpportunityController.php:7:class PublicOpportunityController extends Controller
Public/PublicOpportunityController.php:9:  public function index(Request $r){
Public/QrAttendanceController.php:12:class QrAttendanceController extends Controller
Public/QrAttendanceController.php:14:    public function index(Request $r)
Public/QrAttendanceController.php:21:    public function checkin(Request $r)  { return $this->handleScan($r, 'checkin'); }
Public/QrAttendanceController.php:22:    public function checkout(Request $r) { return $this->handleScan($r, 'checkout'); }
Public/QrAttendanceController.php:24:    protected function handleScan(Request $r, string $action)
PublicController.php:11:class PublicController extends Controller
PublicController.php:13:    public function home()
PublicController.php:20:    public function about() { return view('public.about'); }
PublicController.php:22:    public function contact() { return view('public.contact'); }
PublicController.php:24:    public function sendContact(Request $request)
PublicController.php:35:    public function faq() { return view('public.faq'); }
PublicController.php:37:    public function partners()
PublicController.php:43:    public function stories()
PublicController.php:49:    public function showStory(Story $story)
PublicSite/HomeController.php:10:class HomeController extends Controller
PublicSite/HomeController.php:12:    public function index(Request $request)
PublicSite/OpportunityPublicController.php:12:class OpportunityPublicController extends Controller
PublicSite/OpportunityPublicController.php:14:    public function index(Request $request)
PublicSite/OpportunityPublicController.php:86:    public function show(Request $request, int $opportunity)
QRScannerController.php:7:class QRScannerController extends Controller
QRScannerController.php:9:    public function index()
QrScanController.php:10:class QrScanController extends Controller
QrScanController.php:15:    public function scan(Request $request, Attendance $attendance, $action)
ScanController.php:16:class ScanController extends Controller
ScanController.php:189:    private function haversine(float $lat1, float $lon1, float $lat2, float $lon2): float
ScanController.php:19:    public function scan(Request $request, QrTokenService $qr, HoursService $hours, AnomalyService $anomaly)
SeoController.php:10:    public function sitemap()
SeoController.php:16:    public function robots()
SeoController.php:8:class SeoController extends Controller
SitemapController.php:7:class SitemapController extends Controller
SitemapController.php:9:    public function index(): Response
SocialLoginController.php:10:class SocialLoginController extends Controller
SocialLoginController.php:13:    public function redirect(string $provider)
SocialLoginController.php:26:    public function callback(string $provider)
SocialLoginController.php:70:    public function uaePassRedirect()
SocialLoginController.php:84:    public function uaePassCallback()
StoryController.php:10:    public function index()
StoryController.php:16:    public function show(Story $story)
StoryController.php:8:class StoryController extends Controller
SurveyController.php:11:    public function create(Event $event)
SurveyController.php:16:    public function store(Request $request, Event $event)
SurveyController.php:9:class SurveyController extends Controller
Team/TeamController.php:10:    public function index() { return view('teams.index'); }
Team/TeamController.php:11:    public function create() { return view('teams.create'); }
Team/TeamController.php:12:    public function store(Request $request) { return redirect()->route('teams.index'); }
Team/TeamController.php:13:    public function show($id) { return view('teams.show', compact('id')); }
Team/TeamController.php:14:    public function edit($id) { return view('teams.edit', compact('id')); }
Team/TeamController.php:15:    public function update(Request $request, $id) { return redirect()->route('teams.index'); }
Team/TeamController.php:16:    public function destroy($id) { return redirect()->route('teams.index'); }
Team/TeamController.php:8:class TeamController extends Controller
TeamController.php:10:    public function dashboard(Request $request)
TeamController.php:8:class TeamController extends Controller
TranscriptController.php:11:    public function pdf(Request $request)
TranscriptController.php:9:class TranscriptController extends Controller
UserController.php:10:    public function index()
UserController.php:16:    public function edit($id)
UserController.php:22:    public function update(Request $request, $id)
UserController.php:29:    public function toggle($id)
UserController.php:8:class UserController extends Controller
VerifyController.php:7:class VerifyController extends Controller
VerifyController.php:9:    public function show(string $code)
Volunteer/AvatarController.php:10:class AvatarController extends Controller
Volunteer/AvatarController.php:12:    public function store(Request $request)
Volunteer/AvatarController.php:33:    public function destroy(Request $request)
Volunteer/CertificateController.php:11:    public function index()
Volunteer/CertificateController.php:18:    public function show(Certificate $certificate)
Volunteer/CertificateController.php:9:class CertificateController extends Controller
Volunteer/DashboardController.php:10:    public function index()
Volunteer/DashboardController.php:19:    public function hours()
Volunteer/DashboardController.php:26:    public function leaderboard()
Volunteer/DashboardController.php:8:class DashboardController extends Controller
Volunteer/MyCertificatesController.php:10:    public function index(Request $request)
Volunteer/MyCertificatesController.php:8:class MyCertificatesController extends Controller
Volunteer/OpportunityController.php:12:    public function index()
Volunteer/OpportunityController.php:19:    public function show($id)
Volunteer/OpportunityController.php:9:class OpportunityController extends Controller
Volunteer/ProfileController.php:12:class ProfileController extends Controller
Volunteer/ProfileController.php:14:    public function index(Request $request)
Volunteer/ProfileController.php:21:    public function update(Request $request)
Volunteer/ProfileIndexAction.php:12:class ProfileIndexAction extends Controller
Volunteer/ProfileIndexAction.php:14:    public function __construct()
Volunteer/ProfileIndexAction.php:19:    public function __invoke(Request $request)
Volunteer/ProfilePasswordController.php:11:    public function update(Request $request)
Volunteer/ProfilePasswordController.php:9:class ProfilePasswordController extends Controller
Volunteer/RegistrationController.php:10:class RegistrationController extends Controller
Volunteer/RegistrationController.php:12:    public function showRegistrationForm()
Volunteer/RegistrationController.php:17:    public function register(Request $request)
Volunteer/VolunteerDashboardController.php:6:class VolunteerDashboardController extends Controller
Volunteer/VolunteerDashboardController.php:8:  public function index(){
VolunteerController.php:12:class VolunteerController extends Controller
VolunteerController.php:14:    public function dashboard(Request $request)
VolunteerController.php:43:    public function leaderboard()
VolunteerController.php:56:    public function edit(Request $request)
VolunteerController.php:63:    public function update(Request $request)
VolunteerDashboardController.php:11:class VolunteerDashboardController extends Controller
VolunteerDashboardController.php:13:    private function hasCols(string $table, array $cols): bool
VolunteerDashboardController.php:20:    public function dashboard(Request $request)
VolunteerHourController.php:10:class VolunteerHourController extends Controller
VolunteerHourController.php:12:    public function index()
VolunteerHourController.php:22:    public function store(Request $request)
VolunteerHourController.php:41:    public function setStatus(Request $request, VolunteerHour $hour)
VolunteerHoursController.php:12:    public function index()
VolunteerHoursController.php:25:    public function store(Request $request)
VolunteerHoursController.php:9:class VolunteerHoursController extends Controller
VolunteerOpportunityController.php:18:    public function show($id)
VolunteerOpportunityController.php:7:class VolunteerOpportunityController extends Controller
VolunteerOpportunityController.php:9:    public function index()
VolunteerProfileController.php:10:    public function show()
VolunteerProfileController.php:16:    public function update(Request $request)
VolunteerProfileController.php:8:class VolunteerProfileController extends Controller
WishlistController.php:10:    public function __construct(){ $this->middleware(['auth','verified']); }
WishlistController.php:12:    public function toggle(Request $r, Opportunity $opportunity)
WishlistController.php:8:class WishlistController extends Controller

## Middleware files:
AdminActionLogger.php
AdminAuditMiddleware.php
AdminMiddleware.php
AdminMiddleware.php.save.1
AdminOnly.php
AdminPathEnforcer.php
Authenticate.php
Authenticate.php.bak.2025-08-16_143430
Authenticate.php.bak.2025-08-16_143742
Authenticate.php.bak.2025-08-16_144013
BusinessEmailOnly.php
CanonicalLink.php
EnsureOrg.php
EnsureRole.php
FormRateLimit.php
FormRateLimit.php.bak_restore
Honeypot.php
IsAdmin.php
IsAdmin.php.bak
IsAdmin.php.bak.
LocaleMiddleware.php
MicroCache.php
MicroCache.php.bak
MicroCache.php.bak.2025-08-20_064709
MicroCache.php.bak.2025-08-20_064918
MicroCache.php.bak.2025-08-20_065118
MicroCache.php.bak.2025-08-20_065608
MicroCache.php.bak_20250818_112443
MicroCache.php.bak_langskip_2025-08-18-130700
MicroCache.php.bak_locale_skip_2025-08-18-130938
MicroCache.php.bak_mc
ReadOnlyMode.php
RedirectIfAuthenticated.php
SecurityHeaders.php
SecurityHeaders.php.bak.2025-08-20_063812
SecurityHeaders.php.bak.2025-08-20_070013
SetLocale.php
SetLocale.php.bak.2025-08-18-072436
SetLocale.php.bak.2025-08-18-072807
SetLocale.php.bak.2025-08-18-073155
SetLocaleFromRequest.php
TrustProxies.php
VerifiedPathEnforcer.php
VerifyCsrfToken.php

## app/Http/Kernel.php (first 180):
     1	<?php
     2	
     3	namespace App\Http;
     4	use App\Http\Middleware\SetLocale;
     5	
     6	use Illuminate\Foundation\Http\Kernel as HttpKernel;
     7	
     8	use App\Http\Middleware\SecurityHeaders;
     9	use App\Http\Middleware\MicroCache;
    10	class Kernel extends HttpKernel
    11	{
    12	    /**
    13	     * The application's global HTTP middleware stack.
    14	     *
    15	     * These middleware are run during every request to your application.
    16	     *
    17	     * @var array
    18	     */
    19	    protected $middleware = [
    20	        \App\Http\Middleware\ReadOnlyMode::class,
    21	    SecurityHeaders::class,
    22	        \App\Http\Middleware\TrustProxies::class,
    23	        \Fruitcake\Cors\HandleCors::class,
    24	        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
    25	        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
    26	        \App\Http\Middleware\TrimStrings::class,
    27	        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
    28	    AppHttpMiddlewareMicroCache::class,
    29	];
    30	
    31	    /**
    32	     * The application's route middleware groups.
    33	     *
    34	     * @var array
    35	     */
    36	    protected $middlewareGroups = [
    37	        'web' => [
    38	        \App\Http\Middleware\VerifiedPathEnforcer::class,
    39	        \App\Http\Middleware\AdminPathEnforcer::class,
    40	            \App\Http\Middleware\SetLocale::class,
    41	            \App\Http\Middleware\EncryptCookies::class,
    42	            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
    43	            \Illuminate\Session\Middleware\StartSession::class,
    44	            // \Illuminate\Session\Middleware\AuthenticateSession::class,
    45	            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
    46	            \App\Http\Middleware\VerifyCsrfToken::class,    \App\Http\Middleware\FormRateLimit::class,
    47	
    48	            \Illuminate\Routing\Middleware\SubstituteBindings::class,
    49	        ],
    50	
    51	        'api' => [
    52	            'throttle:api',
    53	            \Illuminate\Routing\Middleware\SubstituteBindings::class,
    54	        ],
    55	    ];
    56	
    57	    /**
    58	     * The application's route middleware.
    59	     *
    60	     * These middleware may be assigned to groups or used individually.
    61	     *
    62	     * @var array
    63	     */
    64	    protected $routeMiddleware = [
    65	      'setlocale' => SetLocale::class,
    66	        'form.ratelimit' => App\Http\Middleware\FormRateLimit::class,
    67	        'business_email' => \App\Http\Middleware\BusinessEmailOnly::class,
    68	        'role' => \App\Http\Middleware\EnsureRole::class,
    69	        'permission' => \Spatie\Permission\Middleware\PermissionMiddleware::class,
    70	        'role_or_permission' => \App\Http\Middleware\EnsureRole::class,
    71	
    72	        'admin' => \App\Http\Middleware\AdminMiddleware::class,
    73	        'auth' => \App\Http\Middleware\Authenticate::class,
    74	        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
    75	        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
    76	        'can' => \Illuminate\Auth\Middleware\Authorize::class,
    77	        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
    78	        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
    79	        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,
    80	        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
    81	        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
    82	    ];
    83	
    84	    /**
    85	     * Middleware priority ensures non-global middleware execute in a specific order.
    86	     */
    87	    protected $middlewarePriority = [
    88	        \App\Http\Middleware\Honeypot::class,
    89	        \Illuminate\Foundation\Http\Middleware\VerifyCsrfToken::class,
    90	        \Illuminate\Cookie\Middleware\EncryptCookies::class,
    91	        \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
    92	        \Illuminate\Session\Middleware\StartSession::class,
    93	        \Illuminate\View\Middleware\ShareErrorsFromSession::class,
    94	        \Illuminate\Routing\Middleware\SubstituteBindings::class,
    95	    ];
    96	}

## Models:
Application.php
Attendance.php
Attendance.php.bak.1755243961
Attendance.php.bak.1755244286
Attendance.php.bak.1755244979
Attendance.php.bak.2025-08-15-0722
AuditLog.php
Badge.php
Category.php
Certificate.php
Certificate.php.bak_20250813_165012
Concerns
Download.php
Event.php
Event.php.bak.2025-08-19-073110
Event.php.bak_20250818144920
Event.php.bak_20250818151433
Event.php.fix.20250812-083221
Event.php.fixbak_20250818152230
Event.php.searchsort.20250812-082338
Event.php.searchsort.20250812-083326
Event.php.searchsortfix.20250812-082947
Event.php.traitfix.20250812-083425
Event.php.traitinside.20250812-083538
EventApplication.php
EventCheckin.php
EventEvaluation.php
EventInfoRequest.php
EventRegistration.php
Kyc.php
KycRequest.php
Location.php
Media.php
News.php
Opportunity.php
Opportunity.php.bak_20250818142338
Opportunity.php.bak_20250818143618
Opportunity.php.bak_20250818144920
Opportunity.php.bak_20250818151433
Opportunity.php.fix.20250812-083221
Opportunity.php.fixbak_20250818152230
Opportunity.php.searchsort.20250812-082338
Opportunity.php.searchsort.20250812-083326
Opportunity.php.searchsortfix.20250812-082947
Opportunity.php.traitfix.20250812-083425
Opportunity.php.traitinside.20250812-083538
Organization.php
Organization.php.fix.20250812-083221
Organization.php.searchsort.20250812-082338
Organization.php.searchsort.20250812-083326
Organization.php.searchsortfix.20250812-082947
Organization.php.traitfix.20250812-083425
Organization.php.traitinside.20250812-083538
OrganizationRegistration.php
Partner.php
QrScan.php
QrScan.php.bak_2025-08-17_171714
Registration.php
Role.php
Role.php.bak.2025-08-20_062646
Setting.php
SiteSetting.php
Story.php
Team.php
User.php
User.php.bak-2025-08-14_0918
User.php.bak.2025-08-15-0659
User.php.bak.2025-08-15-0700
User.php.bak.2025-08-15-0701
User.php.bak_20250819105030
User.php.searchsort.20250812-082338
UserDocument.php
Volunteer.php
VolunteerHour.php
VolunteerHour.php.bak_2025-08-17_171714
VolunteerOpportunity.php
VolunteerProfile.php

## Policies:
OpportunityPolicy.php
TeamPolicy.php
TeamPolicy.php.bak.2025-08-20_062815

## Notifications:
CertificateIssued.php
CertificateIssued.php.bak_20250819105532
EventRegistrationNotification.php
EventRegistrationNotification.php.bak.2025-08-19-074303
EventRegistrationNotification.php.bak.2025-08-19-075707
EventRegistrationNotification.php.bak.2025-08-19-075924
EventRegistrationNotification.php.bak.2025-08-19-080159
EventRegistrationNotification.php.bak.2025-08-19-080450
SimpleMessage.php

## Console/Commands:
BackfillVolunteerHours.php
BuildSitemaps.php
CertComputeChecksums.php
CertNormalizePaths.php
GenerateSitemap.php
GenerateSitemap.php.bak.2025-08-20_091128
HoursAudit.php
HoursAudit.php.bak
HoursRecalc.php
HoursReconcile.php
HoursReconcile.php.bak
HoursReconcile.php.bak2
HoursShow.php
OpsAlive.php
OrgCheck.php
QueueHealth.php
ReconcileVolunteerHours.php
SwaedFinalizeHours.php

## Views (*.blade.php, depth<=3):
_from_migrations_2025-08-16-151345/app.blade.php
_from_migrations_2025-08-16-151345/index.blade.php
_from_migrations_2025-08-16-151345/payment.blade.php
_from_migrations_2025-08-16-151345/success.blade.php
_home_OLD.blade.php
_legacy_layouts/_welcome_OLD.blade.php
_legacy_layouts/master.blade.php
_legacy_layouts/public.blade.php
about.blade.php
admin.dashboard.blade.php
admin/_diag_dashboard.blade.php
admin/analytics/index.blade.php
admin/applications/index.blade.php
admin/argon/_footer.blade.php
admin/argon/_navbar.blade.php
admin/argon/_sidenav.blade.php
admin/attendance/index.blade.php
admin/attendance/qr.blade.php
admin/audit/index.blade.php
admin/auth/login.blade.php
admin/categories/create.blade.php
admin/categories/edit.blade.php
admin/categories/index.blade.php
admin/certificates/bulk_issue.blade.php
admin/certificates/bulk_issue_result.blade.php
admin/certificates/create.blade.php
admin/certificates/index.blade.php
admin/certificates/issue.blade.php
admin/certificates/pdf.blade.php
admin/certificates/resend.blade.php
admin/certificates/show.blade.php
admin/dashboard.blade.php
admin/dashboard_compat_fallback.blade.php
admin/dashboard_safe.blade.php
admin/events/create.blade.php
admin/events/edit.blade.php
admin/events/index.blade.php
admin/hours/show.blade.php
admin/index.blade.php
admin/kyc/index.blade.php
admin/kyc/show.blade.php
admin/layout.blade.php
admin/learning/index.blade.php
admin/media/index.blade.php
admin/news/create.blade.php
admin/opportunities/_form.blade.php
admin/opportunities/attendance.blade.php
admin/opportunities/create.blade.php
admin/opportunities/edit.blade.php
admin/opportunities/finalize_form.blade.php
admin/opportunities/index.blade.php
admin/opportunities/qr.blade.php
admin/opportunities/scan.blade.php
admin/organizations/create.blade.php
admin/organizations/edit.blade.php
admin/organizations/index.blade.php
admin/organizations/pending.blade.php
admin/overview.blade.php
admin/partials/admin_guard.blade.php
admin/partials/flash.blade.php
admin/partials/index_toolbar.blade.php
admin/partials/nav.blade.php
admin/partials/table_search.blade.php
admin/partners/create.blade.php
admin/partners/edit.blade.php
admin/partners/index.blade.php
admin/placeholder.blade.php
admin/placeholders.blade.php
admin/profile/edit.blade.php
admin/reports/index.blade.php
admin/roles/index.blade.php
admin/settings.blade.php
admin/settings/edit.blade.php
admin/settings/index.blade.php
admin/task_monitor/index.blade.php
admin/translations/index.blade.php
admin/users/edit.blade.php
admin/users/index.blade.php
applications/my.blade.php
argon_front/_flash.blade.php
argon_front/_footer.blade.php
argon_front/_navbar.blade.php
attendance/ok.blade.php
auth.forgot-password.blade.php
auth.login.blade.php
auth.register.blade.php
auth/admin_login.blade.php
auth/confirm-password.blade.php
auth/forgot-password.blade.php
auth/forgot.blade.php
auth/login-fallback.blade.php
auth/login.blade.php
auth/oauth-coming-soon.blade.php
auth/organization_login.blade.php
auth/organization_register.blade.php
auth/partials/social-buttons.blade.php
auth/partials/vol-social.blade.php
auth/passwords/email.blade.php
auth/register-fallback.blade.php
auth/register.blade.php
auth/reset.blade.php
auth/signin-options.blade.php
auth/verify-email.blade.php
auth/verify.blade.php
auth/volunteer_login.blade.php
categories/index.blade.php
categories/show.blade.php
certificates/index.blade.php
certificates/my.blade.php
certificates/pdf.blade.php
certificates/show.blade.php
certificates/template.blade.php
certificates/transcript.blade.php
certificates/verify.blade.php
components/auth-session-status.blade.php
components/avatar-controls.blade.php
components/checkbox.blade.php
components/confirmation-modal.blade.php
components/danger-button.blade.php
components/dialog-modal.blade.php
components/honeypot.blade.php
components/if-admin.blade.php
components/input-error.blade.php
components/input-label.blade.php
components/lang-switch.blade.php
components/modal.blade.php
components/org/attendance_button.blade.php
components/page-header.blade.php
components/primary-button.blade.php
components/secondary-button.blade.php
components/select.blade.php
components/seo.blade.php
components/text-input.blade.php
components/textarea.blade.php
components/top-auth-links.blade.php
contact.blade.php
dashboard/admin.blade.php
dashboard/index.blade.php
dashboard/organization.blade.php
dashboard/team.blade.php
dashboard/volunteer.blade.php
dashboards/org.blade.php
emails/applicant_decision.blade.php
emails/application_submitted.blade.php
emails/certificate.blade.php
emails/certificate_issued.blade.php
emails/general_notification.blade.php
emails/volunteer/application.blade.php
errors/403.blade.php
errors/404.blade.php
errors/429.blade.php
errors/500.blade.php
errors/503.blade.php
errors/inline-profile-fallback.blade.php
errors/readonly.blade.php
events/calendar.blade.php
events/index.blade.php
events/show.blade.php
fallback/my-hours.blade.php
faq.blade.php
home.blade.php
kyc/upload.blade.php
layouts/admin.blade.php
layouts/app.blade.php
layouts/email.blade.php
layouts/partials/footer.blade.php
layouts/partials/nav_links.blade.php
layouts/partials/security_meta.blade.php
leaderboard.blade.php
learning_requests/create.blade.php
me/applications.blade.php
me/certificates.blade.php
my/applications.blade.php
my/certificates.blade.php
my/dashboard.blade.php
my/hours.blade.php
my/profile.blade.php
news/index.blade.php
notifications/index.blade.php
opportunities/apply_redirect.blade.php
opportunities/index.blade.php
opportunities/index_public.blade.php
opportunities/partials/similar.blade.php
opportunities/public/index.blade.php
opportunities/public/show.blade.php
opportunities/public_show.blade.php
opportunities/qr.blade.php
opportunities/show.blade.php
org/_sidenav.blade.php
org/applicants/_bulk_actions.blade.php
org/applicants/_filters.blade.php
org/applicants/_row_actions_init.blade.php
org/argon/_sidenav.blade.php
org/attendance/index.blade.php
org/attendance/qr.blade.php
org/attendance/scan.blade.php
org/attendance/settings.blade.php
org/auth/_logo_field.blade.php
org/auth/login.blade.php
org/auth/register.blade.php
org/certificates/_pdf.blade.php
org/certificates/index.blade.php
org/dashboard.blade.php
org/dashboard/_kpis.blade.php
org/dashboard/index.blade.php
org/events/_volunteers_table.blade.php
org/events/index.blade.php
org/events/volunteers.blade.php
org/kyc/edit.blade.php
org/layout.blade.php
org/opportunities/_certificates_link.blade.php
org/opportunities/_row_cert_init.blade.php
org/opportunities/attendance.blade.php
org/opportunities/create.blade.php
org/opportunities/edit.blade.php
org/opportunities/index.blade.php
org/opportunities/shortlist.blade.php
org/opps/_form.blade.php
org/opps/create.blade.php
org/opps/edit.blade.php
org/opps/index.blade.php
org/partials/branding_styles.blade.php
org/partials/certs_quick.blade.php
org/partials/dashboard_v1.blade.php
org/partials/event_actions.blade.php
org/partials/hours_chart.blade.php
org/partials/menu.blade.php
org/partials/recent_activity.blade.php
org/partials/today_checkins.blade.php
org/partials/top_volunteers.blade.php
org/partials/trends.blade.php
org/partials/upcoming_7d.blade.php
org/profile.blade.php
org/register.blade.php
org/reports/index.blade.php
org/review.blade.php
org/settings/_branding_form.blade.php
org/settings/_profile_form.blade.php
org/settings/edit.blade.php
org/setup.blade.php
org/shortlist/_counters.blade.php
org/shortlist/_slotcap_form.blade.php
org/shortlist/index.blade.php
org/team/index.blade.php
org/under_review.blade.php
organization/dashboard.blade.php
organization/login.blade.php
organization/register.blade.php
organizations/index.blade.php
organizations/public/index.blade.php
organizations/public/show.blade.php
organizations/register.blade.php
pages/about.blade.php
pages/app.blade.php
pages/categories.blade.php
pages/contact.blade.php
pages/faq.blade.php
pages/partners.blade.php
pages/privacy.blade.php
pages/regions/index.blade.php
pages/regions/show.blade.php
pages/terms.blade.php
partials/_events_fallback.blade.php
partials/_opps_fallback.blade.php
partials/alerts.blade.php
partials/apply_button.blade.php
partials/auth_dropdown.blade.php
partials/flash.blade.php
partials/footer.blade.php
partials/header.blade.php
partials/hero-home.blade.php
partials/logout.blade.php
partials/meta.blade.php
partials/nav.blade.php
partials/navbar.blade.php
partials/opps_filter_bar.blade.php
partials/page_header.blade.php
partials/rtl_overrides.blade.php
partials/seo.blade.php
partials/social.blade.php
partials/sort_bar.blade.php
partials/verify_banner.blade.php
partners/apply.blade.php
partners/index.blade.php
payments/cancel.blade.php
payments/checkout.blade.php
payments/success.blade.php
profile/edit.blade.php
profile/partials/delete-user-form.blade.php
profile/partials/update-password-form.blade.php
profile/partials/update-profile-information-form.blade.php
profile/show.blade.php
public/about.blade.php
public/categories.blade.php
public/category_show.blade.php
public/certificates/verify.blade.php
public/contact.blade.php
public/events/index.blade.php
public/events/show.blade.php
public/faq.blade.php
public/gallery.blade.php
public/home.blade.php
public/layout.blade.php
public/opportunities.blade.php
public/opportunities/index.blade.php
public/opportunities/show.blade.php
public/organizations/index.blade.php
public/partners.blade.php
public/scan.blade.php
public/stories.blade.php
public/story_show.blade.php
public/verify.blade.php
qr/scan.blade.php
scan/confirm.blade.php
scan/result.blade.php
sitemap.blade.php
stories/index.blade.php
stories/show.blade.php
teams/create.blade.php
teams/index.blade.php
vendor/pagination/argon.blade.php
verify/index.blade.php
verify/result.blade.php
verify/show.blade.php
volunteer/certificates.blade.php
volunteer/certificates/index.blade.php
volunteer/dashboard.blade.php
volunteer/hours.blade.php
volunteer/leaderboard.blade.php
volunteer/my_certificates.blade.php
volunteer/partials/avatar_form.blade.php
volunteer/partials/latest_cert.blade.php
volunteer/partials/sidebar.blade.php
volunteer/profile.blade.php
volunteer/profile_edit.blade.php
volunteer/settings/_tabs.blade.php
welcome.blade.php

## Views w/ auth strings:
resources/views/auth.forgot-password.blade.php:6:  <p>This is a placeholder page for auth.forgot-password.</p>
resources/views/volunteer/partials/sidebar.blade.php:15:      <form method="POST" action="{{ route('logout') }}" class="list-group-item p-0 border-0">
resources/views/volunteer/partials/sidebar.blade.php:40:      <form method="POST" action="{{ route('logout') }}" class="list-group-item p-0 border-0">
resources/views/volunteer/partials/latest_cert.blade.php:25:      <a class="btn btn-sm btn-outline-secondary" href="{{ url('verify/' . ($latestCert->code ?? '')) }}" target="_blank" rel="noopener">
resources/views/volunteer/settings/_tabs.blade.php:109:            <form class="d-inline" method="POST" action="{{ route('logout') }}">
resources/views/volunteer/certificates/index.blade.php:51:                                        <a class="btn btn-sm btn-outline-secondary" href="{{ route('verify.show', ['code' => $code]) }}">Verify</a>
resources/views/volunteer/certificates.blade.php:30:                <a class="btn btn-sm btn-outline-secondary" href="{{ url('/verify/'.$cert->code) }}" target="_blank">{{ __('Verify') }}</a>
resources/views/volunteer/profile.blade.php:131:                      @if (Route::has('certificates.verify') && isset($c->code))
resources/views/volunteer/profile.blade.php:132:                        <a class="btn btn-sm btn-outline-secondary" target="_blank" href="{{ route('certificates.verify',$c->code) }}">{{ __('Verify') }}</a>
resources/views/volunteer/my_certificates.blade.php:31:                            <a class="btn btn-sm btn-outline-success" href="{{ url('/verify/' . urlencode($c->code ?? $c->verification_code)) }}">{{ __('Verify') }} / {{ __('تحقق') }}</a>
resources/views/verify/index.blade.php:6:  <form method="GET" action="{{ url('/verify') }}" class="row g-2 mb-3">
resources/views/verify/index.blade.php:11:    <script>location.href = "{{ url('/verify/'.urlencode(request('code'))) }}";</script>
resources/views/partials/nav.blade.php:31:        <li class="nav-item"><a class="nav-link" href="{{ url('/verify/SAMPLE') }}">{{ __('Verify') }}</a></li>
resources/views/partials/nav.blade.php:38:          <form class="ms-2" method="POST" action="{{ route('logout') }}">
resources/views/partials/footer.blade.php:16:          <li><a class="link-dark text-decoration-none" href="{{ url('/verify/EXAMPLE') }}">{{ __('Verify a certificate') }}</a></li>
resources/views/partials/navbar.blade.php:39:          @if (Route::has('login'))
resources/views/partials/navbar.blade.php:43:          {{-- Prefer user register if available, otherwise show organization register --}}
resources/views/partials/navbar.blade.php:44:          @if (Route::has('register'))
resources/views/partials/navbar.blade.php:46:              <a class="btn btn-teal px-3" href="{{ route('register') }}">
resources/views/partials/navbar.blade.php:50:          @elseif (Route::has('organizations.register'))
resources/views/partials/navbar.blade.php:52:              <a class="btn btn-teal px-3" href="{{ route('organizations.register') }}">
resources/views/partials/navbar.blade.php:69:                @if (Route::has('logout'))
resources/views/partials/navbar.blade.php:70:                  <form method="POST" action="{{ route('logout') }}">@csrf
resources/views/partials/navbar.blade.php:74:                  <a class="dropdown-item" href="{{ url('/logout') }}">{{ __('Logout') }}</a>
resources/views/partials/navbar.blade.php:89:    {{ __('Please verify your email to access all features.') }}
resources/views/partials/auth_dropdown.blade.php:8:        <li><a class="dropdown-item" href="{{ route('login') }}">{{ __('Volunteer Login') }}</a></li>
resources/views/partials/auth_dropdown.blade.php:9:        <li><a class="dropdown-item" href="{{ url('/org/login') }}">{{ __('Organization Login') }}</a></li>
resources/views/partials/auth_dropdown.blade.php:10:        <li><a class="dropdown-item" href="{{ url('/org/register') }}">{{ __('Organization Register') }}</a></li>
resources/views/partials/apply_button.blade.php:19:  <a href="{{ route('login') }}" class="btn btn-primary w-100">
resources/views/partials/header.blade.php:27:          <a class="btn btn-outline-danger btn-sm" href="{{ url('/logout') }}">Logout</a>
resources/views/partials/header.blade.php:29:          <a class="btn btn-outline-primary btn-sm" href="{{ url('/login') }}">Login</a>
resources/views/partials/header.blade.php:30:          <a class="btn btn-primary btn-sm" href="{{ url('/register') }}">Register</a>
resources/views/partials/logout.blade.php:2:<form method="POST" action="{{ route('logout') }}">
resources/views/partials/logout.blade.php:4:    <button type="submit" class="btn-logout px-4 py-2 bg-red-600 text-white rounded hover:bg-red-800">
resources/views/certificates/index.blade.php:33:              <a class="btn btn-sm btn-outline-secondary" href="{{ url('verify/'.$c->code) }}" target="_blank" rel="noopener">{{ __('Verify') }}</a>
resources/views/certificates/pdf.blade.php:33:      {!! QrCode::size(90)->generate(url('/verify/'.urlencode($cert->code ?? $cert->verification_code))) !!}
resources/views/certificates/pdf.blade.php:61:    {{ __('Verify at') }}: {{ url('/verify/'.urlencode($cert->code ?? $cert->verification_code)) }}
resources/views/certificates/template.blade.php:25:        <p>التحقق: {{ $verifyUrl }}</p>
resources/views/certificates/show.blade.php:28:  <img alt="QR" src="https://api.qrserver.com/v1/create-qr-code/?size=180x180&data={{ urlencode(route('certificates.verify',$cert->code)) }}">
resources/views/certificates/show.blade.php:31:    <a class="btn btn-outline-secondary" href="{{ route('certificates.verify',$cert->code) }}" target="_blank">{{ __('Verify Online') }}</a>
resources/views/opportunities/qr.blade.php:34:    {{ __('Volunteers scan the QR and login. Times are recorded and hours are auto-calculated on checkout.') }}
resources/views/opportunities/public_show.blade.php:33:          <a href="{{ url('/volunteer/login') }}" class="btn btn-outline-primary btn-sm">{{ __('Login to apply') }}</a>
resources/views/organization/register.blade.php:5:  <form method="POST" action="{{ route('organization.register.store') }}">
resources/views/organization/register.blade.php:25:      <input type="password" name="password" class="form-control" required>
resources/views/organization/register.blade.php:29:      <input type="password" name="password_confirmation" class="form-control" required>
resources/views/organization/login.blade.php:10:          <form method="POST" action="{{ route('org.login.submit') }}">
resources/views/organization/login.blade.php:19:              <input type="password" name="password" class="form-control @error('password') is-invalid @enderror" required>
resources/views/organization/login.blade.php:20:              @error('password')<div class="invalid-feedback">{{ $message }}</div>@enderror
resources/views/organization/login.blade.php:27:              <a href="{{ route('password.request') }}" class="text-sm">{{ __('Forgot password?') }}</a>
resources/views/organization/login.blade.php:30:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/scan/confirm.blade.php:9:      <p class="text-muted">{{ __('Please allow location to verify you are at the event, then we will submit automatically.') }}</p>
resources/views/admin/users/edit.blade.php:19:        <input type="password" name="password" class="form-control" placeholder="Leave blank to keep current">
resources/views/admin/certificates/index.blade.php:49:          <td><a href="{{ url('/verify/'.$c->code) }}" target="_blank">{{ $c->code }}</a></td>
resources/views/admin/certificates/pdf.blade.php:26:    <div class="meta">{{ __('Verify at') }}: {{ $verifyUrl }}</div>
resources/views/admin/certificates/pdf.blade.php:28:      {!! QrCode::size(120)->generate($verifyUrl) !!}
resources/views/admin/auth/login.blade.php:13:    input[type=email],input[type=password]{width:100%;padding:12px 14px;border:1px solid #d7dbe3;border-radius:10px;font-size:15px;outline:none}
resources/views/admin/auth/login.blade.php:33:    <form method="POST" action="{{ route('admin.login.post') }}" autocomplete="on">
resources/views/admin/auth/login.blade.php:38:      <label for="password">Password</label>
resources/views/admin/auth/login.blade.php:39:      <input id="password" name="password" type="password" required/>
resources/views/admin/auth/login.blade.php:45:        <a href="{{ url('/password/reset') }}" style="font-size:13px;text-decoration:none;color:#4c6fff">Forgot?</a>
resources/views/admin/attendance/index.blade.php:37:            $verifyUrl   = $cert ? url('/verify/'.$cert->code) : null;
resources/views/admin/attendance/index.blade.php:39:              "السلام عليكم {$a->user?->name}،\nشهادتك التطوعية جاهزة ✅\nتنزيل: {$downloadUrl}\nالتحقق: {$verifyUrl}\nشكراً لمساهمتك!"
resources/views/admin/argon/_sidenav.blade.php:83:        <a class="nav-link" href="{{ route('admin.logout') }}"
resources/views/admin/argon/_sidenav.blade.php:84:           onclick="event.preventDefault(); document.getElementById('logout-form').submit();">
resources/views/admin/argon/_sidenav.blade.php:90:        <form id="logout-form" action="{{ route('admin.logout') }}" method="POST" class="d-none">@csrf</form>
resources/views/admin/argon/_sidenav.blade.php:96:{{-- Safe admin logout (POST) --}}
resources/views/admin/argon/_sidenav.blade.php:97:<form method="POST" action="{{ route('admin.logout') }}" class="px-3 mt-3">
resources/views/admin/profile/edit.blade.php:32:                    <input name="password" type="password" class="form-control" autocomplete="new-password">
resources/views/admin/profile/edit.blade.php:36:                    <input name="password_confirmation" type="password" class="form-control" autocomplete="new-password">
resources/views/auth/organization_register.blade.php:13:        <form method="POST" action="{{ route('register.organization.store') }}" class="mt-3">
resources/views/auth/organization_register.blade.php:30:              <input type="password" name="password" class="form-control" required>
resources/views/auth/organization_register.blade.php:80:            <a href="{{ route('login.organization') }}">{{ __('Back to login') }}</a>
resources/views/auth/register-fallback.blade.php:5:<form method="POST" action="{{ url('/register') }}">
resources/views/auth/register-fallback.blade.php:9:  <label>Password <input type="password" name="password" required></label>
resources/views/auth/register-fallback.blade.php:10:  <label>Confirm <input type="password" name="password_confirmation" required></label>
resources/views/auth/oauth-coming-soon.blade.php:9:          <p class="mb-4">We’re finalizing {{ $provider ?? 'this' }} sign-in. Please use email and password for now.</p>
resources/views/auth/oauth-coming-soon.blade.php:10:          <a href="{{ route('login') }}" class="btn btn-primary">Back to Sign in</a>
resources/views/auth/signin-options.blade.php:15:    <a class="btn btn-outline-primary w-100 mb-3" href="{{ route('social.redirect', 'google') }}">Continue with Google</a>
resources/views/auth/signin-options.blade.php:29:    <a class="btn btn-link" href="{{ route('login.email') }}">I already have an account</a>
resources/views/auth/signin-options.blade.php:30:    <a class="btn btn-success" href="{{ route('register') }}">Create account with email</a>
resources/views/auth/organization_login.blade.php:5:  <form method="POST" action="/org/login">
resources/views/auth/organization_login.blade.php:13:      <input class="form-control" type="password" name="password" required>
resources/views/auth/organization_login.blade.php:16:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/auth/admin_login.blade.php:14:          <form method="POST" action="{{ url('/login') }}">
resources/views/auth/admin_login.blade.php:22:              <input type="password" name="password" class="form-control" required autocomplete="current-password">
resources/views/auth/admin_login.blade.php:27:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/auth/partials/social-buttons.blade.php:1:{{-- Social & UAEPass buttons (always visible; disable if route missing) --}}
resources/views/auth/partials/social-buttons.blade.php:4:    $hasGoogle  = Route::has('oauth.google.redirect') || Route::has('login.google') || Route::has('social.google');
resources/views/auth/partials/social-buttons.blade.php:5:    $hasUAEPass = Route::has('uaepass.redirect')      || Route::has('login.uaepass') || Route::has('social.uaepass');
resources/views/auth/partials/social-buttons.blade.php:6:    $googleRoute  = Route::has('oauth.google.redirect') ? 'oauth.google.redirect' : (Route::has('login.google') ? 'login.google' : (Route::has('social.google') ? 'social.google' : null));
resources/views/auth/partials/social-buttons.blade.php:7:    $uaepassRoute = Route::has('uaepass.redirect')      ? 'uaepass.redirect'      : (Route::has('login.uaepass') ? 'login.uaepass' : (Route::has('social.uaepass') ? 'social.uaepass' : null));
resources/views/auth/partials/social-buttons.blade.php:15:            Continue with UAEPass
resources/views/auth/partials/social-buttons.blade.php:22:                title="UAEPass coming soon">
resources/views/auth/partials/social-buttons.blade.php:23:            Continue with UAEPass
resources/views/auth/partials/social-buttons.blade.php:31:            Continue with Google
resources/views/auth/partials/social-buttons.blade.php:38:                title="Google login coming soon">
resources/views/auth/partials/social-buttons.blade.php:39:            Continue with Google
resources/views/auth/partials/vol-social.blade.php:3:  <a href="{{ url('/auth/google/redirect') }}" class="btn w-100 mb-2 btn-outline-secondary">{{ __('Login with Google') }}</a>
resources/views/auth/passwords/email.blade.php:6:  <form method="POST" action="{{ route('password.email') }}">
resources/views/auth/register.blade.php:18:  <form method="POST" action="{{ url('/register') }}">
resources/views/auth/register.blade.php:34:      <input class="form-control" type="password" name="password" required>
resources/views/auth/register.blade.php:39:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/auth/register.blade.php:44:    <a href="{{ route('login', ['type'=>$type]) }}">{{ __('Already have an account? Sign in') }}</a>
resources/views/auth/volunteer_login.blade.php:27:          <form method="POST" action="{{ url('/login') }}">
resources/views/auth/volunteer_login.blade.php:35:              <input type="password" name="password" class="form-control" required autocomplete="current-password">
resources/views/auth/volunteer_login.blade.php:42:              <a href="{{ url('/forgot-password') }}" class="small">@lang('Forgot password?')</a>
resources/views/auth/volunteer_login.blade.php:46:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">>>>Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/auth/login-fallback.blade.php:5:<form method="POST" action="{{ url('/login') }}">
resources/views/auth/login-fallback.blade.php:8:  <label>Password <input type="password" name="password" required></label>
resources/views/auth/login-fallback.blade.php:11:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/auth/reset.blade.php:5:<form method="POST" action="{{ route('password.update') }}" class="card p-4 shadow-sm" style="max-width:520px;margin:0 auto;">
resources/views/auth/reset.blade.php:10:  <div class="mb-3"><label class="form-label">{{ __('New password') }}</label>
resources/views/auth/reset.blade.php:11:    <input type="password" name="password" class="form-control" required></div>
resources/views/auth/reset.blade.php:12:  <div class="mb-3"><label class="form-label">{{ __('Confirm password') }}</label>
resources/views/auth/reset.blade.php:13:    <input type="password" name="password_confirmation" class="form-control" required></div>
resources/views/auth/reset.blade.php:14:  <button class="btn btn-teal w-100">{{ __('Update password') }}</button>
resources/views/auth/forgot.blade.php:5:<form method="POST" action="{{ route('password.email') }}" class="card p-4 shadow-sm" style="max-width:520px;margin:0 auto;">
resources/views/auth/forgot-password.blade.php:13:    <form method="POST" action="{{ route('password.email') }}">
resources/views/auth/forgot-password.blade.php:27:        <a href="{{ route('login') }}" class="text-blue-600 hover:underline">Back to Login</a>
resources/views/auth/login.blade.php:18:  <form method="POST" action="{{ url('/login') }}">
resources/views/auth/login.blade.php:29:      <input class="form-control" type="password" name="password" required>
resources/views/auth/login.blade.php:42:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">>>>Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/auth/confirm-password.blade.php:4:        {{ __('This is a secure area of the application. Please confirm your password before continuing.') }}
resources/views/auth/confirm-password.blade.php:7:    <form method="POST" action="{{ route('password.confirm') }}">
resources/views/auth/confirm-password.blade.php:12:            <x-input-label for="password" :value="__('Password')" />
resources/views/auth/confirm-password.blade.php:14:            <x-text-input id="password" class="block mt-1 w-full"
resources/views/auth/confirm-password.blade.php:15:                            type="password"
resources/views/auth/confirm-password.blade.php:16:                            name="password"
resources/views/auth/confirm-password.blade.php:17:                            required autocomplete="current-password" />
resources/views/auth/confirm-password.blade.php:19:            <x-input-error :messages="$errors->get('password')" class="mt-2" />
resources/views/public/layout.blade.php:20:      <a class="btn" href="{{ route('login') }}">{{ __('app.auth.signin',[],app()->getLocale()) }}</a>
resources/views/public/layout.blade.php:21:      <a class="btn btn-primary" href="{{ route('register') }}">{{ __('app.auth.register',[],app()->getLocale()) }}</a>
resources/views/public/opportunities/show.blade.php:27:      <a class="btn btn-primary" href="{{ route('login') }}">Apply / Sign in</a>
resources/views/public/faq.blade.php:8:        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne">How do I register?</button>
resources/views/public/faq.blade.php:12:          Use the “Register” link above to sign up as a volunteer, organisation or team. You will receive a confirmation email once registered.
resources/views/_legacy_layouts/public.blade.php:29:            <li class="nav-item ms-lg-2"><a class="btn btn-outline-danger btn-sm" href="{{ route('logout') }}">Logout</a></li>
resources/views/_legacy_layouts/public.blade.php:31:            <li class="nav-item ms-lg-2"><a class="btn btn-primary btn-sm" href="{{ route('login') }}">Login</a></li>
resources/views/pages/faq.blade.php:41:          {{ __('After completion and approval, we generate a PDF with a QR code. Anyone can verify it on the /verify page.') }}
resources/views/partners/index.blade.php:10:    <a class="btn btn-teal" href="{{ route('organizations.register') }}">
resources/views/me/certificates.blade.php:29:                <a class="btn btn-sm btn-light" href="{{ route('certificates.verify', $c->code) }}">
resources/views/components/top-auth-links.blade.php:1:@if (Route::has('login'))
resources/views/components/top-auth-links.blade.php:2:  <a href="{{ route('login') }}" class="text-blue-700 font-bold mr-4">Login</a>
resources/views/components/top-auth-links.blade.php:3:@elseif (Route::has('login.volunteer'))
resources/views/components/top-auth-links.blade.php:4:  <a href="{{ route('login.volunteer') }}" class="text-blue-700 font-bold mr-4">Login</a>
resources/views/components/top-auth-links.blade.php:5:@elseif (Route::has('org.login'))
resources/views/components/top-auth-links.blade.php:6:  <a href="{{ route('org.login') }}" class="text-blue-700 font-bold mr-4">Login</a>
resources/views/components/top-auth-links.blade.php:8:  <a href="{{ url('/signin') }}" class="text-blue-700 font-bold mr-4">Login</a>
resources/views/components/top-auth-links.blade.php:11:@if (Route::has('register'))
resources/views/components/top-auth-links.blade.php:12:  <a href="{{ route('register') }}" class="bg-blue-700 text-white px-4 py-2 rounded-lg font-bold">Sign Up</a>
resources/views/components/top-auth-links.blade.php:13:@elseif (Route::has('org.register'))
resources/views/components/top-auth-links.blade.php:14:  <a href="{{ route('org.register') }}" class="bg-blue-700 text-white px-4 py-2 rounded-lg font-bold">Sign Up</a>
resources/views/org/certificates/_pdf.blade.php:23:        <div>{{ __('Verify') }}: {{ $verifyUrl }}</div>
resources/views/org/register.blade.php:8:  <form action="{{ route('org.register.submit') }}" method="POST" enctype="multipart/form-data" class="mx-auto" style="max-width:900px">
resources/views/org/register.blade.php:37:      <input type="password" name="password" class="form-control" required>
resources/views/org/register.blade.php:42:      <input type="password" name="password_confirmation" class="form-control" required>
resources/views/org/auth/register.blade.php:25:          <form method="POST" enctype="multipart/form-data" action="{{ route('org.register.submit') }}" enctype="multipart/form-data" enctype="multipart/form-data" class="row g-3">
resources/views/org/auth/register.blade.php:36:              <input type="password" name="password" class="form-control" required>
resources/views/org/auth/register.blade.php:40:              <input type="password" name="password_confirmation" class="form-control" required>
resources/views/org/auth/register.blade.php:140:              <a href="{{ route('org.login') }}" class="btn btn-link">{{ __('Already registered? Sign in') }}</a>
resources/views/org/auth/register.blade.php:149:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/org/auth/register.blade.php:157:{{-- marker: register.blade.php 04:25:07 --}}
resources/views/org/auth/login.blade.php:24:          <form method="POST" action="{{ url('/org/login') }}">
resources/views/org/auth/login.blade.php:32:              <input type="password" name="password" class="form-control" required autocomplete="current-password">
resources/views/org/auth/login.blade.php:39:              <a href="{{ url('/forgot-password') }}" class="small">@lang('Forgot password?')</a>
resources/views/org/auth/login.blade.php:42:<div class="text-center text-sm mt-2">@if(\Illuminate\Support\Facades\Route::has('password.request'))<a href="{{ route('password.request') }}">Forgot your password?</a>@else<a href="/forgot-password">Forgot your password?</a>@endif</div>
resources/views/org/review.blade.php:12:            {{ __('Thank you for registering your organization on SawaedUAE. Our team is reviewing the information and license you provided.') }}
resources/views/org/review.blade.php:16:            <li>{{ __('You must verify your email address via the verification link sent to your inbox.') }}</li>
resources/views/org/under_review.blade.php:6:    <h1 class="mb-4 text-success">{{ __('Thank you for registering!') }}</h1>
resources/views/org/argon/_sidenav.blade.php:46:        <form method="POST" action="{{ route('logout') }}" class="m-0 p-0">
resources/views/auth.login.blade.php:6:  <p>This is a placeholder page for auth.login.</p>
resources/views/auth.register.blade.php:6:  <p>This is a placeholder page for auth.register.</p>
resources/views/organizations/register.blade.php:8:<form class="card" method="POST" enctype="multipart/form-data" action="{{ route('organizations.register.store') }}">
resources/views/my/certificates.blade.php:18:          <a class="btn btn-sm btn-outline-primary" href="{{ url('/verify/'.$c->code) }}" target="_blank">{{ __('Verify') }}</a>
resources/views/layouts/partials/footer.blade.php:12:        <a class="btn btn-sm" href="#" title="Google Play (coming soon)"><i class="bi bi-google-play me-1"></i> Google Play</a>
resources/views/layouts/partials/nav_links.blade.php:14:        <form method="POST" action="{{ route('logout') }}" class="d-inline">@csrf
resources/views/_from_migrations_2025-08-16-151345/app.blade.php:22:            <a href="{{ route('login') }}" class="text-blue-700 font-bold mr-4">Login</a>
resources/views/_from_migrations_2025-08-16-151345/app.blade.php:23:            <a href="{{ route('register') }}" class="bg-blue-700 text-white px-4 py-2 rounded-lg font-bold">Sign Up</a>
resources/views/argon_front/_footer.blade.php:7:      <li class="nav-item"><a class="nav-link text-muted px-2" href="{{ url('/verify') }}">@lang('Verify')</a></li>
resources/views/argon_front/_navbar.blade.php:17:          <li class="nav-item"><a class="nav-link {{ $is('verify*') }}" href="{{ url('/verify') }}">@lang('Verify')</a></li>
resources/views/argon_front/_navbar.blade.php:25:              <a class="nav-link text-danger" href="{{ route('logout') }}"
resources/views/argon_front/_navbar.blade.php:26:                 onclick="event.preventDefault(); document.getElementById('logout-form-public').submit();">
resources/views/argon_front/_navbar.blade.php:29:              <form id="logout-form-public" action="{{ route('logout') }}" method="POST" class="d-none">@csrf</form>
resources/views/argon_front/_navbar.blade.php:33:              <a class="nav-link dropdown-toggle {{ $is(['volunteer/login','org/login','org/register']) }}"
resources/views/argon_front/_navbar.blade.php:34:                 href="#" id="loginDropdown" role="button" data-bs-toggle="dropdown" data-bs-display="static" aria-expanded="false">
resources/views/argon_front/_navbar.blade.php:38:              <ul class="dropdown-menu dropdown-menu-center shadow-sm" aria-labelledby="loginDropdown">
resources/views/argon_front/_navbar.blade.php:39:                <li><a class="dropdown-item" href="{{ url('/volunteer/login') }}">@lang('Volunteer Login')</a></li>
resources/views/argon_front/_navbar.blade.php:40:                <li><a class="dropdown-item" href="{{ url('/org/login') }}">@lang('Organization Login')</a></li>
resources/views/argon_front/_navbar.blade.php:41:                <li><a class="dropdown-item" href="{{ url('/org/register') }}">@lang('Organization Register')</a></li>
resources/views/profile/partials/delete-user-form.blade.php:28:                {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.') }}
resources/views/profile/partials/delete-user-form.blade.php:32:                <x-input-label for="password" value="{{ __('Password') }}" class="sr-only" />
resources/views/profile/partials/delete-user-form.blade.php:35:                    id="password"
resources/views/profile/partials/delete-user-form.blade.php:36:                    name="password"
resources/views/profile/partials/delete-user-form.blade.php:37:                    type="password"
resources/views/profile/partials/delete-user-form.blade.php:42:                <x-input-error :messages="$errors->userDeletion->get('password')" class="mt-2" />
resources/views/profile/partials/update-password-form.blade.php:9:            {{ __('Ensure your account is using a long, random password to stay secure.') }}
resources/views/profile/partials/update-password-form.blade.php:13:    <form method="post" action="{{ route('password.update') }}" class="mt-6 space-y-6">
resources/views/profile/partials/update-password-form.blade.php:18:            <x-input-label for="update_password_current_password" :value="__('Current Password')" />
resources/views/profile/partials/update-password-form.blade.php:19:            <x-text-input id="update_password_current_password" name="current_password" type="password" class="mt-1 block w-full" autocomplete="current-password" />
resources/views/profile/partials/update-password-form.blade.php:20:            <x-input-error :messages="$errors->updatePassword->get('current_password')" class="mt-2" />
resources/views/profile/partials/update-password-form.blade.php:24:            <x-input-label for="update_password_password" :value="__('New Password')" />
resources/views/profile/partials/update-password-form.blade.php:25:            <x-text-input id="update_password_password" name="password" type="password" class="mt-1 block w-full" autocomplete="new-password" />
resources/views/profile/partials/update-password-form.blade.php:26:            <x-input-error :messages="$errors->updatePassword->get('password')" class="mt-2" />
resources/views/profile/partials/update-password-form.blade.php:30:            <x-input-label for="update_password_password_confirmation" :value="__('Confirm Password')" />
resources/views/profile/partials/update-password-form.blade.php:31:            <x-text-input id="update_password_password_confirmation" name="password_confirmation" type="password" class="mt-1 block w-full" autocomplete="new-password" />
resources/views/profile/partials/update-password-form.blade.php:32:            <x-input-error :messages="$errors->updatePassword->get('password_confirmation')" class="mt-2" />
resources/views/profile/partials/update-password-form.blade.php:38:            @if (session('status') === 'password-updated')
resources/views/emails/certificate.blade.php:5:<p>{{ __('Verify here') }}: <a href="{{ url('/verify/'.$c->code) }}">{{ url('/verify/'.$c->code) }}</a></p>
resources/views/emails/certificate_issued.blade.php:21:        {{ __('Verify at') }}: <a href="{{ url('/verify/'.urlencode($cert->code ?? $cert->verification_code)) }}">{{ url('/verify/'.urlencode($cert->code ?? $cert->verification_code)) }}</a>

## Config references:
config/app.php.bak.2025-08-15_060313:15:    // Set Arabic as default locale
config/app.php.bak.2025-08-15_060313:16:    'locale' => 'ar',
config/app.php.bak.2025-08-15_060313:18:    'fallback_locale' => 'en',
config/app.php.bak.2025-08-15_060313:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.2025-08-16-082832:15:    // Set Arabic as default locale
config/app.php.bak.2025-08-16-082832:16:    'locale' => 'ar',
config/app.php.bak.2025-08-16-082832:18:    'fallback_locale' => 'en',
config/app.php.bak.2025-08-16-082832:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.2025-08-20_060448:15:    // Set Arabic as default locale
config/app.php.bak.2025-08-20_060448:16:    'locale' => 'ar',
config/app.php.bak.2025-08-20_060448:18:    'fallback_locale' => 'en',
config/app.php.bak.2025-08-20_060448:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.2025-08-20_061340:15:    // Set Arabic as default locale
config/app.php.bak.2025-08-20_061340:16:    'locale' => 'ar',
config/app.php.bak.2025-08-20_061340:18:    'fallback_locale' => 'en',
config/app.php.bak.2025-08-20_061340:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.2025-08-20_063016:15:    // Set Arabic as default locale
config/app.php.bak.2025-08-20_063016:16:    'locale' => 'ar',
config/app.php.bak.2025-08-20_063016:18:    'fallback_locale' => 'en',
config/app.php.bak.2025-08-20_063016:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.2025-08-20_063241:15:    // Set Arabic as default locale
config/app.php.bak.2025-08-20_063241:16:    'locale' => 'ar',
config/app.php.bak.2025-08-20_063241:18:    'fallback_locale' => 'en',
config/app.php.bak.2025-08-20_063241:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.20250816-074926:15:    // Set Arabic as default locale
config/app.php.bak.20250816-074926:16:    'locale' => 'ar',
config/app.php.bak.20250816-074926:18:    'fallback_locale' => 'en',
config/app.php.bak.20250816-074926:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.20250816-125430:15:    // Set Arabic as default locale
config/app.php.bak.20250816-125430:16:    'locale' => 'ar',
config/app.php.bak.20250816-125430:18:    'fallback_locale' => 'en',
config/app.php.bak.20250816-125430:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.20250816-125502:15:    // Set Arabic as default locale
config/app.php.bak.20250816-125502:16:    'locale' => 'ar',
config/app.php.bak.20250816-125502:18:    'fallback_locale' => 'en',
config/app.php.bak.20250816-125502:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak.20250816-125624:15:    // Set Arabic as default locale
config/app.php.bak.20250816-125624:16:    'locale' => 'ar',
config/app.php.bak.20250816-125624:18:    'fallback_locale' => 'en',
config/app.php.bak.20250816-125624:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak:15:    // Set Arabic as default locale
config/app.php.bak:16:    'locale' => 'ar',
config/app.php.bak:18:    'fallback_locale' => 'en',
config/app.php.bak:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak_20250818_081922:15:    // Set Arabic as default locale
config/app.php.bak_20250818_081922:16:    'locale' => 'ar',
config/app.php.bak_20250818_081922:18:    'fallback_locale' => 'en',
config/app.php.bak_20250818_081922:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak_20250818_084716:15:    // Set Arabic as default locale
config/app.php.bak_20250818_084716:16:    'locale' => 'ar',
config/app.php.bak_20250818_084716:18:    'fallback_locale' => 'en',
config/app.php.bak_20250818_084716:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak_20250818_090236:15:    // Set Arabic as default locale
config/app.php.bak_20250818_090236:16:    'locale' => 'ar',
config/app.php.bak_20250818_090236:18:    'fallback_locale' => 'en',
config/app.php.bak_20250818_090236:24:    'timezone' => 'Asia/Dubai',
config/app.php.bak_20250819142651:15:    // Set Arabic as default locale
config/app.php.bak_20250819142651:16:    'locale' => 'ar',
config/app.php.bak_20250819142651:18:    'fallback_locale' => 'en',
config/app.php.bak_20250819142651:24:    'timezone' => 'Asia/Dubai',
config/app.php:15:    // Set Arabic as default locale
config/app.php:16:    'locale' => 'ar',
config/app.php:18:    'fallback_locale' => 'en',
config/app.php:24:    'timezone' => 'Asia/Dubai',
config/auth.php:28:    | which utilizes session storage plus the Eloquent user provider.
config/auth.php:34:    | Supported: "session"
config/auth.php:40:            'driver' => 'session',
config/cache.php:100:    | When utilizing the APC, database, memcached, Redis, and DynamoDB cache
config/cache.php:101:    | stores, there might be other applications using the same cache. For
config/cache.php:102:    | that reason, you may prefix every cache key to avoid collisions.
config/cache.php:106:    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),
config/cache.php:12:    | This option controls the default cache store that will be used by the
config/cache.php:14:    | specified when running a cache operation inside the application.
config/cache.php:25:    | Here you may define all of the cache "stores" for your application as
config/cache.php:27:    | same cache driver to group types of items stored in your caches.
config/cache.php:29:    | Supported drivers: "array", "database", "file", "memcached",
config/cache.php:44:            'table' => env('DB_CACHE_TABLE', 'cache'),
config/cache.php:51:            'path' => storage_path('framework/cache/data'),
config/cache.php:52:            'lock_path' => storage_path('framework/cache/data'),
config/cache.php:55:        'memcached' => [
config/cache.php:56:            'driver' => 'memcached',
config/cache.php:63:                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
config/cache.php:76:            'connection' => env('REDIS_CACHE_CONNECTION', 'cache'),
config/cache.php:85:            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
config/database.php:140:    | such as Memcached. You may define your connection settings here.
config/database.php:162:        'cache' => [
config/dompdf.php:51:         * The location of the DOMPDF font cache directory
config/dompdf.php:53:         * This directory contains the cached font metrics for the fonts used by DOMPDF.
config/dompdf.php:58:        'font_cache' => storage_path('fonts'),
config/mail.php:105:    | You may wish for all emails sent by your application to be sent from
config/mail.php:107:    | used globally for all emails that are sent by your application.
config/mail.php:10:    | This option controls the default mailer that is used to send all email
config/mail.php:11:    | messages unless another mailer is explicitly specified when sending
config/mail.php:12:    | the message. All additional mailers can be configured within the
config/mail.php:13:    | "mailers" array. Examples of each type of mailer are provided.
config/mail.php:24:    | Here you may configure all of the mailers used by your application plus
config/mail.php:28:    | Laravel supports a variety of mail "transport" drivers that can be used
config/mail.php:29:    | when delivering an email. You may specify which one you're using for
config/mail.php:30:    | your mailers below. You may also add additional mailers if needed.
config/mail.php:32:    | Supported: "smtp", "sendmail", "mailgun", "ses", "ses-v2",
config/mail.php:38:    'mailers' => [
config/mail.php:68:        'sendmail' => [
config/mail.php:69:            'transport' => 'sendmail',
config/mail.php:70:            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
config/mail.php:84:            'mailers' => [
config/mail.php:92:            'mailers' => [
config/permission.php:32:    'cache' => [
config/permission.php:34:        'key' => 'spatie.permission.cache',
config/queue.php:10:    | Laravel's queue supports a variety of backends via a single, unified
config/queue.php:12:    | syntax for each. The default queue connection is defined below.
config/queue.php:23:    | Here you may configure the connection options for every queue backend
config/queue.php:41:            'queue' => env('DB_QUEUE', 'default'),
config/queue.php:49:            'queue' => env('BEANSTALKD_QUEUE', 'default'),
config/queue.php:60:            'queue' => env('SQS_QUEUE', 'default'),
config/queue.php:69:            'queue' => env('REDIS_QUEUE', 'default'),
config/queue.php:98:    | These options configure the behavior of failed queue job logging so you
config/sanctum.php:46:    | "expires_at" attribute, but first-party sessions are not affected.
config/sanctum.php:79:        'authenticate_session' => Laravel\Sanctum\Http\Middleware\AuthenticateSession::class,
config/session.php.bak.2025-08-20_084449:100:    | Affects: "apc", "dynamodb", "memcached", "redis"
config/session.php.bak.2025-08-20_084449:111:    | Some session drivers must manually sweep their storage location to get
config/session.php.bak.2025-08-20_084449:112:    | rid of old sessions from storage. Here are the chances that it will
config/session.php.bak.2025-08-20_084449:124:    | Here you may change the name of the session cookie that is created by
config/session.php.bak.2025-08-20_084449:12:    | This option determines the default session driver that is utilized for
config/session.php.bak.2025-08-20_084449:132:        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
config/session.php.bak.2025-08-20_084449:140:    | The session cookie path determines the path for which the cookie will
config/session.php.bak.2025-08-20_084449:14:    | persist session data. Database storage is a great default choice.
config/session.php.bak.2025-08-20_084449:153:    | This value determines the domain and subdomains the session cookie is
config/session.php.bak.2025-08-20_084449:166:    | By setting this option to true, session cookies will only be sent back
config/session.php.bak.2025-08-20_084449:17:    |            "memcached", "redis", "dynamodb", "array"
config/session.php.bak.2025-08-20_084449:28:    | Here you may specify the number of minutes that you wish the session
config/session.php.bak.2025-08-20_084449:44:    | This option allows you to easily specify that all of your session data
config/session.php.bak.2025-08-20_084449:46:    | automatically by Laravel and you may use the session like normal.
config/session.php.bak.2025-08-20_084449:57:    | When utilizing the "file" session driver, the session files are placed
config/session.php.bak.2025-08-20_084449:63:    'files' => storage_path('framework/sessions'),
config/session.php.bak.2025-08-20_084449:70:    | When using the "database" or "redis" session drivers, you may specify a
config/session.php.bak.2025-08-20_084449:71:    | connection that should be used to manage these sessions. This should
config/session.php.bak.2025-08-20_084449:83:    | When using the "database" session driver, you may specify the table to
config/session.php.bak.2025-08-20_084449:84:    | be used to store sessions. Of course, a sensible default is defined
config/session.php.bak.2025-08-20_084449:89:    'table' => env('SESSION_TABLE', 'sessions'),
config/session.php.bak.2025-08-20_084449:96:    | When using one of the framework's cache driven session backends, you may
config/session.php.bak.2025-08-20_084449:97:    | define the cache store which should be used to store the session data
config/session.php.bak.2025-08-20_084449:98:    | between requests. This must match one of your defined cache stores.
config/session.php.bak.2025-08-20_085214:100:    | Affects: "apc", "dynamodb", "memcached", "redis"
config/session.php.bak.2025-08-20_085214:111:    | Some session drivers must manually sweep their storage location to get
config/session.php.bak.2025-08-20_085214:112:    | rid of old sessions from storage. Here are the chances that it will
config/session.php.bak.2025-08-20_085214:124:    | Here you may change the name of the session cookie that is created by
config/session.php.bak.2025-08-20_085214:12:    | This option determines the default session driver that is utilized for
config/session.php.bak.2025-08-20_085214:132:        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
config/session.php.bak.2025-08-20_085214:140:    | The session cookie path determines the path for which the cookie will
config/session.php.bak.2025-08-20_085214:14:    | persist session data. Database storage is a great default choice.
config/session.php.bak.2025-08-20_085214:153:    | This value determines the domain and subdomains the session cookie is
config/session.php.bak.2025-08-20_085214:166:    | By setting this option to true, session cookies will only be sent back
config/session.php.bak.2025-08-20_085214:17:    |            "memcached", "redis", "dynamodb", "array"
config/session.php.bak.2025-08-20_085214:28:    | Here you may specify the number of minutes that you wish the session
config/session.php.bak.2025-08-20_085214:44:    | This option allows you to easily specify that all of your session data
config/session.php.bak.2025-08-20_085214:46:    | automatically by Laravel and you may use the session like normal.
config/session.php.bak.2025-08-20_085214:57:    | When utilizing the "file" session driver, the session files are placed
config/session.php.bak.2025-08-20_085214:63:    'files' => storage_path('framework/sessions'),
config/session.php.bak.2025-08-20_085214:70:    | When using the "database" or "redis" session drivers, you may specify a
config/session.php.bak.2025-08-20_085214:71:    | connection that should be used to manage these sessions. This should
config/session.php.bak.2025-08-20_085214:83:    | When using the "database" session driver, you may specify the table to
config/session.php.bak.2025-08-20_085214:84:    | be used to store sessions. Of course, a sensible default is defined
config/session.php.bak.2025-08-20_085214:89:    'table' => env('SESSION_TABLE', 'sessions'),
config/session.php.bak.2025-08-20_085214:96:    | When using one of the framework's cache driven session backends, you may
config/session.php.bak.2025-08-20_085214:97:    | define the cache store which should be used to store the session data
config/session.php.bak.2025-08-20_085214:98:    | between requests. This must match one of your defined cache stores.
config/session.php.bak.2025-08-20_085509:100:    | Affects: "apc", "dynamodb", "memcached", "redis"
config/session.php.bak.2025-08-20_085509:111:    | Some session drivers must manually sweep their storage location to get
config/session.php.bak.2025-08-20_085509:112:    | rid of old sessions from storage. Here are the chances that it will
config/session.php.bak.2025-08-20_085509:124:    | Here you may change the name of the session cookie that is created by
config/session.php.bak.2025-08-20_085509:12:    | This option determines the default session driver that is utilized for
config/session.php.bak.2025-08-20_085509:132:        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
config/session.php.bak.2025-08-20_085509:140:    | The session cookie path determines the path for which the cookie will
config/session.php.bak.2025-08-20_085509:14:    | persist session data. Database storage is a great default choice.
config/session.php.bak.2025-08-20_085509:153:    | This value determines the domain and subdomains the session cookie is
config/session.php.bak.2025-08-20_085509:166:    | By setting this option to true, session cookies will only be sent back
config/session.php.bak.2025-08-20_085509:17:    |            "memcached", "redis", "dynamodb", "array"
config/session.php.bak.2025-08-20_085509:28:    | Here you may specify the number of minutes that you wish the session
config/session.php.bak.2025-08-20_085509:44:    | This option allows you to easily specify that all of your session data
config/session.php.bak.2025-08-20_085509:46:    | automatically by Laravel and you may use the session like normal.
config/session.php.bak.2025-08-20_085509:57:    | When utilizing the "file" session driver, the session files are placed
config/session.php.bak.2025-08-20_085509:63:    'files' => storage_path('framework/sessions'),
config/session.php.bak.2025-08-20_085509:70:    | When using the "database" or "redis" session drivers, you may specify a
config/session.php.bak.2025-08-20_085509:71:    | connection that should be used to manage these sessions. This should
config/session.php.bak.2025-08-20_085509:83:    | When using the "database" session driver, you may specify the table to
config/session.php.bak.2025-08-20_085509:84:    | be used to store sessions. Of course, a sensible default is defined
config/session.php.bak.2025-08-20_085509:89:    'table' => env('SESSION_TABLE', 'sessions'),
config/session.php.bak.2025-08-20_085509:96:    | When using one of the framework's cache driven session backends, you may
config/session.php.bak.2025-08-20_085509:97:    | define the cache store which should be used to store the session data
config/session.php.bak.2025-08-20_085509:98:    | between requests. This must match one of your defined cache stores.
config/session.php.bak.2025-08-20_085652:100:    | Affects: "apc", "dynamodb", "memcached", "redis"
config/session.php.bak.2025-08-20_085652:111:    | Some session drivers must manually sweep their storage location to get
config/session.php.bak.2025-08-20_085652:112:    | rid of old sessions from storage. Here are the chances that it will
config/session.php.bak.2025-08-20_085652:124:    | Here you may change the name of the session cookie that is created by
config/session.php.bak.2025-08-20_085652:12:    | This option determines the default session driver that is utilized for
config/session.php.bak.2025-08-20_085652:132:        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
config/session.php.bak.2025-08-20_085652:140:    | The session cookie path determines the path for which the cookie will
config/session.php.bak.2025-08-20_085652:14:    | persist session data. Database storage is a great default choice.
config/session.php.bak.2025-08-20_085652:153:    | This value determines the domain and subdomains the session cookie is
config/session.php.bak.2025-08-20_085652:166:    | By setting this option to true, session cookies will only be sent back
config/session.php.bak.2025-08-20_085652:17:    |            "memcached", "redis", "dynamodb", "array"
config/session.php.bak.2025-08-20_085652:28:    | Here you may specify the number of minutes that you wish the session
config/session.php.bak.2025-08-20_085652:44:    | This option allows you to easily specify that all of your session data
config/session.php.bak.2025-08-20_085652:46:    | automatically by Laravel and you may use the session like normal.
config/session.php.bak.2025-08-20_085652:57:    | When utilizing the "file" session driver, the session files are placed
config/session.php.bak.2025-08-20_085652:63:    'files' => storage_path('framework/sessions'),
config/session.php.bak.2025-08-20_085652:70:    | When using the "database" or "redis" session drivers, you may specify a
config/session.php.bak.2025-08-20_085652:71:    | connection that should be used to manage these sessions. This should
config/session.php.bak.2025-08-20_085652:83:    | When using the "database" session driver, you may specify the table to
config/session.php.bak.2025-08-20_085652:84:    | be used to store sessions. Of course, a sensible default is defined
config/session.php.bak.2025-08-20_085652:89:    'table' => env('SESSION_TABLE', 'sessions'),
config/session.php.bak.2025-08-20_085652:96:    | When using one of the framework's cache driven session backends, you may
config/session.php.bak.2025-08-20_085652:97:    | define the cache store which should be used to store the session data
config/session.php.bak.2025-08-20_085652:98:    | between requests. This must match one of your defined cache stores.
config/session.php:12:    'files' => storage_path('framework/sessions'),
config/session.php:14:    'table' => 'sessions',
config/session.php:20:        Str::slug(env('APP_NAME', 'laravel'), '_') . '_session'

## Providers:
AppServiceProvider.php
AppServiceProvider.php.bak
AppServiceProvider.php.bak.2025-08-15_154241
AppServiceProvider.php.bak.2025-08-20_084057
AppServiceProvider.php.bak.2025-08-20_090016
AppServiceProvider.php.bak.2025-08-20_090408
AppServiceProvider.php.bak_2025-08-17_0625
AppServiceProvider.php.bak_2025-08-17_0642
AuthServiceProvider.php
AuthServiceProvider.php.bak.2025-08-15-0715
AuthServiceProvider.php.bak.2025-08-15-0717
AuthServiceProvider.php.bak.20250816-124232
AuthServiceProvider.php.bak.20250816-131357
BladeRtlServiceProvider.php
DashboardCacheServiceProvider.php
EventServiceProvider.php
EventServiceProvider.php.bak.1755243956
EventServiceProvider.php.bak_2025-08-18-080621
HealthScheduleServiceProvider.php
HealthScheduleServiceProvider.php.bak_20250818_100726
HealthScheduleServiceProvider.php.bak_20250818_105051
LoadAllRoutesServiceProvider.php
MiddlewareAliasesServiceProvider.php
MiddlewareAliasesServiceProvider.php.bak_20250818_093024
MiddlewareAliasesServiceProvider.php.bak_20250818_100656
OrgDashboardServiceProvider.php
OrgDashboardServiceProvider.php.bak
OrgDashboardServiceProvider.php.bak.20250816-072833
OrgShortlistRoutesServiceProvider.php
RateLimitServiceProvider.php
RouteServiceProvider.php
RouteServiceProvider.php.bak.2025-08-15_055743
RouteServiceProvider.php.bak.2025-08-15_060038
RouteServiceProvider.php.bak.20250816-074544
RouteServiceProvider.php.bak.20250816-074727
RouteServiceProvider.php.bak_20250818_120806
SitemapScheduleServiceProvider.php
SpatieAliasesServiceProvider.php
SpatiePermissionAliases.php
UaePassSocialiteServiceProvider.php
ViewComposerServiceProvider.php
ViewComposerServiceProvider.php.bak.
ViewComposerServiceProvider.php.bak.1755351029
ViewComposerServiceProvider.php.bak.2025-08-20_061340
ViewComposerServiceProvider.php.bak.2025-08-20_063016
ViewComposerServiceProvider.php.bak.2025-08-20_063241
ViewComposerServiceProvider.php.bak.2025-08-20_065608
ViewComposerServiceProvider.php.bak.20250816-125826
ViewComposerServiceProvider.php.bak.20250816-130829
ViewServiceProvider.php
YourProvider.php
resources

## AppServiceProvider (first 160):
     1	<?php
     2	
     3	namespace App\Providers;
     4	use Illuminate\Cache\RateLimiting\Limit;
     5	use Illuminate\Support\Facades\RateLimiter;
     6	use Illuminate\Support\Facades\URL;
     7	
     8	use Illuminate\Support\Facades\View;
     9	use Illuminate\Support\ServiceProvider;
    10	use Illuminate\Pagination\Paginator;
    11	
    12	class AppServiceProvider extends ServiceProvider
    13	{
    14	    public function register(): void
    15	    {
    16	        //
    17	    }
    18	
    19	    public function boot(): void
    20	    {
    21	                                RateLimiter::for('login', function ($request) {
    22	            $id = (string) ($request->input('email') ?? 'guest');
    23	            return [Limit::perMinute(5)->by($id.'|'.$request->ip())];
    24	        });
    25	RateLimiter::for('global', fn($request) => [Limit::perMinute(120)->by($request->ip())]);
    26	if (config('app.env') === 'production') { URL::forceScheme('https'); }
    27	// Shared vars so any layout/partial/error never crashes
    28	        View::composer('*', function ($view) {
    29	            $view->with('assetV', config('app.asset_version', '1'));
    30	            $view->with('rtl', in_array(app()->getLocale(), ['ar','fa','ur','he']));
    31	        });
    32	
    33	        // If you use Bootstrap/Argon pagination
    34	        if (class_exists(Paginator::class)) {
    35	            Paginator::useBootstrapFive();
    36	        }
    37	    }
    38	}

## .env peek (masked):
2:APP_ENV=***
4:APP_DEBUG=***
5:APP_URL=***
10:DB_HOST=***
12:DB_DATABASE=***
17:CACHE_DRIVER=***
18:QUEUE_CONNECTION=***
19:SESSION_DRIVER=***
22:MAIL_MAILER=***
91:APP_TIMEZONE=***

## public/ dirs:
public
public/.well-known
public/.well-known/acme-challenge
public/certificates
public/css
public/icons
public/images
public/images/backup_20250806_062119
public/images/gallery
public/img
public/js
public/partners
public/partners/backup_20250806_062119
public/pdfs
public/sitemaps
public/uploads
public/uploads/profiles
public/vendor
public/vendor/argon
public/vendor/bootstrap
public/vendor/bootstrap-icons

## public/.htaccess (first 160):
     1	<IfModule mod_rewrite.c>
     2	    <IfModule mod_negotiation.c>
     3	        Options -MultiViews -Indexes
     4	    </IfModule>
     5	
     6	    RewriteEngine On
     7	
     8	    # Force HTTPS
     9	    RewriteCond %{HTTPS} !=on
    10	    RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    11	
    12	    # Redirect Trailing Slashes...
    13	    RewriteCond %{REQUEST_FILENAME} !-d
    14	    RewriteRule ^(.*)/$ /$1 [L,R=301]
    15	
    16	    # Legacy storage/certificates fallback to /certificates
    17	    RewriteRule ^storage/certificates/(.+)$ /certificates/$1 [R=301,L]
    18	
    19	    # Handle Front Controller...
    20	    RewriteCond %{REQUEST_FILENAME} !-d
    21	    RewriteCond %{REQUEST_FILENAME} !-f
    22	    RewriteRule ^ index.php [L]
    23	</IfModule>
    24	
    25	# --- SawaedUAE security headers (fallback) ---
    26	<IfModule mod_headers.c>
    27	    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" env=HTTPS
    28	    Header set Cross-Origin-Opener-Policy "same-origin"
    29	    Header set Cross-Origin-Resource-Policy "same-origin"
    30	</IfModule>
    31	
    32	### === SwaedUAE: Performance & Security headers ===
    33	<IfModule mod_headers.c>
    34	  Header always set X-Frame-Options "SAMEORIGIN"
    35	  Header always set X-Content-Type-Options "nosniff"
    36	  Header always set Referrer-Policy "strict-origin-when-cross-origin"
    37	  Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"
    38	  # If site is HTTPS-only, uncomment HSTS (after confirming no subdomain issues):
    39	  # Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    40	</IfModule>
    41	
    42	# Gzip / deflate (only if module is available)
    43	<IfModule mod_deflate.c>
    44	  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json image/svg+xml
    45	</IfModule>
    46	
    47	# Far-future expires for static assets (fingerprinted or safe to cache)
    48	<IfModule mod_expires.c>
    49	  ExpiresActive On
    50	  ExpiresByType text/css "access plus 1 month"
    51	  ExpiresByType application/javascript "access plus 1 month"
    52	  ExpiresByType text/javascript "access plus 1 month"
    53	  ExpiresByType image/svg+xml "access plus 1 month"
    54	  ExpiresByType image/x-icon "access plus 1 year"
    55	  ExpiresByType image/png "access plus 1 month"
    56	  ExpiresByType image/jpg "access plus 1 month"
    57	  ExpiresByType image/jpeg "access plus 1 month"
    58	  ExpiresByType image/webp "access plus 1 month"
    59	  ExpiresDefault "access plus 7 days"
    60	</IfModule>
    61	
    62	# Cache-Control as a backstop
    63	<IfModule mod_headers.c>
    64	  <FilesMatch "\.(css|js|png|jpe?g|webp|svg|ico)$">
    65	    Header set Cache-Control "public, max-age=2592000, immutable"
    66	  </FilesMatch>
    67	</IfModule>
    68	### === /SwaedUAE ===
    69	# END perf
    70	# BEGIN perf (html header cleanup)
    71	<IfModule mod_headers.c>
    72	  <FilesMatch "\.(html)$">
    73	    Header unset Cache-Control
    74	    Header set Cache-Control "no-cache, no-store, must-revalidate"
    75	  </FilesMatch>
    76	</IfModule>
    77	# END perf (html header cleanup)
    78	# BEGIN far-future static cache
    79	<IfModule mod_expires.c>
    80	  ExpiresActive On
    81	  ExpiresByType image/avif "access plus 1 year"
    82	  ExpiresByType image/webp "access plus 1 year"
    83	  ExpiresByType image/png  "access plus 1 year"
    84	  ExpiresByType image/jpg  "access plus 1 year"
    85	  ExpiresByType image/jpeg "access plus 1 year"
    86	  ExpiresByType image/gif  "access plus 1 year"
    87	  ExpiresByType image/svg+xml "access plus 1 year"
    88	  ExpiresByType text/css   "access plus 1 year"
    89	  ExpiresByType text/javascript "access plus 1 year"
    90	  ExpiresByType application/javascript "access plus 1 year"
    91	  ExpiresByType font/woff2 "access plus 1 year"
    92	</IfModule>
    93	# END far-future static cache

## Migrations (last 40):
2025_08_14_130000_add_certificate_code_uniques.php
2025_08_14_130500_add_certificate_lookup_indexes.php
2025_08_14_190000_add_profile_fields_to_users.php
2025_08_14_200000_create_organization_registrations_table.php
2025_08_14_205239_extend_organizations_for_org_portal.php
2025_08_14_210844_add_owner_id_to_organizations.php
2025_08_14_215336_make_org_email_password_nullable.php
2025_08_14_220000_add_license_fields_to_organizations.php
2025_08_14_220309_tweak_org_columns_for_license_and_nullable.php
2025_08_14_220500_add_license_file_to_organizations.php
2025_08_15_053802_add_hours_engine_columns.php
2025_08_15_072230_add_minutes_to_volunteer_hours_table.php
2025_08_15_115847_make_attendance_token_nullable.php
2025_08_15_123000_add_checkin_columns_if_missing.php
2025_08_15_130500_drop_attendance_user_opportunity_unique.php
2025_08_16_100000_augment_attendances_for_geo_and_status.php
2025_08_16_120000_add_org_attendance_fields.php
2025_08_16_140000_org_shortlisting_cap_and_status.php
2025_08_16_172807_add_geo_to_attendances_table.php
2025_08_16_172808_add_geofence_to_opportunities_table.php
2025_08_16_172929_create_organization_users_table.php
2025_08_16_173500_create_org_kyc_table.php
2025_08_16_190500_add_organization_id_to_opportunities_table.php
2025_08_16_193900_add_start_end_at_to_opportunities.php
2025_08_17_000001_add_avatar_to_users_table.php
2025_08_17_093149_create_organization_registrations_table.php.bak
2025_08_17_093149_create_organization_registrations_table.php.bak.2025-08-19-071420
2025_08_17_120000_add_avatar_path_to_users_table.php
2025_08_17_150500_create_volunteer_hours_table.php
2025_08_17_150510_create_opportunity_applications_table.php
2025_08_17_150520_create_qr_scans_table.php
2025_08_17_150530_create_geo_logs_table.php
2025_08_17_211500_patch_qr_scans_and_related.php
2025_08_17_211900_make_attendance_nullable_in_qr_scans.php
2025_08_19_112018_add_slug_to_events_table.php
2025_08_19_145036_create_notifications_table.php
_disabled
_disabled_dupes
backup_2025-08-08_062917
resources

## Seeders:
AdminUserSeeder.php
ApplicationsTableSeeder.php
BackfillEventSlugsSeeder.php
CategorySeeder.php
CreateAdminOrgUsersSeeder.php
DatabaseSeeder.php
DemoCategoriesSeeder.php
DemoCertificateSeeder.php
DemoContentSeeder.php
DemoDataSeeder.php
DemoDataSeeder.php.bak.1755352555
DemoDataSeeder.php.bak.2025-08-16_140233
DemoDataSeeder.php.bak.2025-08-16_140511
DemoHomeSeeder.php
DemoOpportunitiesSeeder.php
DemoOpportunitySeeder.php
DemoVolunteerHoursSeeder.php
DemoVolunteerSeeder.php
EventSeeder.php
FakeOrganizationSeeder.php
InitialDataSeeder.php
OpportunitySeeder.php
PartnerSeeder.php
RbacSeeder.php
RegionSeeder.php
RolePermissionSeeder.php
RoleSeeder.php
RolesAndPermissionsSeeder.php
RolesSeeder.php
StorySeeder.php
VolunteerOpportunitiesTableSeeder.php

## Tools:
total 796K
drwxrwxr-x  6 vminingc vminingc 4.0K Aug 20 09:27 .
drwxr-xr-x 46 vminingc vminingc  12K Aug 20 09:31 ..
-rw-rw-r--  1 vminingc vminingc  559 Aug 18 07:31 _inject_kernel_setlocale.php
-rw-rw-r--  1 vminingc vminingc  594 Aug 18 07:31 _inject_schedule.php
-rw-rw-r--  1 vminingc vminingc  802 Aug 18 10:06 add_admin_only_alias.php
-rw-rw-r--  1 vminingc vminingc 1.7K Aug 18 12:15 add_forms_rate_limiter.php
-rwxrwxr-x  1 vminingc vminingc 1.3K Aug 17 17:43 admin_access_fix.sh
-rwxrwxr-x  1 vminingc vminingc 1.2K Aug 17 17:46 admin_dashboard_triage.sh
-rwxrwxr-x  1 vminingc vminingc  578 Aug 17 18:07 admin_health.sh
-rwxrwxr-x  1 vminingc vminingc 1.5K Aug 17 18:20 admin_menu_audit.sh
-rwxrwxr-x  1 vminingc vminingc 1.9K Aug 17 17:27 admin_sanity_check.sh
-rw-rw-r--  1 vminingc vminingc 1.8K Aug 18 11:05 apply_db_index_suggestions.php
-rw-rw-r--  1 vminingc vminingc 1.2K Aug 18 12:34 attach_form_ratelimit.php
-rw-rw-r--  1 vminingc vminingc 2.4K Aug 18 11:07 attach_honeypot_to_route.php
-rw-rw-r--  1 vminingc vminingc  610 Aug 18 10:02 audit_admin_routes.php
-rw-rw-r--  1 vminingc vminingc  662 Aug 18 10:07 audit_admin_routes_v2.php
-rwxrwxr-x  1 vminingc vminingc  920 Aug 20 09:27 backup.sh
-rwxrwxr-x  1 vminingc vminingc 2.8K Aug 18 09:19 backup.sh.bak.2025-08-20_090708
-rwxrwxr-x  1 vminingc vminingc  920 Aug 20 09:26 backup.sh.bak.2025-08-20_092701
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 18 14:49 bin
-rwxrwxr-x  1 vminingc vminingc  750 Aug 18 10:49 db_backup.sh
-rw-rw-r--  1 vminingc vminingc 3.6K Aug 18 11:00 db_index_audit.php
-rwxrwxr-x  1 vminingc vminingc 2.1K Aug 20 08:49 deploy.sh
-rw-rw-r--  1 vminingc vminingc  987 Aug 18 13:00 ensure_register_name.php
-rw-rw-r--  1 vminingc vminingc  658 Aug 18 07:42 ensure_schedule.php
-rw-rw-r--  1 vminingc vminingc 1.1K Aug 18 07:45 ensure_schedule_v2.php
-rw-r--r--  1 vminingc vminingc  817 Aug 18 07:31 error_log
-rwxrwxr-x  1 vminingc vminingc 6.2K Aug 20 09:27 finalize.sh
-rw-rw-r--  1 vminingc vminingc  816 Aug 17 18:36 find_public_routes_in_admin.php
-rw-rw-r--  1 vminingc vminingc 1.9K Aug 20 09:04 fix_appservice.php
-rwxrwxr-x  1 vminingc vminingc 1.1K Aug 18 11:54 form_probe.sh
-rw-rw-r--  1 vminingc vminingc  665 Aug 20 08:49 health_check.php
-rwxrwxr-x  1 vminingc vminingc 1.4K Aug 20 08:03 healthcheck.sh
-rwxr-xr-x  1 vminingc vminingc 2.8K Aug 19 06:14 healthcheck_full.sh
-rw-rw-r--  1 vminingc vminingc  868 Aug 18 10:02 i18n_diff.php
-rw-rw-r--  1 vminingc vminingc  722 Aug 18 10:07 i18n_export_csv.php
-rw-rw-r--  1 vminingc vminingc 1.2K Aug 18 11:30 inject_hp_by_name.php
-rw-rw-r--  1 vminingc vminingc  800 Aug 18 07:36 inject_seo_into_layouts.php
-rw-rw-r--  1 vminingc vminingc 1.1K Aug 18 12:08 inject_throttle_by_uri.php
-rwxrwxr-x  1 vminingc vminingc  248 Aug 17 18:01 inspect_admin_view_vars.sh
-rwxrwxr-x  1 vminingc vminingc  442 Aug 17 17:32 list_admins.sh
-rw-rw-r--  1 vminingc vminingc  832 Aug 18 09:12 logging_daily_30.php
-rw-rw-r--  1 vminingc vminingc  519 Aug 18 10:51 mail_test.php
-rw-rw-r--  1 vminingc vminingc  974 Aug 18 13:00 microcache_add_locale_skips.php
-rwxrwxr-x  1 vminingc vminingc 5.3K Aug 18 13:59 p3_opportunities_check.sh
-rwxrwxr-x  1 vminingc vminingc 5.2K Aug 18 13:53 p3_opportunities_check.sh.bak_2025-08-18-135312
-rwxrwxr-x  1 vminingc vminingc 5.3K Aug 18 13:57 p3_opportunities_check.sh.bak_apply
-rwxrwxr-x  1 vminingc vminingc 5.2K Aug 18 13:57 p3_opportunities_check.sh.bak_applyfix_2025-08-18-135727
-rwxrwxr-x  1 vminingc vminingc 5.3K Aug 18 13:59 p3_opportunities_check.sh.bak_applyfix_2025-08-18-135935
-rwxrwxr-x  1 vminingc vminingc  574 Aug 18 13:44 p3_opportunities_check_to_file.sh
-rwxrwxr-x  1 vminingc vminingc 2.8K Aug 18 13:31 p3_opportunities_drilldown.sh
-rw-rw-r--  1 vminingc vminingc 1.3K Aug  8 16:22 patch-kernel-role-aliases.php
-rwxrwxr-x  1 vminingc vminingc 1.1K Aug  8 16:03 patch-kernel-role-middleware.sh
-rw-rw-r--  1 vminingc vminingc 1.5K Aug 18 11:10 patch_org_register_honeypot.php
-rw-rw-r--  1 vminingc vminingc 3.1K Aug 18 11:14 patch_org_register_honeypot_v2.php
-rw-rw-r--  1 vminingc vminingc  888 Aug 18 11:25 patch_org_register_honeypot_v3.php
-rw-rw-r--  1 vminingc vminingc  890 Aug 20 08:52 patch_session.php
drwxrwxr-x  2 vminingc vminingc 4.0K Aug 18 15:49 patches
-rw-rw-r--  1 vminingc vminingc 2.7K Aug 20 08:18 perf_index_audit.php
-rw-rw-r--  1 vminingc vminingc 2.4K Aug 20 08:13 perf_index_audit.php.bak.2025-08-20_081815
-rw-rw-r--  1 vminingc vminingc 3.2K Aug 18 11:24 phase10_fix_microcache_csrf.php
-rw-rw-r--  1 vminingc vminingc 1016 Aug 18 11:05 phase10_fix_org_register.php
-rwxrwxr-x  1 vminingc vminingc  13K Aug 18 07:31 phase4_apply.sh
-rw-rw-r--  1 vminingc vminingc 1.7K Aug 20 08:44 phase4_patch_appservice.php
-rw-rw-r--  1 vminingc vminingc  411 Aug 20 08:44 phase4_patch_kernel.php
-rwxrwxr-x  1 vminingc vminingc 2.8K Aug 18 08:01 phase5_apply.sh
-rw-rw-r--  1 vminingc vminingc 1.8K Aug 18 08:23 phase5_attach_controller_mw.php
-rwxrwxr-x  1 vminingc vminingc 4.6K Aug 18 08:06 phase5_fix.sh
-rwxrwxr-x  1 vminingc vminingc 7.3K Aug 18 08:03 phase5_hardening.sh
-rw-rw-r--  1 vminingc vminingc 1.2K Aug 18 08:08 phase5_patch_routes_all.php
-rw-rw-r--  1 vminingc vminingc  955 Aug 18 08:11 phase5_routes_repair.php
-rw-rw-r--  1 vminingc vminingc 1.1K Aug 18 08:13 phase5_routes_repair2.php
-rw-rw-r--  1 vminingc vminingc  473 Aug 20 09:07 phase6_patch_kernel.php
-rw-rw-r--  1 vminingc vminingc 1.8K Aug 18 09:30 phase9_wire_microcache.php
-rwxrwxr-x  1 vminingc vminingc 2.0K Aug 18 07:00 preflight_phase2.sh
-rw-rw-r--  1 vminingc vminingc 2.0K Aug 18 11:34 prioritize_honeypot.php
-rw-rw-r--  1 vminingc vminingc  468 Aug 18 10:50 queue_setup.php
drwxr-xr-x  2 vminingc vminingc 4.0K Aug 20 09:48 reports
-rwxrwxr-x  1 vminingc vminingc 1.4K Aug 18 09:19 restore_db.sh
-rwxrwxr-x  1 vminingc vminingc 8.6K Aug 19 08:42 roadmap_audit.sh
-rw-rw-r--  1 vminingc vminingc   26 Aug 19 08:34 roadmap_audit.txt
-rw-rw-r--  1 vminingc vminingc 7.0K Aug 18 12:55 roadmap_status_check.sh
-rw-rw-r--  1 vminingc vminingc 7.0K Aug 18 13:11 roadmap_status_check.sh.bak_2025-08-18-131109
-rwxrwxr-x  1 vminingc vminingc  515 Aug 18 09:06 rotate_logs.sh
-rw-rw-r--  1 vminingc vminingc  779 Aug 18 13:00 route_dedupe_locale.php
-rw-rw-r--  1 vminingc vminingc 2.2K Aug 18 11:00 route_post_csrf_audit.php
-rw-rw-r--  1 vminingc vminingc 2.0K Aug 18 11:05 route_post_csrf_audit_v2.php
-rwxrwxr-x  1 vminingc vminingc  467 Aug 18 13:33 run_p3_opportunities_drilldown.sh
-rw-rw-r--  1 vminingc vminingc  621 Aug 18 10:07 schedule_backup_once.php
-rw-rw-r--  1 vminingc vminingc  858 Aug 18 10:50 schedule_queues_once.php
-rw-rw-r--  1 vminingc vminingc  945 Aug 18 10:02 seo_smoke.php
-rw-rw-r--  1 vminingc vminingc  647 Aug 18 08:21 show_auth_mw.php
-rw-rw-r--  1 vminingc vminingc  615 Aug 18 08:27 show_auth_mw_v2.php
-rw-rw-r--  1 vminingc vminingc  711 Aug 18 08:29 show_auth_mw_v3.php
-rw-rw-r--  1 vminingc vminingc  836 Aug 18 08:30 show_auth_mw_v4.php
-rwxrwxr-x  1 vminingc vminingc  262 Aug 18 11:54 smoke_forms.sh
drwxrwxr-x  3 vminingc vminingc 4.0K Aug 18 12:32 snapshots
-rwxrwxr-x  1 vminingc vminingc  401 Aug 20 08:49 warm_cache.sh
-rwxrwxr-x  1 vminingc vminingc  514 Aug 18 09:33 warm_caches.sh
-rw-rw-r--  1 vminingc vminingc 1.5K Aug 18 12:20 wire_form_throttle.php

## Reports (latest 10):
total 552
-rw-rw-r-- 1 vminingc vminingc 247668 Aug 20 09:48 inventory_2025-08-20_094817.txt
-rw-rw-r-- 1 vminingc vminingc  22144 Aug 20 09:47 routes_full_2025-08-20_094709.txt
-rw-rw-r-- 1 vminingc vminingc  21842 Aug 20 09:41 ops_status_2025-08-20_094152.txt
-rw-rw-r-- 1 vminingc vminingc  39017 Aug 19 06:36 healthcheck_20250819-063624.txt
-rw-rw-r-- 1 vminingc vminingc  39017 Aug 19 06:32 healthcheck_20250819-063204.txt
-rw-rw-r-- 1 vminingc vminingc  38805 Aug 19 06:14 healthcheck_20250819-061452.txt
-rw-rw-r-- 1 vminingc vminingc   1765 Aug 19 06:10 healthcheck_20250819-061042.txt
-rw-rw-r-- 1 vminingc vminingc   1494 Aug 18 15:49 p3_opportunities_check_2025-08-18-154932.txt
-rw-rw-r-- 1 vminingc vminingc   1494 Aug 18 15:44 p3_opportunities_check_2025-08-18-154421.txt

## Scheduler:

  0    3 * * *  php artisan ops:alive ................................................................................ Next Due: 13 ساعة من الآن
  */15 * * * *  scheduler.heartbeat ................................................................................. Next Due: 11 دقيقة من الآن
  *    * * * *  php artisan queue:work --stop-when-empty --queue=default --tries=3 --backoff=10 --timeout=120 --sleep=3  Next Due: 40 ثانية من الآن
  5    2 * * *  php artisan queue:restart ............................................................................ Next Due: 12 ساعة من الآن
  30   3 * * *  /home3/vminingc/swaeduae.ae/laravel-app/tools/db_backup.sh ........................................... Next Due: 13 ساعة من الآن
  30   2 * * *  php artisan sitemap:generate ......................................................................... Next Due: 12 ساعة من الآن
  35   2 * * *  php artisan swaed:build-sitemaps ..................................................................... Next Due: 12 ساعة من الآن
  10   2 * * *  php artisan hours:reconcile .......................................................................... Next Due: 12 ساعة من الآن
  20   2 * * *  php artisan hours:audit .............................................................................. Next Due: 12 ساعة من الآن


## Logs (laravel.log last 200):

## Composer.json (first 80):
     1	{
     2	    "$schema": "https://getcomposer.org/schema.json",
     3	    "name": "laravel/laravel",
     4	    "type": "project",
     5	    "description": "The skeleton application for the Laravel framework.",
     6	    "keywords": ["laravel", "framework"],
     7	    "license": "MIT",
     8	    "require": {
     9	        "php": "^8.2",
    10	        "barryvdh/laravel-dompdf": "^2.0",
    11	        "doctrine/dbal": "^4.3",
    12	        "dompdf/dompdf": "^2.0",
    13	        "guzzlehttp/guzzle": "^7.9",
    14	        "jumbojett/openid-connect-php": "^1.0",
    15	        "laravel/framework": "^11.31",
    16	        "laravel/sanctum": "^4.2",
    17	        "laravel/socialite": "^5.23",
    18	        "laravel/tinker": "^2.9",
    19	        "laravel/ui": "^4.6",
    20	        "simplesoftwareio/simple-qrcode": "^4.2",
    21	        "spatie/laravel-permission": "^6.7",
    22	        "spatie/laravel-sitemap": "^7.3"
    23	    },
    24	    "require-dev": {
    25	        "fakerphp/faker": "^1.23",
    26	        "laravel/breeze": "^2.3",
    27	        "laravel/pail": "^1.1",
    28	        "laravel/pint": "^1.13",
    29	        "laravel/sail": "^1.26",
    30	        "mockery/mockery": "^1.6",
    31	        "nunomaduro/collision": "^8.1",
    32	        "pestphp/pest": "^3.8",
    33	        "pestphp/pest-plugin-laravel": "^3.2"
    34	    },
    35	    "autoload": {
    36	        "psr-4": {
    37	            "App\\": "app/",
    38	            "Database\\Factories\\": "database/factories/",
    39	            "Database\\Seeders\\": "database/seeders/"
    40	        }
    41	    },
    42	    "autoload-dev": {
    43	        "psr-4": {
    44	            "Tests\\": "tests/"
    45	        }
    46	    },
    47	    "scripts": {
    48	        "post-autoload-dump": [
    49	            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
    50	            "@php artisan package:discover --ansi"
    51	        ],
    52	        "post-update-cmd": [
    53	            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
    54	        ],
    55	        "post-root-package-install": [
    56	            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
    57	        ],
    58	        "post-create-project-cmd": [
    59	            "@php artisan key:generate --ansi",
    60	            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
    61	            "@php artisan migrate --graceful --ansi"
    62	        ],
    63	        "dev": [
    64	            "Composer\\Config::disableProcessTimeout",
    65	            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"npm run dev\" --names=server,queue,logs,vite"
    66	        ]
    67	    },
    68	    "extra": {
    69	        "laravel": {
    70	            "dont-discover": []
    71	        }
    72	    },
    73	    "config": {
    74	        "optimize-autoloader": true,
    75	        "preferred-install": "dist",
    76	        "sort-packages": true,
    77	        "allow-plugins": {
    78	            "pestphp/pest-plugin": true,
    79	            "php-http/discovery": true
    80	        }

## Composer packages (filtered):
barryvdh/laravel-dompdf            v2.2.0    A DOMPDF Wrapper for Laravel
carbonphp/carbon-doctrine-types    3.2.0     Types to use Carbon in Doctrine
doctrine/dbal                      4.3.2     Powerful PHP database abstraction layer (DBAL) with many features for database schema introspect...
doctrine/deprecations              1.1.5     A small layer on top of trigger_error(E_USER_DEPRECATED) or PSR-3 logging with options to disabl...
doctrine/inflector                 2.1.0     PHP Doctrine Inflector is a small library that can perform string manipulations with regard to u...
doctrine/lexer                     3.0.1     PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.
fruitcake/php-cors                 v1.3.0    Cross-origin resource sharing library for the Symfony HttpFoundation
guzzlehttp/guzzle                  7.9.3     Guzzle is a PHP HTTP client library
guzzlehttp/promises                2.2.0     Guzzle promises library
guzzlehttp/psr7                    2.7.1     PSR-7 message implementation that also provides common utility methods
guzzlehttp/uri-template            v1.0.4    A polyfill class for uri_template of PHP
laravel/framework                  v11.45.2  The Laravel Framework.
laravel/prompts                    v0.3.6    Add beautiful and user-friendly forms to your command-line applications.
laravel/sanctum                    v4.2.0    Laravel Sanctum provides a featherweight authentication system for SPAs and simple APIs.
laravel/serializable-closure       v2.0.4    Laravel Serializable Closure provides an easy and secure way to serialize closures in PHP.
laravel/socialite                  v5.23.0   Laravel wrapper around OAuth 1 & OAuth 2 libraries.
laravel/tinker                     v2.10.1   Powerful REPL for the Laravel framework.
laravel/ui                         v4.6.1    Laravel UI utilities and presets.
league/commonmark                  2.7.1     Highly-extensible PHP Markdown parser which fully supports the CommonMark spec and GitHub-Flavor...
league/config                      v1.2.0    Define configuration arrays with strict schemas and access values with dot notation
league/flysystem                   3.30.0    File storage abstraction for PHP
league/flysystem-local             3.30.0    Local filesystem adapter for Flysystem.
league/mime-type-detection         1.16.0    Mime-type detection for Flysystem
league/oauth1-client               v1.11.0   OAuth 1.0 Client Library
league/uri                         7.5.1     URI manipulation library
league/uri-interfaces              7.5.0     Common interfaces and classes for URI representation and interaction
simplesoftwareio/simple-qrcode     4.2.0     Simple QrCode is a QR code generator made for Laravel.
spatie/browsershot                 5.0.10    Convert a webpage to an image or pdf using headless Chrome
spatie/crawler                     8.4.3     Crawl all internal links found on a website
spatie/laravel-package-tools       1.92.7    Tools for creating Laravel packages
spatie/laravel-permission          6.21.0    Permission handling for Laravel 8.0 and up
spatie/laravel-sitemap             7.3.6     Create and generate sitemaps with ease
spatie/robots-txt                  2.5.1     Determine if a page may be crawled from robots.txt and robots meta tags
spatie/temporary-directory         2.3.0     Easily create, use and destroy temporary directories
symfony/clock                      v7.3.0    Decouples applications from the system clock
symfony/console                    v7.3.2    Eases the creation of beautiful and testable command line interfaces
symfony/css-selector               v7.3.0    Converts CSS selectors to XPath expressions
symfony/deprecation-contracts      v3.6.0    A generic function and convention to trigger deprecation notices
symfony/dom-crawler                v7.3.1    Eases DOM navigation for HTML and XML documents
symfony/error-handler              v7.3.2    Provides tools to manage errors and ease debugging PHP code
symfony/event-dispatcher           v7.3.0    Provides tools that allow your application components to communicate with each other by dispatch...
symfony/event-dispatcher-contracts v3.6.0    Generic abstractions related to dispatching event
symfony/finder                     v7.3.2    Finds files and directories via an intuitive fluent interface
symfony/http-foundation            v7.3.2    Defines an object-oriented layer for the HTTP specification
symfony/http-kernel                v7.3.2    Provides a structured process for converting a Request into a Response
symfony/mailer                     v7.3.2    Helps sending emails
symfony/mime                       v7.3.2    Allows manipulating MIME messages
symfony/polyfill-ctype             v1.32.0   Symfony polyfill for ctype functions
symfony/polyfill-intl-grapheme     v1.32.0   Symfony polyfill for intl's grapheme_* functions
symfony/polyfill-intl-idn          v1.32.0   Symfony polyfill for intl's idn_to_ascii and idn_to_utf8 functions
symfony/polyfill-intl-normalizer   v1.32.0   Symfony polyfill for intl's Normalizer class and related functions
symfony/polyfill-mbstring          v1.32.0   Symfony polyfill for the Mbstring extension
symfony/polyfill-php80             v1.32.0   Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions
symfony/polyfill-php83             v1.32.0   Symfony polyfill backporting some PHP 8.3+ features to lower PHP versions
symfony/polyfill-uuid              v1.32.0   Symfony polyfill for uuid functions
symfony/process                    v7.3.0    Executes commands in sub-processes
symfony/routing                    v7.3.2    Maps an HTTP request to a set of configuration variables
symfony/service-contracts          v3.6.0    Generic abstractions related to writing services
symfony/string                     v7.3.2    Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme ...
symfony/translation                v7.3.2    Provides tools to internationalize your application
symfony/translation-contracts      v3.6.0    Generic abstractions related to translation
symfony/uid                        v7.3.1    Provides an object-oriented API to generate and represent UIDs
symfony/var-dumper                 v7.3.2    Provides mechanisms for walking through any arbitrary PHP variable
